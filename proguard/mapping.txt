HttpUtils.HttpFetcher -> a.a:
    org.apache.http.client.HttpClient getHttpClient() -> a
    org.apache.http.HttpResponse uploadCollectedData(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    java.util.List paramBuilder(java.lang.String,java.lang.String,java.lang.String,boolean) -> a
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.graphics.drawable.Drawable mThemeImage -> mThemeImage
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.app.Activity access$300(android.support.v4.app.ActionBarDrawerToggle) -> access$300
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    android.support.v4.util.SimpleArrayMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.ContextCompatFroyo:
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    java.io.File getObbDir(android.content.Context) -> getObbDir
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.ContextCompatKitKat:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> IMPL
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.DrawableCompatKitKat:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> mDisplayManagerObj
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> mContext
    android.support.v4.media.TransportPerformer mCallbacks -> mCallbacks
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mView -> mView
    java.lang.Object mDispatcherState -> mDispatcherState
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> mController
    java.util.ArrayList mListeners -> mListeners
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> mTransportKeyCallback
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> mKeyEventCallback
    boolean isMediaKey(int) -> isMediaKey
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> getListeners
    void reportPlayingChanged() -> reportPlayingChanged
    void reportTransportControlsChanged() -> reportTransportControlsChanged
    void pushControllerState() -> pushControllerState
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> this$0
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> this$0
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.content.Context mContext -> mContext
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mTargetView -> mTargetView
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> mTransportCallback
    java.lang.String mReceiverAction -> mReceiverAction
    android.content.IntentFilter mReceiverFilter -> mReceiverFilter
    android.content.Intent mIntent -> mIntent
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> mWindowAttachListener
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> mWindowFocusListener
    android.content.BroadcastReceiver mMediaButtonReceiver -> mMediaButtonReceiver
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> mAudioFocusChangeListener
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    android.media.RemoteControlClient mRemoteControl -> mRemoteControl
    boolean mFocused -> mFocused
    int mPlayState -> mPlayState
    boolean mAudioFocused -> mAudioFocused
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void destroy() -> destroy
    void windowAttached() -> windowAttached
    void gainFocus() -> gainFocus
    void takeAudioFocus() -> takeAudioFocus
    void startPlaying() -> startPlaying
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> refreshState
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void dropAudioFocus() -> dropAudioFocus
    void loseFocus() -> loseFocus
    void windowDetached() -> windowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    int AUDIOFOCUS_GAIN -> AUDIOFOCUS_GAIN
    int AUDIOFOCUS_GAIN_TRANSIENT -> AUDIOFOCUS_GAIN_TRANSIENT
    int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK -> AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK
    int AUDIOFOCUS_LOSS -> AUDIOFOCUS_LOSS
    int AUDIOFOCUS_LOSS_TRANSIENT -> AUDIOFOCUS_LOSS_TRANSIENT
    int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK -> AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String TAG -> TAG
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.EnvironmentCompatKitKat:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> mImpl
    boolean systemSupportsPrint() -> systemSupportsPrint
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.PrintHelper$1:
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl:
    android.support.v4.print.PrintHelperKitkat mPrintHelper -> mPrintHelper
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.PrintHelper$PrintHelperStubImpl:
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_PRINT_SIZE -> MAX_PRINT_SIZE
    android.content.Context mContext -> mContext
    android.graphics.BitmapFactory$Options mDecodeOptions -> mDecodeOptions
    java.lang.Object mLock -> mLock
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> getMatrix
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri,int) -> loadConstrainedBitmap
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
    android.graphics.Matrix access$000(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int) -> access$000
    android.graphics.Bitmap access$200(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int) -> access$200
    java.lang.Object access$300(android.support.v4.print.PrintHelperKitkat) -> access$300
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.PrintHelperKitkat$1:
    android.print.PrintAttributes mAttributes -> mAttributes
    java.lang.String val$jobName -> val$jobName
    android.graphics.Bitmap val$bitmap -> val$bitmap
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
android.support.v4.print.PrintHelperKitkat$2 -> android.support.v4.print.PrintHelperKitkat$2:
    android.print.PrintAttributes mAttributes -> mAttributes
    android.os.AsyncTask loadBitmap -> loadBitmap
    android.graphics.Bitmap mBitmap -> mBitmap
    java.lang.String val$jobName -> val$jobName
    android.net.Uri val$imageFile -> val$imageFile
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void cancelLoad() -> cancelLoad
    void onFinish() -> onFinish
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void access$100(android.support.v4.print.PrintHelperKitkat$2) -> access$100
android.support.v4.print.PrintHelperKitkat$2$1 -> android.support.v4.print.PrintHelperKitkat$2$1:
    android.os.CancellationSignal val$cancellationSignal -> val$cancellationSignal
    android.print.PrintAttributes val$newPrintAttributes -> val$newPrintAttributes
    android.print.PrintAttributes val$oldPrintAttributes -> val$oldPrintAttributes
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> val$layoutResultCallback
    android.support.v4.print.PrintHelperKitkat$2 this$1 -> this$1
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.print.PrintHelperKitkat$2$1$1 -> android.support.v4.print.PrintHelperKitkat$2$1$1:
    android.support.v4.print.PrintHelperKitkat$2$1 this$2 -> this$2
    void onCancel() -> onCancel
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    char LRE -> LRE
    char RLE -> RLE
    char PDF -> PDF
    char LRM -> LRM
    char RLM -> RLM
    java.lang.String LRM_STRING -> LRM_STRING
    java.lang.String RLM_STRING -> RLM_STRING
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int DIR_LTR -> DIR_LTR
    int DIR_UNKNOWN -> DIR_UNKNOWN
    int DIR_RTL -> DIR_RTL
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    int getExitDir(java.lang.String) -> getExitDir
    int getEntryDir(java.lang.String) -> getEntryDir
    boolean access$000(java.util.Locale) -> access$000
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> access$100
    android.support.v4.text.BidiFormatter access$200() -> access$200
    android.support.v4.text.BidiFormatter access$300() -> access$300
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    void initialize(boolean) -> initialize
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    int DIR_TYPE_CACHE_SIZE -> DIR_TYPE_CACHE_SIZE
    byte[] DIR_TYPE_CACHE -> DIR_TYPE_CACHE
    java.lang.String text -> text
    boolean isHtml -> isHtml
    int length -> length
    int charIndex -> charIndex
    char lastChar -> lastChar
    int getEntryDir() -> getEntryDir
    int getExitDir() -> getExitDir
    byte getCachedDirectionality(char) -> getCachedDirectionality
    byte dirTypeForward() -> dirTypeForward
    byte dirTypeBackward() -> dirTypeBackward
    byte skipTagForward() -> skipTagForward
    byte skipTagBackward() -> skipTagBackward
    byte skipEntityForward() -> skipEntityForward
    byte skipEntityBackward() -> skipEntityBackward
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> IMPL
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetScriptMethod -> sGetScriptMethod
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int STATE_TRUE -> STATE_TRUE
    int STATE_FALSE -> STATE_FALSE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    int isRtlText(int) -> isRtlText
    int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    int access$100(int) -> access$100
    int access$200(int) -> access$200
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.TextDirectionHeuristicsCompat$1:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> mLookForRtl
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> INSTANCE_RTL
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> INSTANCE_LTR
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> INSTANCE
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> mAlgorithm
    boolean defaultIsRtl() -> defaultIsRtl
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> mDefaultIsRtl
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> INSTANCE
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> mCollections
    android.support.v4.util.MapCollections getCollection() -> getCollection
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> this$0
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> binarySearch
    int binarySearch(long[],int,long) -> binarySearch
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> mEntrySet
    android.support.v4.util.MapCollections$KeySet mKeySet -> mKeySet
    android.support.v4.util.MapCollections$ValuesCollection mValues -> mValues
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> mOffset
    int mSize -> mSize
    int mIndex -> mIndex
    boolean mCanRemove -> mCanRemove
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> mEnd
    int mIndex -> mIndex
    boolean mEntryValid -> mEntryValid
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    java.lang.Object[] mBaseCache -> mBaseCache
    int mBaseCacheSize -> mBaseCacheSize
    java.lang.Object[] mTwiceBaseCache -> mTwiceBaseCache
    int mTwiceBaseCacheSize -> mTwiceBaseCacheSize
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    int mSize -> mSize
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfNull() -> indexOfNull
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> IMPL
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> val$listener
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> mWrapped
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> IMPL
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.ScaleGestureDetectorCompat$1:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ScaleGestureDetectorCompatKitKat:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$KitKatViewCompatImpl:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ViewCompatEclairMr1:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.ViewGroupCompatJellybeanMR2:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> canScroll
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> IMPL
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    android.view.View mTarget -> mTarget
    java.lang.Runnable mRunnable -> mRunnable
    float[] mRelativeEdges -> mRelativeEdges
    float[] mMaximumEdges -> mMaximumEdges
    int mEdgeType -> mEdgeType
    int mActivationDelay -> mActivationDelay
    float[] mRelativeVelocity -> mRelativeVelocity
    float[] mMinimumVelocity -> mMinimumVelocity
    float[] mMaximumVelocity -> mMaximumVelocity
    boolean mAlreadyDelayed -> mAlreadyDelayed
    boolean mNeedsReset -> mNeedsReset
    boolean mNeedsCancel -> mNeedsCancel
    boolean mAnimating -> mAnimating
    boolean mEnabled -> mEnabled
    boolean mExclusive -> mExclusive
    int DEFAULT_EDGE_TYPE -> DEFAULT_EDGE_TYPE
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> DEFAULT_MINIMUM_VELOCITY_DIPS
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> DEFAULT_MAXIMUM_VELOCITY_DIPS
    float DEFAULT_MAXIMUM_EDGE -> DEFAULT_MAXIMUM_EDGE
    float DEFAULT_RELATIVE_EDGE -> DEFAULT_RELATIVE_EDGE
    float DEFAULT_RELATIVE_VELOCITY -> DEFAULT_RELATIVE_VELOCITY
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    int DEFAULT_RAMP_UP_DURATION -> DEFAULT_RAMP_UP_DURATION
    int DEFAULT_RAMP_DOWN_DURATION -> DEFAULT_RAMP_DOWN_DURATION
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> shouldAnimate
    void startAnimating() -> startAnimating
    void requestStop() -> requestStop
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    int constrain(int,int,int) -> constrain
    float constrain(float,float,float) -> constrain
    void cancelTargetTouch() -> cancelTargetTouch
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> access$100
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> access$200
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> access$202
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> access$300
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> access$400
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> access$102
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> access$500
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> access$502
    void access$600(android.support.v4.widget.AutoScrollHelper) -> access$600
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> access$700
    int access$800(int,int,int) -> access$800
    float access$900(float,float,float) -> access$900
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.AutoScrollHelper$1:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    int mRampUpDuration -> mRampUpDuration
    int mRampDownDuration -> mRampDownDuration
    float mTargetVelocityX -> mTargetVelocityX
    float mTargetVelocityY -> mTargetVelocityY
    long mStartTime -> mStartTime
    long mDeltaTime -> mDeltaTime
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    long mStopTime -> mStopTime
    float mStopValue -> mStopValue
    int mEffectiveRampDown -> mEffectiveRampDown
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> getValueAt
    float interpolateValue(float) -> interpolateValue
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    int MIN_SHOW_TIME -> MIN_SHOW_TIME
    int MIN_DELAY -> MIN_DELAY
    long mStartTime -> mStartTime
    boolean mPostedHide -> mPostedHide
    boolean mPostedShow -> mPostedShow
    boolean mDismissed -> mDismissed
    java.lang.Runnable mDelayedHide -> mDelayedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> removeCallbacks
    void hide() -> hide
    void show() -> show
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$002
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> access$102
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$202
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> access$300
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> access$100
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> mAbsGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    int[] mTempGlobalRect -> mTempGlobalRect
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.view.View mView -> mView
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> mNodeProvider
    int mFocusedVirtualViewId -> mFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> createNode
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    boolean manageFocusForChild(int,int,android.os.Bundle) -> manageFocusForChild
    boolean intersectVisibleToUser(android.graphics.Rect) -> intersectVisibleToUser
    boolean isAccessibilityFocused(int) -> isAccessibilityFocused
    boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> access$100
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> access$200
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> this$0
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> IMPL
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.ListPopupWindowCompatKitKat:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> IMPL
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$PopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.PopupMenuCompatKitKat:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> IMPL
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawable -> mShadowDrawable
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$900
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> access$1000
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
cn.trinea.android.common.R -> cn.trinea.android.common.R:
cn.trinea.android.common.R$attr -> cn.trinea.android.common.R$attr:
    int isAutoLoadOnBottom -> isAutoLoadOnBottom
    int isDropDownStyle -> isDropDownStyle
    int isOnBottomStyle -> isOnBottomStyle
cn.trinea.android.common.R$color -> cn.trinea.android.common.R$color:
    int drop_down_list_footer_font_color -> drop_down_list_footer_font_color
    int drop_down_list_header_font_color -> drop_down_list_header_font_color
    int drop_down_list_header_second_font_color -> drop_down_list_header_second_font_color
cn.trinea.android.common.R$dimen -> cn.trinea.android.common.R$dimen:
    int drop_down_list_footer_button_height -> drop_down_list_footer_button_height
    int drop_down_list_footer_button_margin_left -> drop_down_list_footer_button_margin_left
    int drop_down_list_footer_progress_bar_height -> drop_down_list_footer_progress_bar_height
    int drop_down_list_header_padding_bottom -> drop_down_list_header_padding_bottom
    int drop_down_list_header_padding_top -> drop_down_list_header_padding_top
    int drop_down_list_header_progress_bar_height -> drop_down_list_header_progress_bar_height
    int drop_down_list_header_release_min_distance -> drop_down_list_header_release_min_distance
cn.trinea.android.common.R$drawable -> cn.trinea.android.common.R$drawable:
    int drop_down_list_arrow -> drop_down_list_arrow
cn.trinea.android.common.R$id -> cn.trinea.android.common.R$id:
    int drop_down_list_footer_button -> drop_down_list_footer_button
    int drop_down_list_footer_progress_bar -> drop_down_list_footer_progress_bar
    int drop_down_list_header_default_text -> drop_down_list_header_default_text
    int drop_down_list_header_default_text_layout -> drop_down_list_header_default_text_layout
    int drop_down_list_header_image -> drop_down_list_header_image
    int drop_down_list_header_progress_bar -> drop_down_list_header_progress_bar
    int drop_down_list_header_second_text -> drop_down_list_header_second_text
cn.trinea.android.common.R$layout -> cn.trinea.android.common.R$layout:
    int drop_down_list_footer -> drop_down_list_footer
    int drop_down_list_header -> drop_down_list_header
cn.trinea.android.common.R$string -> cn.trinea.android.common.R$string:
    int drop_down_list_footer_default_text -> drop_down_list_footer_default_text
    int drop_down_list_footer_loading_text -> drop_down_list_footer_loading_text
    int drop_down_list_footer_no_more_text -> drop_down_list_footer_no_more_text
    int drop_down_list_header_default_text -> drop_down_list_header_default_text
    int drop_down_list_header_loading_text -> drop_down_list_header_loading_text
    int drop_down_list_header_pull_text -> drop_down_list_header_pull_text
    int drop_down_list_header_release_text -> drop_down_list_header_release_text
    int image_content -> image_content
cn.trinea.android.common.R$style -> cn.trinea.android.common.R$style:
    int drop_down_list_footer_font_style -> drop_down_list_footer_font_style
    int drop_down_list_footer_progress_bar_style -> drop_down_list_footer_progress_bar_style
    int drop_down_list_header_font_style -> drop_down_list_header_font_style
    int drop_down_list_header_progress_bar_style -> drop_down_list_header_progress_bar_style
    int drop_down_list_header_second_font_style -> drop_down_list_header_second_font_style
cn.trinea.android.common.R$styleable -> cn.trinea.android.common.R$styleable:
    int[] drop_down_list_attr -> drop_down_list_attr
    int drop_down_list_attr_isAutoLoadOnBottom -> drop_down_list_attr_isAutoLoadOnBottom
    int drop_down_list_attr_isDropDownStyle -> drop_down_list_attr_isDropDownStyle
    int drop_down_list_attr_isOnBottomStyle -> drop_down_list_attr_isOnBottomStyle
cn.trinea.android.common.constant.DbConstants -> cn.trinea.android.common.constant.DbConstants:
    java.lang.String DB_NAME -> DB_NAME
    int DB_VERSION -> DB_VERSION
    java.lang.String TERMINATOR -> TERMINATOR
    java.lang.StringBuffer CREATE_IMAGE_SDCARD_CACHE_TABLE_SQL -> CREATE_IMAGE_SDCARD_CACHE_TABLE_SQL
    java.lang.StringBuffer CREATE_IMAGE_SDCARD_CACHE_TABLE_INDEX_SQL -> CREATE_IMAGE_SDCARD_CACHE_TABLE_INDEX_SQL
    java.lang.String IMAGE_SDCARD_CACHE_TABLE_TABLE_NAME -> IMAGE_SDCARD_CACHE_TABLE_TABLE_NAME
    java.lang.String IMAGE_SDCARD_CACHE_TABLE_ID -> IMAGE_SDCARD_CACHE_TABLE_ID
    java.lang.String IMAGE_SDCARD_CACHE_TABLE_TAG -> IMAGE_SDCARD_CACHE_TABLE_TAG
    java.lang.String IMAGE_SDCARD_CACHE_TABLE_URL -> IMAGE_SDCARD_CACHE_TABLE_URL
    java.lang.String IMAGE_SDCARD_CACHE_TABLE_PATH -> IMAGE_SDCARD_CACHE_TABLE_PATH
    java.lang.String IMAGE_SDCARD_CACHE_TABLE_ENTER_TIME -> IMAGE_SDCARD_CACHE_TABLE_ENTER_TIME
    java.lang.String IMAGE_SDCARD_CACHE_TABLE_LAST_USED_TIME -> IMAGE_SDCARD_CACHE_TABLE_LAST_USED_TIME
    java.lang.String IMAGE_SDCARD_CACHE_TABLE_USED_COUNT -> IMAGE_SDCARD_CACHE_TABLE_USED_COUNT
    java.lang.String IMAGE_SDCARD_CACHE_TABLE_PRIORITY -> IMAGE_SDCARD_CACHE_TABLE_PRIORITY
    java.lang.String IMAGE_SDCARD_CACHE_TABLE_IS_EXPIRED -> IMAGE_SDCARD_CACHE_TABLE_IS_EXPIRED
    java.lang.String IMAGE_SDCARD_CACHE_TABLE_IS_FOREVER -> IMAGE_SDCARD_CACHE_TABLE_IS_FOREVER
    java.lang.String IMAGE_SDCARD_CACHE_TABLE_INDEX_TAG -> IMAGE_SDCARD_CACHE_TABLE_INDEX_TAG
    java.lang.String IMAGE_SDCARD_CACHE_TABLE_INDEX_URL -> IMAGE_SDCARD_CACHE_TABLE_INDEX_URL
    int IMAGE_SDCARD_CACHE_TABLE_ID_INDEX -> IMAGE_SDCARD_CACHE_TABLE_ID_INDEX
    int IMAGE_SDCARD_CACHE_TABLE_TAG_INDEX -> IMAGE_SDCARD_CACHE_TABLE_TAG_INDEX
    int IMAGE_SDCARD_CACHE_TABLE_URL_INDEX -> IMAGE_SDCARD_CACHE_TABLE_URL_INDEX
    int IMAGE_SDCARD_CACHE_TABLE_PATH_INDEX -> IMAGE_SDCARD_CACHE_TABLE_PATH_INDEX
    int IMAGE_SDCARD_CACHE_TABLE_ENTER_TIME_INDEX -> IMAGE_SDCARD_CACHE_TABLE_ENTER_TIME_INDEX
    int IMAGE_SDCARD_CACHE_TABLE_LAST_USED_TIME_INDEX -> IMAGE_SDCARD_CACHE_TABLE_LAST_USED_TIME_INDEX
    int IMAGE_SDCARD_CACHE_TABLE_USED_COUNT_INDEX -> IMAGE_SDCARD_CACHE_TABLE_USED_COUNT_INDEX
    int IMAGE_SDCARD_CACHE_TABLE_PRIORITY_INDEX -> IMAGE_SDCARD_CACHE_TABLE_PRIORITY_INDEX
    int IMAGE_SDCARD_CACHE_TABLE_IS_EXPIRED_INDEX -> IMAGE_SDCARD_CACHE_TABLE_IS_EXPIRED_INDEX
    int IMAGE_SDCARD_CACHE_TABLE_IS_FOREVER_INDEX -> IMAGE_SDCARD_CACHE_TABLE_IS_FOREVER_INDEX
    java.lang.StringBuffer CREATE_HTTP_CACHE_TABLE_SQL -> CREATE_HTTP_CACHE_TABLE_SQL
    java.lang.StringBuffer CREATE_HTTP_CACHE_TABLE_INDEX_SQL -> CREATE_HTTP_CACHE_TABLE_INDEX_SQL
    java.lang.StringBuffer CREATE_HTTP_CACHE_TABLE_UNIQUE_INDEX -> CREATE_HTTP_CACHE_TABLE_UNIQUE_INDEX
    java.lang.String HTTP_CACHE_TABLE_TABLE_NAME -> HTTP_CACHE_TABLE_TABLE_NAME
    java.lang.String HTTP_CACHE_TABLE_ID -> HTTP_CACHE_TABLE_ID
    java.lang.String HTTP_CACHE_TABLE_URL -> HTTP_CACHE_TABLE_URL
    java.lang.String HTTP_CACHE_TABLE_RESPONSE -> HTTP_CACHE_TABLE_RESPONSE
    java.lang.String HTTP_CACHE_TABLE_EXPIRES -> HTTP_CACHE_TABLE_EXPIRES
    java.lang.String HTTP_CACHE_TABLE_CREATE_TIME -> HTTP_CACHE_TABLE_CREATE_TIME
    java.lang.String HTTP_CACHE_TABLE_TYPE -> HTTP_CACHE_TABLE_TYPE
    java.lang.String HTTP_CACHE_TABLE_UNIQUE_INDEX_URL -> HTTP_CACHE_TABLE_UNIQUE_INDEX_URL
    java.lang.String HTTP_CACHE_TABLE_INDEX_TYPE -> HTTP_CACHE_TABLE_INDEX_TYPE
    int HTTP_CACHE_TABLE_ID_INDEX -> HTTP_CACHE_TABLE_ID_INDEX
    int HTTP_CACHE_TABLE_URL_INDEX -> HTTP_CACHE_TABLE_URL_INDEX
    int HTTP_CACHE_TABLE_RESPONSE_INDEX -> HTTP_CACHE_TABLE_RESPONSE_INDEX
    int HTTP_CACHE_TABLE_EXPIRES_INDEX -> HTTP_CACHE_TABLE_EXPIRES_INDEX
    int HTTP_CACHE_TABLE_CREATE_TIME_INDEX -> HTTP_CACHE_TABLE_CREATE_TIME_INDEX
    int HTTP_CACHE_TABLE_TYPE_INDEX -> HTTP_CACHE_TABLE_TYPE_INDEX
cn.trinea.android.common.constant.HttpConstants -> cn.trinea.android.common.constant.HttpConstants:
    java.lang.String EXPIRES -> EXPIRES
    java.lang.String CACHE_CONTROL -> CACHE_CONTROL
cn.trinea.android.common.dao.HttpCacheDao -> cn.trinea.android.common.dao.HttpCacheDao:
    long insertHttpResponse(cn.trinea.android.common.entity.HttpResponse) -> insertHttpResponse
    cn.trinea.android.common.entity.HttpResponse getHttpResponse(java.lang.String) -> getHttpResponse
    java.util.Map getHttpResponsesByType(int) -> getHttpResponsesByType
    int deleteAllHttpResponse() -> deleteAllHttpResponse
cn.trinea.android.common.dao.ImageSDCardCacheDao -> cn.trinea.android.common.dao.ImageSDCardCacheDao:
    boolean putIntoImageSDCardCache(cn.trinea.android.common.service.impl.ImageSDCardCache,java.lang.String) -> putIntoImageSDCardCache
    boolean deleteAndInsertImageSDCardCache(cn.trinea.android.common.service.impl.ImageSDCardCache,java.lang.String) -> deleteAndInsertImageSDCardCache
cn.trinea.android.common.dao.impl.HttpCacheDaoImpl -> cn.trinea.android.common.dao.impl.HttpCacheDaoImpl:
    cn.trinea.android.common.util.SqliteUtils sqliteUtils -> sqliteUtils
    long insertHttpResponse(cn.trinea.android.common.entity.HttpResponse) -> insertHttpResponse
    cn.trinea.android.common.entity.HttpResponse getHttpResponse(java.lang.String) -> getHttpResponse
    java.util.Map getHttpResponsesByType(int) -> getHttpResponsesByType
    int deleteAllHttpResponse() -> deleteAllHttpResponse
    cn.trinea.android.common.entity.HttpResponse cursorToHttpResponse(android.database.Cursor,java.lang.String) -> cursorToHttpResponse
    android.content.ContentValues httpResponseToCV(cn.trinea.android.common.entity.HttpResponse) -> httpResponseToCV
cn.trinea.android.common.dao.impl.ImageSDCardCacheDaoImpl -> cn.trinea.android.common.dao.impl.ImageSDCardCacheDaoImpl:
    cn.trinea.android.common.util.SqliteUtils sqliteUtils -> sqliteUtils
    boolean putIntoImageSDCardCache(cn.trinea.android.common.service.impl.ImageSDCardCache,java.lang.String) -> putIntoImageSDCardCache
    boolean deleteAndInsertImageSDCardCache(cn.trinea.android.common.service.impl.ImageSDCardCache,java.lang.String) -> deleteAndInsertImageSDCardCache
    android.content.ContentValues cacheObjectToCV(java.lang.String,java.lang.String,cn.trinea.android.common.entity.CacheObject) -> cacheObjectToCV
cn.trinea.android.common.entity.CacheObject -> cn.trinea.android.common.entity.CacheObject:
    long serialVersionUID -> serialVersionUID
    long enterTime -> enterTime
    long lastUsedTime -> lastUsedTime
    long usedCount -> usedCount
    int priority -> priority
    boolean isExpired -> isExpired
    boolean isForever -> isForever
    java.lang.Object data -> data
    long getEnterTime() -> getEnterTime
    void setEnterTime(long) -> setEnterTime
    long getLastUsedTime() -> getLastUsedTime
    void setLastUsedTime(long) -> setLastUsedTime
    long getUsedCount() -> getUsedCount
    void setUsedCount(long) -> setUsedCount
    long getAndIncrementUsedCount() -> getAndIncrementUsedCount
    int getPriority() -> getPriority
    void setPriority(int) -> setPriority
    boolean isExpired() -> isExpired
    void setExpired(boolean) -> setExpired
    boolean isForever() -> isForever
    void setForever(boolean) -> setForever
    java.lang.Object getData() -> getData
    void setData(java.lang.Object) -> setData
    int compareTo(cn.trinea.android.common.entity.CacheObject) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
cn.trinea.android.common.entity.FailedReason -> cn.trinea.android.common.entity.FailedReason:
    cn.trinea.android.common.entity.FailedReason$FailedType failedType -> failedType
    java.lang.Throwable cause -> cause
    cn.trinea.android.common.entity.FailedReason$FailedType getFailedType() -> getFailedType
    java.lang.Throwable getCause() -> getCause
cn.trinea.android.common.entity.FailedReason$FailedType -> cn.trinea.android.common.entity.FailedReason$FailedType:
    cn.trinea.android.common.entity.FailedReason$FailedType ERROR_IO -> ERROR_IO
    cn.trinea.android.common.entity.FailedReason$FailedType ERROR_OUT_OF_MEMORY -> ERROR_OUT_OF_MEMORY
    cn.trinea.android.common.entity.FailedReason$FailedType ERROR_UNKNOWN -> ERROR_UNKNOWN
    cn.trinea.android.common.entity.FailedReason$FailedType[] ENUM$VALUES -> ENUM$VALUES
    cn.trinea.android.common.entity.FailedReason$FailedType[] values() -> values
    cn.trinea.android.common.entity.FailedReason$FailedType valueOf(java.lang.String) -> valueOf
cn.trinea.android.common.entity.HttpRequest -> cn.trinea.android.common.entity.HttpRequest:
    java.lang.String url -> url
    int connectTimeout -> connectTimeout
    int readTimeout -> readTimeout
    java.util.Map parasMap -> parasMap
    java.util.Map requestProperties -> requestProperties
    java.lang.String getUrl() -> getUrl
    int getConnectTimeout() -> getConnectTimeout
    void setConnectTimeout(int) -> setConnectTimeout
    int getReadTimeout() -> getReadTimeout
    void setReadTimeout(int) -> setReadTimeout
    java.util.Map getParasMap() -> getParasMap
    void setParasMap(java.util.Map) -> setParasMap
    java.lang.String getParas() -> getParas
    void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
    java.lang.String getRequestProperty(java.lang.String) -> getRequestProperty
    void setUserAgent(java.lang.String) -> setUserAgent
    java.util.Map getRequestProperties() -> getRequestProperties
    void setRequestProperties(java.util.Map) -> setRequestProperties
cn.trinea.android.common.entity.HttpResponse -> cn.trinea.android.common.entity.HttpResponse:
    java.lang.String url -> url
    java.lang.String responseBody -> responseBody
    java.util.Map responseHeaders -> responseHeaders
    int type -> type
    long expiredTime -> expiredTime
    boolean isInCache -> isInCache
    boolean isInitExpiredTime -> isInitExpiredTime
    int responseCode -> responseCode
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getResponseBody() -> getResponseBody
    void setResponseBody(java.lang.String) -> setResponseBody
    int getResponseCode() -> getResponseCode
    void setResponseCode(int) -> setResponseCode
    java.util.Map getResponseHeaders() -> getResponseHeaders
    void setResponseHeaders(java.util.Map) -> setResponseHeaders
    int getType() -> getType
    void setType(int) -> setType
    void setExpiredTime(long) -> setExpiredTime
    long getExpiredTime() -> getExpiredTime
    boolean isExpired() -> isExpired
    boolean isInCache() -> isInCache
    cn.trinea.android.common.entity.HttpResponse setInCache(boolean) -> setInCache
    java.lang.String getExpiresHeader() -> getExpiresHeader
    long getCacheControlMaxAge() -> getCacheControlMaxAge
    long getExpiresInMillis() -> getExpiresInMillis
    void setResponseHeader(java.lang.String,java.lang.String) -> setResponseHeader
    java.lang.Object getResponseHeader(java.lang.String) -> getResponseHeader
cn.trinea.android.common.entity.PatchResult -> cn.trinea.android.common.entity.PatchResult:
    int status -> status
    java.lang.String message -> message
    int getStatus() -> getStatus
    void setStatus(int) -> setStatus
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
cn.trinea.android.common.service.Cache -> cn.trinea.android.common.service.Cache:
    int getSize() -> getSize
    cn.trinea.android.common.entity.CacheObject get(java.lang.Object) -> get
    cn.trinea.android.common.entity.CacheObject put(java.lang.Object,java.lang.Object) -> put
    cn.trinea.android.common.entity.CacheObject put(java.lang.Object,cn.trinea.android.common.entity.CacheObject) -> put
    void putAll(cn.trinea.android.common.service.Cache) -> putAll
    boolean containsKey(java.lang.Object) -> containsKey
    cn.trinea.android.common.entity.CacheObject remove(java.lang.Object) -> remove
    void clear() -> clear
    double getHitRate() -> getHitRate
    java.util.Set keySet() -> keySet
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
cn.trinea.android.common.service.CacheFullRemoveType -> cn.trinea.android.common.service.CacheFullRemoveType:
    int compare(cn.trinea.android.common.entity.CacheObject,cn.trinea.android.common.entity.CacheObject) -> compare
cn.trinea.android.common.service.FileNameRule -> cn.trinea.android.common.service.FileNameRule:
    java.lang.String getFileName(java.lang.String) -> getFileName
cn.trinea.android.common.service.HttpCache -> cn.trinea.android.common.service.HttpCache:
    android.content.Context context -> context
    java.util.Map cache -> cache
    cn.trinea.android.common.dao.HttpCacheDao httpCacheDao -> httpCacheDao
    int type -> type
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    void initData(int) -> initData
    cn.trinea.android.common.entity.HttpResponse httpGet(cn.trinea.android.common.entity.HttpRequest) -> httpGet
    void httpGet(java.lang.String,cn.trinea.android.common.service.HttpCache$HttpCacheListener) -> httpGet
    void httpGet(cn.trinea.android.common.entity.HttpRequest,cn.trinea.android.common.service.HttpCache$HttpCacheListener) -> httpGet
    cn.trinea.android.common.entity.HttpResponse httpGet(java.lang.String) -> httpGet
    java.lang.String httpGetString(java.lang.String) -> httpGetString
    cn.trinea.android.common.entity.HttpResponse httpGetString(cn.trinea.android.common.entity.HttpRequest) -> httpGetString
    boolean containsKey(java.lang.String) -> containsKey
    boolean isExpired(java.lang.String) -> isExpired
    void clear() -> clear
    int getType() -> getType
    cn.trinea.android.common.entity.HttpResponse putIntoCache(cn.trinea.android.common.entity.HttpResponse) -> putIntoCache
    cn.trinea.android.common.entity.HttpResponse getFromCache(java.lang.String) -> getFromCache
cn.trinea.android.common.service.HttpCache$HttpCacheListener -> cn.trinea.android.common.service.HttpCache$HttpCacheListener:
    void onPreGet() -> onPreGet
    void onPostGet(cn.trinea.android.common.entity.HttpResponse,boolean) -> onPostGet
cn.trinea.android.common.service.HttpCache$HttpCacheRequestAsyncTask -> cn.trinea.android.common.service.HttpCache$HttpCacheRequestAsyncTask:
    cn.trinea.android.common.service.HttpCache$HttpCacheListener listener -> listener
    cn.trinea.android.common.service.HttpCache this$0 -> this$0
    cn.trinea.android.common.entity.HttpResponse doInBackground(cn.trinea.android.common.entity.HttpRequest[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(cn.trinea.android.common.entity.HttpResponse) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.trinea.android.common.service.HttpCache$HttpCacheStringAsyncTask -> cn.trinea.android.common.service.HttpCache$HttpCacheStringAsyncTask:
    cn.trinea.android.common.service.HttpCache$HttpCacheListener listener -> listener
    cn.trinea.android.common.service.HttpCache this$0 -> this$0
    cn.trinea.android.common.entity.HttpResponse doInBackground(java.lang.String[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(cn.trinea.android.common.entity.HttpResponse) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.trinea.android.common.service.impl.FileNameRuleCurrentTime -> cn.trinea.android.common.service.impl.FileNameRuleCurrentTime:
    long serialVersionUID -> serialVersionUID
    cn.trinea.android.common.service.impl.FileNameRuleCurrentTime$TimeRule timeRule -> timeRule
    int[] $SWITCH_TABLE$cn$trinea$android$common$service$impl$FileNameRuleCurrentTime$TimeRule -> $SWITCH_TABLE$cn$trinea$android$common$service$impl$FileNameRuleCurrentTime$TimeRule
    java.lang.String getFileName(java.lang.String) -> getFileName
    int[] $SWITCH_TABLE$cn$trinea$android$common$service$impl$FileNameRuleCurrentTime$TimeRule() -> $SWITCH_TABLE$cn$trinea$android$common$service$impl$FileNameRuleCurrentTime$TimeRule
cn.trinea.android.common.service.impl.FileNameRuleCurrentTime$TimeRule -> cn.trinea.android.common.service.impl.FileNameRuleCurrentTime$TimeRule:
    cn.trinea.android.common.service.impl.FileNameRuleCurrentTime$TimeRule YEAR -> YEAR
    cn.trinea.android.common.service.impl.FileNameRuleCurrentTime$TimeRule DAY_OF_MONTH -> DAY_OF_MONTH
    cn.trinea.android.common.service.impl.FileNameRuleCurrentTime$TimeRule MILLISECOND -> MILLISECOND
    cn.trinea.android.common.service.impl.FileNameRuleCurrentTime$TimeRule HOUR_OF_DAY_TO_MILLIS -> HOUR_OF_DAY_TO_MILLIS
    cn.trinea.android.common.service.impl.FileNameRuleCurrentTime$TimeRule HOUR_OF_DAY_TO_SECONDS -> HOUR_OF_DAY_TO_SECONDS
    cn.trinea.android.common.service.impl.FileNameRuleCurrentTime$TimeRule HOUR_OF_DAY_TO_MINUTES -> HOUR_OF_DAY_TO_MINUTES
    cn.trinea.android.common.service.impl.FileNameRuleCurrentTime$TimeRule HOUR_TO_MILLIS -> HOUR_TO_MILLIS
    cn.trinea.android.common.service.impl.FileNameRuleCurrentTime$TimeRule MINUTE_TO_SECONDS -> MINUTE_TO_SECONDS
    cn.trinea.android.common.service.impl.FileNameRuleCurrentTime$TimeRule TO_MILLIS -> TO_MILLIS
    cn.trinea.android.common.service.impl.FileNameRuleCurrentTime$TimeRule TO_SECONDS -> TO_SECONDS
    cn.trinea.android.common.service.impl.FileNameRuleCurrentTime$TimeRule[] ENUM$VALUES -> ENUM$VALUES
    cn.trinea.android.common.service.impl.FileNameRuleCurrentTime$TimeRule[] values() -> values
    cn.trinea.android.common.service.impl.FileNameRuleCurrentTime$TimeRule valueOf(java.lang.String) -> valueOf
cn.trinea.android.common.service.impl.FileNameRuleImageUrl -> cn.trinea.android.common.service.impl.FileNameRuleImageUrl:
    long serialVersionUID -> serialVersionUID
    java.lang.String DEFAULT_FILE_NAME -> DEFAULT_FILE_NAME
    int MAX_FILE_NAME_LENGTH -> MAX_FILE_NAME_LENGTH
    java.lang.String fileExtension -> fileExtension
    java.lang.String getFileName(java.lang.String) -> getFileName
    cn.trinea.android.common.service.impl.FileNameRuleImageUrl setFileExtension(java.lang.String) -> setFileExtension
cn.trinea.android.common.service.impl.ImageCache -> cn.trinea.android.common.service.impl.ImageCache:
    long serialVersionUID -> serialVersionUID
    cn.trinea.android.common.service.impl.ImageSDCardCache secondaryCache -> secondaryCache
    int compressSize -> compressSize
    cn.trinea.android.common.service.impl.ImageCache$CompressListener compressListener -> compressListener
    java.lang.String DEFAULT_CACHE_FOLDER -> DEFAULT_CACHE_FOLDER
    int getCompressSize() -> getCompressSize
    void setCompressSize(int) -> setCompressSize
    void setCompressListener(cn.trinea.android.common.service.impl.ImageCache$CompressListener) -> setCompressListener
    cn.trinea.android.common.service.impl.ImageCache$CompressListener getCompressListener() -> getCompressListener
    int getHttpReadTimeOut() -> getHttpReadTimeOut
    void setHttpReadTimeOut(int) -> setHttpReadTimeOut
    void clear() -> clear
    void setForwardCacheNumber(int) -> setForwardCacheNumber
    void setBackwardCacheNumber(int) -> setBackwardCacheNumber
    int getAllowedNetworkTypes() -> getAllowedNetworkTypes
    void setAllowedNetworkTypes(int) -> setAllowedNetworkTypes
    boolean isCheckNetwork() -> isCheckNetwork
    void setCheckNetwork(boolean) -> setCheckNetwork
    boolean checkIsNetworkTypeAllowed() -> checkIsNetworkTypeAllowed
    android.content.Context getContext() -> getContext
    void setContext(android.content.Context) -> setContext
    void setRequestProperties(java.util.Map) -> setRequestProperties
    java.util.Map getRequestProperties() -> getRequestProperties
    void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
    java.lang.String getCacheFolder() -> getCacheFolder
    void setCacheFolder(java.lang.String) -> setCacheFolder
    cn.trinea.android.common.service.FileNameRule getFileNameRule() -> getFileNameRule
    void setFileNameRule(cn.trinea.android.common.service.FileNameRule) -> setFileNameRule
    void initData(android.content.Context,java.lang.String) -> initData
    void deleteUnusedFiles() -> deleteUnusedFiles
    boolean loadDataFromDb(android.content.Context,java.lang.String) -> loadDataFromDb
    boolean saveDataToDb(android.content.Context,java.lang.String) -> saveDataToDb
    java.lang.String getImagePath(java.lang.String) -> getImagePath
    void shutdown() -> shutdown
    java.util.List shutdownNow() -> shutdownNow
    cn.trinea.android.common.service.impl.PreloadDataCache$OnGetDataListener getOnGetImageListenerOfPrimaryCache() -> getOnGetImageListenerOfPrimaryCache
    void setOnGetImageListenerOfPrimaryCache(cn.trinea.android.common.service.impl.PreloadDataCache$OnGetDataListener) -> setOnGetImageListenerOfPrimaryCache
    cn.trinea.android.common.service.impl.PreloadDataCache$OnGetDataListener getOnGetImageListenerOfSecondaryCache() -> getOnGetImageListenerOfSecondaryCache
    void setOnGetImageListenerOfSecondaryCache(cn.trinea.android.common.service.impl.PreloadDataCache$OnGetDataListener) -> setOnGetImageListenerOfSecondaryCache
    cn.trinea.android.common.service.CacheFullRemoveType getCacheFullRemoveTypeOfSecondaryCache() -> getCacheFullRemoveTypeOfSecondaryCache
    void setCacheFullRemoveTypeOfSecondaryCache(cn.trinea.android.common.service.CacheFullRemoveType) -> setCacheFullRemoveTypeOfSecondaryCache
    cn.trinea.android.common.service.impl.ImageSDCardCache access$0(cn.trinea.android.common.service.impl.ImageCache) -> access$0
    cn.trinea.android.common.service.impl.ImageCache$CompressListener access$1(cn.trinea.android.common.service.impl.ImageCache) -> access$1
    void access$2(cn.trinea.android.common.service.impl.ImageCache,int) -> access$2
    int access$3(cn.trinea.android.common.service.impl.ImageCache) -> access$3
cn.trinea.android.common.service.impl.ImageCache$1 -> cn.trinea.android.common.service.impl.ImageCache$1:
    long serialVersionUID -> serialVersionUID
    cn.trinea.android.common.service.impl.ImageCache this$0 -> this$0
    cn.trinea.android.common.entity.CacheObject onGetData(java.lang.String) -> onGetData
    cn.trinea.android.common.entity.CacheObject onGetData(java.lang.Object) -> onGetData
cn.trinea.android.common.service.impl.ImageCache$CompressListener -> cn.trinea.android.common.service.impl.ImageCache$CompressListener:
    int getCompressSize(java.lang.String) -> getCompressSize
cn.trinea.android.common.service.impl.ImageMemoryCache -> cn.trinea.android.common.service.impl.ImageMemoryCache:
    long serialVersionUID -> serialVersionUID
    java.lang.String TAG -> TAG
    cn.trinea.android.common.service.impl.ImageMemoryCache$OnImageCallbackListener onImageCallbackListener -> onImageCallbackListener
    int httpReadTimeOut -> httpReadTimeOut
    boolean isOpenWaitingQueue -> isOpenWaitingQueue
    java.util.Map requestProperties -> requestProperties
    int DEFAULT_MAX_SIZE -> DEFAULT_MAX_SIZE
    int WHAT_GET_IMAGE_SUCCESS -> WHAT_GET_IMAGE_SUCCESS
    int WHAT_GET_IMAGE_FAILED -> WHAT_GET_IMAGE_FAILED
    java.util.concurrent.ExecutorService threadPool -> threadPool
    java.util.Map viewMap -> viewMap
    java.util.Map viewSetMap -> viewSetMap
    android.os.Handler handler -> handler
    boolean get(java.lang.String,android.view.View) -> get
    boolean get(java.lang.String,java.util.List,android.view.View) -> get
    cn.trinea.android.common.service.impl.ImageMemoryCache$OnImageCallbackListener getOnImageCallbackListener() -> getOnImageCallbackListener
    void setOnImageCallbackListener(cn.trinea.android.common.service.impl.ImageMemoryCache$OnImageCallbackListener) -> setOnImageCallbackListener
    int getHttpReadTimeOut() -> getHttpReadTimeOut
    void setHttpReadTimeOut(int) -> setHttpReadTimeOut
    boolean isOpenWaitingQueue() -> isOpenWaitingQueue
    void setOpenWaitingQueue(boolean) -> setOpenWaitingQueue
    void setRequestProperties(java.util.Map) -> setRequestProperties
    java.util.Map getRequestProperties() -> getRequestProperties
    void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
    void shutdown() -> shutdown
    java.util.List shutdownNow() -> shutdownNow
    void onGetSuccess(java.lang.String,android.graphics.Bitmap,android.view.View,boolean) -> onGetSuccess
    void startGetImageThread(java.lang.String,java.util.List) -> startGetImageThread
    cn.trinea.android.common.service.impl.PreloadDataCache$OnGetDataListener getDefaultOnGetImageListener() -> getDefaultOnGetImageListener
    int getDefaultMaxSize() -> getDefaultMaxSize
    cn.trinea.android.common.service.impl.ImageMemoryCache$OnImageCallbackListener access$0(cn.trinea.android.common.service.impl.ImageMemoryCache) -> access$0
    boolean access$1(cn.trinea.android.common.service.impl.ImageMemoryCache) -> access$1
    java.util.Map access$2(cn.trinea.android.common.service.impl.ImageMemoryCache) -> access$2
    void access$3(cn.trinea.android.common.service.impl.ImageMemoryCache,java.lang.String,android.graphics.Bitmap,android.view.View,boolean) -> access$3
    java.util.Map access$4(cn.trinea.android.common.service.impl.ImageMemoryCache) -> access$4
    android.os.Handler access$5(cn.trinea.android.common.service.impl.ImageMemoryCache) -> access$5
    int access$6(cn.trinea.android.common.service.impl.ImageMemoryCache) -> access$6
    java.util.Map access$7(cn.trinea.android.common.service.impl.ImageMemoryCache) -> access$7
cn.trinea.android.common.service.impl.ImageMemoryCache$1 -> cn.trinea.android.common.service.impl.ImageMemoryCache$1:
    cn.trinea.android.common.service.impl.ImageMemoryCache this$0 -> this$0
    java.lang.String val$imageUrl -> val$imageUrl
    java.util.List val$urlList -> val$urlList
    void run() -> run
cn.trinea.android.common.service.impl.ImageMemoryCache$2 -> cn.trinea.android.common.service.impl.ImageMemoryCache$2:
    long serialVersionUID -> serialVersionUID
    cn.trinea.android.common.service.impl.ImageMemoryCache this$0 -> this$0
    cn.trinea.android.common.entity.CacheObject onGetData(java.lang.String) -> onGetData
    cn.trinea.android.common.entity.CacheObject onGetData(java.lang.Object) -> onGetData
cn.trinea.android.common.service.impl.ImageMemoryCache$MessageObject -> cn.trinea.android.common.service.impl.ImageMemoryCache$MessageObject:
    java.lang.String imageUrl -> imageUrl
    android.graphics.Bitmap bitmap -> bitmap
    cn.trinea.android.common.entity.FailedReason failedReason -> failedReason
    cn.trinea.android.common.service.impl.ImageMemoryCache this$0 -> this$0
cn.trinea.android.common.service.impl.ImageMemoryCache$MyHandler -> cn.trinea.android.common.service.impl.ImageMemoryCache$MyHandler:
    cn.trinea.android.common.service.impl.ImageMemoryCache this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.trinea.android.common.service.impl.ImageMemoryCache$OnImageCallbackListener -> cn.trinea.android.common.service.impl.ImageMemoryCache$OnImageCallbackListener:
    void onPreGet(java.lang.String,android.view.View) -> onPreGet
    void onGetNotInCache(java.lang.String,android.view.View) -> onGetNotInCache
    void onGetSuccess(java.lang.String,android.graphics.Bitmap,android.view.View,boolean) -> onGetSuccess
    void onGetFailed(java.lang.String,android.graphics.Bitmap,android.view.View,cn.trinea.android.common.entity.FailedReason) -> onGetFailed
cn.trinea.android.common.service.impl.ImageSDCardCache -> cn.trinea.android.common.service.impl.ImageSDCardCache:
    long serialVersionUID -> serialVersionUID
    java.lang.String TAG -> TAG
    cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener onImageSDCallbackListener -> onImageSDCallbackListener
    java.lang.String cacheFolder -> cacheFolder
    cn.trinea.android.common.service.FileNameRule fileNameRule -> fileNameRule
    int httpReadTimeOut -> httpReadTimeOut
    boolean isOpenWaitingQueue -> isOpenWaitingQueue
    java.util.Map requestProperties -> requestProperties
    int DEFAULT_MAX_SIZE -> DEFAULT_MAX_SIZE
    java.lang.String DEFAULT_CACHE_FOLDER -> DEFAULT_CACHE_FOLDER
    int WHAT_GET_IMAGE_SUCCESS -> WHAT_GET_IMAGE_SUCCESS
    int WHAT_GET_IMAGE_FAILED -> WHAT_GET_IMAGE_FAILED
    java.util.concurrent.ExecutorService threadPool -> threadPool
    java.util.Map viewMap -> viewMap
    java.util.Map viewSetMap -> viewSetMap
    android.os.Handler handler -> handler
    boolean get(java.lang.String,android.view.View) -> get
    boolean get(java.lang.String,java.util.List,android.view.View) -> get
    java.lang.String getCacheFolder() -> getCacheFolder
    void setCacheFolder(java.lang.String) -> setCacheFolder
    cn.trinea.android.common.service.FileNameRule getFileNameRule() -> getFileNameRule
    void setFileNameRule(cn.trinea.android.common.service.FileNameRule) -> setFileNameRule
    cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener getOnImageSDCallbackListener() -> getOnImageSDCallbackListener
    void setOnImageSDCallbackListener(cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener) -> setOnImageSDCallbackListener
    int getHttpReadTimeOut() -> getHttpReadTimeOut
    void setHttpReadTimeOut(int) -> setHttpReadTimeOut
    boolean isOpenWaitingQueue() -> isOpenWaitingQueue
    void setOpenWaitingQueue(boolean) -> setOpenWaitingQueue
    void setRequestProperties(java.util.Map) -> setRequestProperties
    java.util.Map getRequestProperties() -> getRequestProperties
    void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
    void shutdown() -> shutdown
    java.util.List shutdownNow() -> shutdownNow
    void onGetSuccess(java.lang.String,java.lang.String,android.view.View,boolean) -> onGetSuccess
    void startGetImageThread(java.lang.String,java.util.List) -> startGetImageThread
    cn.trinea.android.common.entity.CacheObject fullRemoveOne() -> fullRemoveOne
    cn.trinea.android.common.entity.CacheObject remove(java.lang.String) -> remove
    void clear() -> clear
    void deleteUnusedFiles() -> deleteUnusedFiles
    void initData(android.content.Context,java.lang.String) -> initData
    boolean loadDataFromDb(android.content.Context,java.lang.String) -> loadDataFromDb
    boolean saveDataToDb(android.content.Context,java.lang.String) -> saveDataToDb
    boolean loadDataFromDb(android.content.Context,cn.trinea.android.common.service.impl.ImageSDCardCache,java.lang.String) -> loadDataFromDb
    boolean saveDataToDb(android.content.Context,cn.trinea.android.common.service.impl.ImageSDCardCache,java.lang.String) -> saveDataToDb
    java.lang.String getImagePath(java.lang.String) -> getImagePath
    boolean deleteFile(java.lang.String) -> deleteFile
    cn.trinea.android.common.service.impl.PreloadDataCache$OnGetDataListener getDefaultOnGetImageListener() -> getDefaultOnGetImageListener
    int getDefaultMaxSize() -> getDefaultMaxSize
    cn.trinea.android.common.entity.CacheObject remove(java.lang.Object) -> remove
    cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener access$1(cn.trinea.android.common.service.impl.ImageSDCardCache) -> access$1
    boolean access$2(cn.trinea.android.common.service.impl.ImageSDCardCache) -> access$2
    java.util.Map access$3(cn.trinea.android.common.service.impl.ImageSDCardCache) -> access$3
    void access$4(cn.trinea.android.common.service.impl.ImageSDCardCache,java.lang.String,java.lang.String,android.view.View,boolean) -> access$4
    java.util.Map access$5(cn.trinea.android.common.service.impl.ImageSDCardCache) -> access$5
    android.os.Handler access$6(cn.trinea.android.common.service.impl.ImageSDCardCache) -> access$6
    int access$7(cn.trinea.android.common.service.impl.ImageSDCardCache) -> access$7
    java.util.Map access$8(cn.trinea.android.common.service.impl.ImageSDCardCache) -> access$8
    java.lang.String access$9(cn.trinea.android.common.service.impl.ImageSDCardCache) -> access$9
    cn.trinea.android.common.service.FileNameRule access$10(cn.trinea.android.common.service.impl.ImageSDCardCache) -> access$10
cn.trinea.android.common.service.impl.ImageSDCardCache$1 -> cn.trinea.android.common.service.impl.ImageSDCardCache$1:
    cn.trinea.android.common.service.impl.ImageSDCardCache this$0 -> this$0
    java.lang.String val$imageUrl -> val$imageUrl
    java.util.List val$urlList -> val$urlList
    void run() -> run
cn.trinea.android.common.service.impl.ImageSDCardCache$2 -> cn.trinea.android.common.service.impl.ImageSDCardCache$2:
    cn.trinea.android.common.service.impl.ImageSDCardCache this$0 -> this$0
    java.util.HashSet val$filePathSet -> val$filePathSet
    void run() -> run
cn.trinea.android.common.service.impl.ImageSDCardCache$3 -> cn.trinea.android.common.service.impl.ImageSDCardCache$3:
    long serialVersionUID -> serialVersionUID
    cn.trinea.android.common.service.impl.ImageSDCardCache this$0 -> this$0
    cn.trinea.android.common.entity.CacheObject onGetData(java.lang.String) -> onGetData
    cn.trinea.android.common.entity.CacheObject onGetData(java.lang.Object) -> onGetData
cn.trinea.android.common.service.impl.ImageSDCardCache$MessageObject -> cn.trinea.android.common.service.impl.ImageSDCardCache$MessageObject:
    java.lang.String imageUrl -> imageUrl
    java.lang.String imagePath -> imagePath
    cn.trinea.android.common.entity.FailedReason failedReason -> failedReason
    cn.trinea.android.common.service.impl.ImageSDCardCache this$0 -> this$0
cn.trinea.android.common.service.impl.ImageSDCardCache$MyHandler -> cn.trinea.android.common.service.impl.ImageSDCardCache$MyHandler:
    cn.trinea.android.common.service.impl.ImageSDCardCache this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener -> cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener:
    void onPreGet(java.lang.String,android.view.View) -> onPreGet
    void onGetNotInCache(java.lang.String,android.view.View) -> onGetNotInCache
    void onGetSuccess(java.lang.String,java.lang.String,android.view.View,boolean) -> onGetSuccess
    void onGetFailed(java.lang.String,java.lang.String,android.view.View,cn.trinea.android.common.entity.FailedReason) -> onGetFailed
cn.trinea.android.common.service.impl.PreloadDataCache -> cn.trinea.android.common.service.impl.PreloadDataCache:
    long serialVersionUID -> serialVersionUID
    int forwardCacheNumber -> forwardCacheNumber
    int backwardCacheNumber -> backwardCacheNumber
    boolean isCheckNetwork -> isCheckNetwork
    int allowedNetworkTypes -> allowedNetworkTypes
    cn.trinea.android.common.service.impl.PreloadDataCache$OnGetDataListener onGetDataListener -> onGetDataListener
    java.util.Map gettingDataThreadMap -> gettingDataThreadMap
    java.util.concurrent.ExecutorService threadPool -> threadPool
    android.content.Context context -> context
    android.net.ConnectivityManager connectivityManager -> connectivityManager
    int DEFAULT_FORWARD_CACHE_NUMBER -> DEFAULT_FORWARD_CACHE_NUMBER
    int DEFAULT_BACKWARD_CACHE_NUMBER -> DEFAULT_BACKWARD_CACHE_NUMBER
    int DEFAULT_THREAD_POOL_SIZE -> DEFAULT_THREAD_POOL_SIZE
    int NETWORK_MOBILE -> NETWORK_MOBILE
    int NETWORK_WIFI -> NETWORK_WIFI
    cn.trinea.android.common.entity.CacheObject get(java.lang.Object,java.util.List) -> get
    cn.trinea.android.common.entity.CacheObject get(java.lang.Object) -> get
    cn.trinea.android.common.entity.CacheObject getFromCache(java.lang.Object) -> getFromCache
    cn.trinea.android.common.entity.CacheObject getFromCache(java.lang.Object,java.util.List) -> getFromCache
    int preloadDataForward(java.lang.Object,java.util.List,int) -> preloadDataForward
    int preloadDataBackward(java.lang.Object,java.util.List,int) -> preloadDataBackward
    cn.trinea.android.common.service.impl.PreloadDataCache$GetDataThread gettingData(java.lang.Object) -> gettingData
    boolean isExistGettingDataThread(java.lang.Object) -> isExistGettingDataThread
    int getForwardCacheNumber() -> getForwardCacheNumber
    void setForwardCacheNumber(int) -> setForwardCacheNumber
    int getBackwardCacheNumber() -> getBackwardCacheNumber
    void setBackwardCacheNumber(int) -> setBackwardCacheNumber
    cn.trinea.android.common.service.impl.PreloadDataCache$OnGetDataListener getOnGetDataListener() -> getOnGetDataListener
    void setOnGetDataListener(cn.trinea.android.common.service.impl.PreloadDataCache$OnGetDataListener) -> setOnGetDataListener
    int getAllowedNetworkTypes() -> getAllowedNetworkTypes
    void setAllowedNetworkTypes(int) -> setAllowedNetworkTypes
    boolean isCheckNetwork() -> isCheckNetwork
    void setCheckNetwork(boolean) -> setCheckNetwork
    android.content.Context getContext() -> getContext
    void setContext(android.content.Context) -> setContext
    boolean checkIsNetworkTypeAllowed() -> checkIsNetworkTypeAllowed
    int translateNetworkTypeToApiFlag(int) -> translateNetworkTypeToApiFlag
    cn.trinea.android.common.service.impl.PreloadDataCache loadCache(java.lang.String) -> loadCache
    void shutdown() -> shutdown
    java.util.List shutdownNow() -> shutdownNow
    cn.trinea.android.common.service.impl.SimpleCache loadCache(java.lang.String) -> loadCache
    java.util.Map access$1(cn.trinea.android.common.service.impl.PreloadDataCache) -> access$1
cn.trinea.android.common.service.impl.PreloadDataCache$GetDataThread -> cn.trinea.android.common.service.impl.PreloadDataCache$GetDataThread:
    java.lang.Object key -> key
    cn.trinea.android.common.service.impl.PreloadDataCache$OnGetDataListener onGetDataListener -> onGetDataListener
    java.util.concurrent.CountDownLatch finishGetDataLock -> finishGetDataLock
    cn.trinea.android.common.service.impl.PreloadDataCache this$0 -> this$0
    void run() -> run
cn.trinea.android.common.service.impl.PreloadDataCache$OnGetDataListener -> cn.trinea.android.common.service.impl.PreloadDataCache$OnGetDataListener:
    cn.trinea.android.common.entity.CacheObject onGetData(java.lang.Object) -> onGetData
cn.trinea.android.common.service.impl.RemoveTypeBitmapLarge -> cn.trinea.android.common.service.impl.RemoveTypeBitmapLarge:
    long serialVersionUID -> serialVersionUID
    int compare(cn.trinea.android.common.entity.CacheObject,cn.trinea.android.common.entity.CacheObject) -> compare
    long getSize(cn.trinea.android.common.entity.CacheObject) -> getSize
cn.trinea.android.common.service.impl.RemoveTypeBitmapSmall -> cn.trinea.android.common.service.impl.RemoveTypeBitmapSmall:
    long serialVersionUID -> serialVersionUID
    int compare(cn.trinea.android.common.entity.CacheObject,cn.trinea.android.common.entity.CacheObject) -> compare
    long getSize(cn.trinea.android.common.entity.CacheObject) -> getSize
cn.trinea.android.common.service.impl.RemoveTypeDataBig -> cn.trinea.android.common.service.impl.RemoveTypeDataBig:
    long serialVersionUID -> serialVersionUID
    int compare(cn.trinea.android.common.entity.CacheObject,cn.trinea.android.common.entity.CacheObject) -> compare
cn.trinea.android.common.service.impl.RemoveTypeDataSmall -> cn.trinea.android.common.service.impl.RemoveTypeDataSmall:
    long serialVersionUID -> serialVersionUID
    int compare(cn.trinea.android.common.entity.CacheObject,cn.trinea.android.common.entity.CacheObject) -> compare
cn.trinea.android.common.service.impl.RemoveTypeEnterTimeFirst -> cn.trinea.android.common.service.impl.RemoveTypeEnterTimeFirst:
    long serialVersionUID -> serialVersionUID
    int compare(cn.trinea.android.common.entity.CacheObject,cn.trinea.android.common.entity.CacheObject) -> compare
cn.trinea.android.common.service.impl.RemoveTypeEnterTimeLast -> cn.trinea.android.common.service.impl.RemoveTypeEnterTimeLast:
    long serialVersionUID -> serialVersionUID
    int compare(cn.trinea.android.common.entity.CacheObject,cn.trinea.android.common.entity.CacheObject) -> compare
cn.trinea.android.common.service.impl.RemoveTypeFileLarge -> cn.trinea.android.common.service.impl.RemoveTypeFileLarge:
    long serialVersionUID -> serialVersionUID
    int compare(cn.trinea.android.common.entity.CacheObject,cn.trinea.android.common.entity.CacheObject) -> compare
cn.trinea.android.common.service.impl.RemoveTypeFileSmall -> cn.trinea.android.common.service.impl.RemoveTypeFileSmall:
    long serialVersionUID -> serialVersionUID
    int compare(cn.trinea.android.common.entity.CacheObject,cn.trinea.android.common.entity.CacheObject) -> compare
cn.trinea.android.common.service.impl.RemoveTypeLastUsedTimeFirst -> cn.trinea.android.common.service.impl.RemoveTypeLastUsedTimeFirst:
    long serialVersionUID -> serialVersionUID
    int compare(cn.trinea.android.common.entity.CacheObject,cn.trinea.android.common.entity.CacheObject) -> compare
cn.trinea.android.common.service.impl.RemoveTypeLastUsedTimeLast -> cn.trinea.android.common.service.impl.RemoveTypeLastUsedTimeLast:
    long serialVersionUID -> serialVersionUID
    int compare(cn.trinea.android.common.entity.CacheObject,cn.trinea.android.common.entity.CacheObject) -> compare
cn.trinea.android.common.service.impl.RemoveTypeNotRemove -> cn.trinea.android.common.service.impl.RemoveTypeNotRemove:
    long serialVersionUID -> serialVersionUID
    int compare(cn.trinea.android.common.entity.CacheObject,cn.trinea.android.common.entity.CacheObject) -> compare
cn.trinea.android.common.service.impl.RemoveTypePriorityHigh -> cn.trinea.android.common.service.impl.RemoveTypePriorityHigh:
    long serialVersionUID -> serialVersionUID
    int compare(cn.trinea.android.common.entity.CacheObject,cn.trinea.android.common.entity.CacheObject) -> compare
cn.trinea.android.common.service.impl.RemoveTypePriorityLow -> cn.trinea.android.common.service.impl.RemoveTypePriorityLow:
    long serialVersionUID -> serialVersionUID
    int compare(cn.trinea.android.common.entity.CacheObject,cn.trinea.android.common.entity.CacheObject) -> compare
cn.trinea.android.common.service.impl.RemoveTypeUsedCountBig -> cn.trinea.android.common.service.impl.RemoveTypeUsedCountBig:
    long serialVersionUID -> serialVersionUID
    int compare(cn.trinea.android.common.entity.CacheObject,cn.trinea.android.common.entity.CacheObject) -> compare
cn.trinea.android.common.service.impl.RemoveTypeUsedCountSmall -> cn.trinea.android.common.service.impl.RemoveTypeUsedCountSmall:
    long serialVersionUID -> serialVersionUID
    int compare(cn.trinea.android.common.entity.CacheObject,cn.trinea.android.common.entity.CacheObject) -> compare
cn.trinea.android.common.service.impl.SimpleCache -> cn.trinea.android.common.service.impl.SimpleCache:
    long serialVersionUID -> serialVersionUID
    int DEFAULT_MAX_SIZE -> DEFAULT_MAX_SIZE
    int maxSize -> maxSize
    long validTime -> validTime
    cn.trinea.android.common.service.CacheFullRemoveType cacheFullRemoveType -> cacheFullRemoveType
    java.util.Map cache -> cache
    java.util.concurrent.atomic.AtomicLong hitCount -> hitCount
    java.util.concurrent.atomic.AtomicLong missCount -> missCount
    int getMaxSize() -> getMaxSize
    long getValidTime() -> getValidTime
    void setValidTime(long) -> setValidTime
    cn.trinea.android.common.service.CacheFullRemoveType getCacheFullRemoveType() -> getCacheFullRemoveType
    void setCacheFullRemoveType(cn.trinea.android.common.service.CacheFullRemoveType) -> setCacheFullRemoveType
    int getSize() -> getSize
    cn.trinea.android.common.entity.CacheObject get(java.lang.Object) -> get
    void setUsedInfo(cn.trinea.android.common.entity.CacheObject) -> setUsedInfo
    cn.trinea.android.common.entity.CacheObject put(java.lang.Object,java.lang.Object) -> put
    cn.trinea.android.common.entity.CacheObject put(java.lang.Object,cn.trinea.android.common.entity.CacheObject) -> put
    void putAll(cn.trinea.android.common.service.Cache) -> putAll
    boolean containsKey(java.lang.Object) -> containsKey
    boolean isExpired(java.lang.Object) -> isExpired
    cn.trinea.android.common.entity.CacheObject remove(java.lang.Object) -> remove
    cn.trinea.android.common.entity.CacheObject fullRemoveOne() -> fullRemoveOne
    int removeExpired() -> removeExpired
    void clear() -> clear
    boolean isExpired(cn.trinea.android.common.entity.CacheObject) -> isExpired
    long getHitCount() -> getHitCount
    long getMissCount() -> getMissCount
    double getHitRate() -> getHitRate
    java.util.Set keySet() -> keySet
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    cn.trinea.android.common.service.impl.SimpleCache loadCache(java.lang.String) -> loadCache
    void saveCache(java.lang.String,cn.trinea.android.common.service.impl.SimpleCache) -> saveCache
cn.trinea.android.common.util.AppUtils -> cn.trinea.android.common.util.AppUtils:
    boolean isNamedProcess(android.content.Context,java.lang.String) -> isNamedProcess
    boolean isApplicationInBackground(android.content.Context) -> isApplicationInBackground
cn.trinea.android.common.util.ArrayUtils -> cn.trinea.android.common.util.ArrayUtils:
    boolean isEmpty(java.lang.Object[]) -> isEmpty
    java.lang.Object getLast(java.lang.Object[],java.lang.Object,java.lang.Object,boolean) -> getLast
    java.lang.Object getNext(java.lang.Object[],java.lang.Object,java.lang.Object,boolean) -> getNext
    java.lang.Object getLast(java.lang.Object[],java.lang.Object,boolean) -> getLast
    java.lang.Object getNext(java.lang.Object[],java.lang.Object,boolean) -> getNext
    long getLast(long[],long,long,boolean) -> getLast
    long getNext(long[],long,long,boolean) -> getNext
    int getLast(int[],int,int,boolean) -> getLast
    int getNext(int[],int,int,boolean) -> getNext
cn.trinea.android.common.util.AssetDatabaseOpenHelper -> cn.trinea.android.common.util.AssetDatabaseOpenHelper:
    android.content.Context context -> context
    java.lang.String databaseName -> databaseName
    android.database.sqlite.SQLiteDatabase getWritableDatabase() -> getWritableDatabase
    android.database.sqlite.SQLiteDatabase getReadableDatabase() -> getReadableDatabase
    java.lang.String getDatabaseName() -> getDatabaseName
    void copyDatabase(java.io.File) -> copyDatabase
cn.trinea.android.common.util.CacheManager -> cn.trinea.android.common.util.CacheManager:
    cn.trinea.android.common.service.HttpCache httpCache -> httpCache
    cn.trinea.android.common.service.HttpCache getHttpCache(android.content.Context) -> getHttpCache
    cn.trinea.android.common.service.impl.ImageCache getImageCache() -> getImageCache
    cn.trinea.android.common.service.impl.ImageSDCardCache getImageSDCardCache() -> getImageSDCardCache
cn.trinea.android.common.util.CollectionUtils -> cn.trinea.android.common.util.CollectionUtils:
    java.lang.CharSequence DEFAULT_JOIN_SEPARATOR -> DEFAULT_JOIN_SEPARATOR
    boolean isEmpty(java.util.Collection) -> isEmpty
    java.lang.String join(java.lang.Iterable) -> join
cn.trinea.android.common.util.DbHelper -> cn.trinea.android.common.util.DbHelper:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
cn.trinea.android.common.util.DigestUtils -> cn.trinea.android.common.util.DigestUtils:
    char[] DIGITS_LOWER -> DIGITS_LOWER
    java.lang.String md5(java.lang.String) -> md5
    char[] encodeHex(byte[]) -> encodeHex
cn.trinea.android.common.util.DownloadManagerPro -> cn.trinea.android.common.util.DownloadManagerPro:
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String COLUMN_LOCAL_FILENAME -> COLUMN_LOCAL_FILENAME
    java.lang.String COLUMN_LOCAL_URI -> COLUMN_LOCAL_URI
    java.lang.String METHOD_NAME_PAUSE_DOWNLOAD -> METHOD_NAME_PAUSE_DOWNLOAD
    java.lang.String METHOD_NAME_RESUME_DOWNLOAD -> METHOD_NAME_RESUME_DOWNLOAD
    boolean isInitPauseDownload -> isInitPauseDownload
    boolean isInitResumeDownload -> isInitResumeDownload
    java.lang.reflect.Method pauseDownload -> pauseDownload
    java.lang.reflect.Method resumeDownload -> resumeDownload
    android.app.DownloadManager downloadManager -> downloadManager
    int getStatusById(long) -> getStatusById
    int[] getDownloadBytes(long) -> getDownloadBytes
    int[] getBytesAndStatus(long) -> getBytesAndStatus
    int pauseDownload(long[]) -> pauseDownload
    int resumeDownload(long[]) -> resumeDownload
    boolean isExistPauseAndResumeMethod() -> isExistPauseAndResumeMethod
    void initPauseMethod() -> initPauseMethod
    void initResumeMethod() -> initResumeMethod
    java.lang.String getFileName(long) -> getFileName
    java.lang.String getUri(long) -> getUri
    int getReason(long) -> getReason
    int getPausedReason(long) -> getPausedReason
    int getErrorCode(long) -> getErrorCode
    java.lang.String getString(long,java.lang.String) -> getString
    int getInt(long,java.lang.String) -> getInt
cn.trinea.android.common.util.DownloadManagerPro$RequestPro -> cn.trinea.android.common.util.DownloadManagerPro$RequestPro:
    java.lang.String METHOD_NAME_SET_NOTI_CLASS -> METHOD_NAME_SET_NOTI_CLASS
    java.lang.String METHOD_NAME_SET_NOTI_EXTRAS -> METHOD_NAME_SET_NOTI_EXTRAS
    boolean isInitNotiClass -> isInitNotiClass
    boolean isInitNotiExtras -> isInitNotiExtras
    java.lang.reflect.Method setNotiClass -> setNotiClass
    java.lang.reflect.Method setNotiExtras -> setNotiExtras
    void setNotiClass(java.lang.String) -> setNotiClass
    void setNotiExtras(java.lang.String) -> setNotiExtras
cn.trinea.android.common.util.FileUtils -> cn.trinea.android.common.util.FileUtils:
    java.lang.String FILE_EXTENSION_SEPARATOR -> FILE_EXTENSION_SEPARATOR
    java.lang.StringBuilder readFile(java.lang.String,java.lang.String) -> readFile
    boolean writeFile(java.lang.String,java.lang.String,boolean) -> writeFile
    boolean writeFile(java.lang.String,java.util.List,boolean) -> writeFile
    boolean writeFile(java.lang.String,java.lang.String) -> writeFile
    boolean writeFile(java.lang.String,java.util.List) -> writeFile
    boolean writeFile(java.lang.String,java.io.InputStream) -> writeFile
    boolean writeFile(java.lang.String,java.io.InputStream,boolean) -> writeFile
    boolean writeFile(java.io.File,java.io.InputStream) -> writeFile
    boolean writeFile(java.io.File,java.io.InputStream,boolean) -> writeFile
    void moveFile(java.lang.String,java.lang.String) -> moveFile
    void moveFile(java.io.File,java.io.File) -> moveFile
    boolean copyFile(java.lang.String,java.lang.String) -> copyFile
    java.util.List readFileToList(java.lang.String,java.lang.String) -> readFileToList
    java.lang.String getFileNameWithoutExtension(java.lang.String) -> getFileNameWithoutExtension
    java.lang.String getFileName(java.lang.String) -> getFileName
    java.lang.String getFolderName(java.lang.String) -> getFolderName
    java.lang.String getFileExtension(java.lang.String) -> getFileExtension
    boolean makeDirs(java.lang.String) -> makeDirs
    boolean makeFolders(java.lang.String) -> makeFolders
    boolean isFileExist(java.lang.String) -> isFileExist
    boolean isFolderExist(java.lang.String) -> isFolderExist
    boolean deleteFile(java.lang.String) -> deleteFile
    long getFileSize(java.lang.String) -> getFileSize
cn.trinea.android.common.util.HttpUtils -> cn.trinea.android.common.util.HttpUtils:
    java.lang.String URL_AND_PARA_SEPARATOR -> URL_AND_PARA_SEPARATOR
    java.lang.String PARAMETERS_SEPARATOR -> PARAMETERS_SEPARATOR
    java.lang.String PATHS_SEPARATOR -> PATHS_SEPARATOR
    java.lang.String EQUAL_SIGN -> EQUAL_SIGN
    java.text.SimpleDateFormat GMT_FORMAT -> GMT_FORMAT
    cn.trinea.android.common.entity.HttpResponse httpGet(cn.trinea.android.common.entity.HttpRequest) -> httpGet
    cn.trinea.android.common.entity.HttpResponse httpGet(java.lang.String) -> httpGet
    java.lang.String httpGetString(cn.trinea.android.common.entity.HttpRequest) -> httpGetString
    java.lang.String httpGetString(java.lang.String) -> httpGetString
    void httpGet(java.lang.String,cn.trinea.android.common.util.HttpUtils$HttpListener) -> httpGet
    void httpGet(cn.trinea.android.common.entity.HttpRequest,cn.trinea.android.common.util.HttpUtils$HttpListener) -> httpGet
    cn.trinea.android.common.entity.HttpResponse httpPost(cn.trinea.android.common.entity.HttpRequest) -> httpPost
    cn.trinea.android.common.entity.HttpResponse httpPost(java.lang.String) -> httpPost
    java.lang.String httpPostString(java.lang.String) -> httpPostString
    java.lang.String httpPostString(java.lang.String,java.util.Map) -> httpPostString
    java.lang.String getUrlWithParas(java.lang.String,java.util.Map) -> getUrlWithParas
    java.lang.String getUrlWithValueEncodeParas(java.lang.String,java.util.Map) -> getUrlWithValueEncodeParas
    java.lang.String joinParas(java.util.Map) -> joinParas
    java.lang.String joinParasWithEncodedValue(java.util.Map) -> joinParasWithEncodedValue
    java.lang.String appendParaToUrl(java.lang.String,java.lang.String,java.lang.String) -> appendParaToUrl
    long parseGmtTime(java.lang.String) -> parseGmtTime
    void setURLConnection(cn.trinea.android.common.entity.HttpRequest,java.net.HttpURLConnection) -> setURLConnection
    void setURLConnection(java.util.Map,java.net.HttpURLConnection) -> setURLConnection
    void setHttpResponse(java.net.HttpURLConnection,cn.trinea.android.common.entity.HttpResponse) -> setHttpResponse
cn.trinea.android.common.util.HttpUtils$HttpListener -> cn.trinea.android.common.util.HttpUtils$HttpListener:
    void onPreGet() -> onPreGet
    void onPostGet(cn.trinea.android.common.entity.HttpResponse) -> onPostGet
cn.trinea.android.common.util.HttpUtils$HttpRequestAsyncTask -> cn.trinea.android.common.util.HttpUtils$HttpRequestAsyncTask:
    cn.trinea.android.common.util.HttpUtils$HttpListener listener -> listener
    cn.trinea.android.common.entity.HttpResponse doInBackground(cn.trinea.android.common.entity.HttpRequest[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(cn.trinea.android.common.entity.HttpResponse) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.trinea.android.common.util.HttpUtils$HttpStringAsyncTask -> cn.trinea.android.common.util.HttpUtils$HttpStringAsyncTask:
    cn.trinea.android.common.util.HttpUtils$HttpListener listener -> listener
    cn.trinea.android.common.entity.HttpResponse doInBackground(java.lang.String[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(cn.trinea.android.common.entity.HttpResponse) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.trinea.android.common.util.ImageCacheManager -> cn.trinea.android.common.util.ImageCacheManager:
    java.lang.String TAG -> TAG
    cn.trinea.android.common.service.impl.ImageCache imageCache -> imageCache
    cn.trinea.android.common.service.impl.ImageSDCardCache imageSDCardCache -> imageSDCardCache
    cn.trinea.android.common.service.impl.ImageCache getImageCache() -> getImageCache
    cn.trinea.android.common.service.impl.ImageSDCardCache getImageSDCardCache() -> getImageSDCardCache
    void setImageCache() -> setImageCache
    void setImageSDCardCache() -> setImageSDCardCache
    android.view.animation.AlphaAnimation getInAlphaAnimation(long) -> getInAlphaAnimation
    cn.trinea.android.common.service.impl.PreloadDataCache$OnGetDataListener getImageFromSdcardListener() -> getImageFromSdcardListener
cn.trinea.android.common.util.ImageCacheManager$1 -> cn.trinea.android.common.util.ImageCacheManager$1:
    void onGetSuccess(java.lang.String,android.graphics.Bitmap,android.view.View,boolean) -> onGetSuccess
    void onPreGet(java.lang.String,android.view.View) -> onPreGet
    void onGetFailed(java.lang.String,android.graphics.Bitmap,android.view.View,cn.trinea.android.common.entity.FailedReason) -> onGetFailed
    void onGetNotInCache(java.lang.String,android.view.View) -> onGetNotInCache
cn.trinea.android.common.util.ImageCacheManager$2 -> cn.trinea.android.common.util.ImageCacheManager$2:
    long serialVersionUID -> serialVersionUID
    void onGetSuccess(java.lang.String,java.lang.String,android.view.View,boolean) -> onGetSuccess
    void onPreGet(java.lang.String,android.view.View) -> onPreGet
    void onGetNotInCache(java.lang.String,android.view.View) -> onGetNotInCache
    void onGetFailed(java.lang.String,java.lang.String,android.view.View,cn.trinea.android.common.entity.FailedReason) -> onGetFailed
cn.trinea.android.common.util.ImageCacheManager$3 -> cn.trinea.android.common.util.ImageCacheManager$3:
    long serialVersionUID -> serialVersionUID
    cn.trinea.android.common.entity.CacheObject onGetData(java.lang.String) -> onGetData
    cn.trinea.android.common.entity.CacheObject onGetData(java.lang.Object) -> onGetData
cn.trinea.android.common.util.ImageUtils -> cn.trinea.android.common.util.ImageUtils:
    byte[] bitmapToByte(android.graphics.Bitmap) -> bitmapToByte
    android.graphics.Bitmap byteToBitmap(byte[]) -> byteToBitmap
    android.graphics.Bitmap drawableToBitmap(android.graphics.drawable.Drawable) -> drawableToBitmap
    android.graphics.drawable.Drawable bitmapToDrawable(android.graphics.Bitmap) -> bitmapToDrawable
    byte[] drawableToByte(android.graphics.drawable.Drawable) -> drawableToByte
    android.graphics.drawable.Drawable byteToDrawable(byte[]) -> byteToDrawable
    java.io.InputStream getInputStreamFromUrl(java.lang.String,int) -> getInputStreamFromUrl
    java.io.InputStream getInputStreamFromUrl(java.lang.String,int,java.util.Map) -> getInputStreamFromUrl
    android.graphics.drawable.Drawable getDrawableFromUrl(java.lang.String,int) -> getDrawableFromUrl
    android.graphics.drawable.Drawable getDrawableFromUrl(java.lang.String,int,java.util.Map) -> getDrawableFromUrl
    android.graphics.Bitmap getBitmapFromUrl(java.lang.String,int) -> getBitmapFromUrl
    android.graphics.Bitmap getBitmapFromUrl(java.lang.String,int,java.util.Map) -> getBitmapFromUrl
    android.graphics.Bitmap scaleImageTo(android.graphics.Bitmap,int,int) -> scaleImageTo
    android.graphics.Bitmap scaleImage(android.graphics.Bitmap,float,float) -> scaleImage
    void closeInputStream(java.io.InputStream) -> closeInputStream
cn.trinea.android.common.util.JSONUtils -> cn.trinea.android.common.util.JSONUtils:
    boolean isPrintException -> isPrintException
    java.lang.Long getLong(org.json.JSONObject,java.lang.String,java.lang.Long) -> getLong
    java.lang.Long getLong(java.lang.String,java.lang.String,java.lang.Long) -> getLong
    long getLong(org.json.JSONObject,java.lang.String,long) -> getLong
    long getLong(java.lang.String,java.lang.String,long) -> getLong
    java.lang.Integer getInt(org.json.JSONObject,java.lang.String,java.lang.Integer) -> getInt
    java.lang.Integer getInt(java.lang.String,java.lang.String,java.lang.Integer) -> getInt
    int getInt(org.json.JSONObject,java.lang.String,int) -> getInt
    int getInt(java.lang.String,java.lang.String,int) -> getInt
    java.lang.Double getDouble(org.json.JSONObject,java.lang.String,java.lang.Double) -> getDouble
    java.lang.Double getDouble(java.lang.String,java.lang.String,java.lang.Double) -> getDouble
    double getDouble(org.json.JSONObject,java.lang.String,double) -> getDouble
    double getDouble(java.lang.String,java.lang.String,double) -> getDouble
    java.lang.String getString(org.json.JSONObject,java.lang.String,java.lang.String) -> getString
    java.lang.String getString(java.lang.String,java.lang.String,java.lang.String) -> getString
    java.lang.String getStringCascade(org.json.JSONObject,java.lang.String,java.lang.String[]) -> getStringCascade
    java.lang.String getStringCascade(java.lang.String,java.lang.String,java.lang.String[]) -> getStringCascade
    java.lang.String[] getStringArray(org.json.JSONObject,java.lang.String,java.lang.String[]) -> getStringArray
    java.lang.String[] getStringArray(java.lang.String,java.lang.String,java.lang.String[]) -> getStringArray
    java.util.List getStringList(org.json.JSONObject,java.lang.String,java.util.List) -> getStringList
    java.util.List getStringList(java.lang.String,java.lang.String,java.util.List) -> getStringList
    org.json.JSONObject getJSONObject(org.json.JSONObject,java.lang.String,org.json.JSONObject) -> getJSONObject
    org.json.JSONObject getJSONObject(java.lang.String,java.lang.String,org.json.JSONObject) -> getJSONObject
    org.json.JSONObject getJSONObjectCascade(org.json.JSONObject,org.json.JSONObject,java.lang.String[]) -> getJSONObjectCascade
    org.json.JSONObject getJSONObjectCascade(java.lang.String,org.json.JSONObject,java.lang.String[]) -> getJSONObjectCascade
    org.json.JSONArray getJSONArray(org.json.JSONObject,java.lang.String,org.json.JSONArray) -> getJSONArray
    org.json.JSONArray getJSONArray(java.lang.String,java.lang.String,org.json.JSONArray) -> getJSONArray
    boolean getBoolean(org.json.JSONObject,java.lang.String,java.lang.Boolean) -> getBoolean
    boolean getBoolean(java.lang.String,java.lang.String,java.lang.Boolean) -> getBoolean
    java.util.Map getMap(org.json.JSONObject,java.lang.String) -> getMap
    java.util.Map getMap(java.lang.String,java.lang.String) -> getMap
    java.util.Map parseKeyAndValueToMap(org.json.JSONObject) -> parseKeyAndValueToMap
    java.util.Map parseKeyAndValueToMap(java.lang.String) -> parseKeyAndValueToMap
cn.trinea.android.common.util.ListUtils -> cn.trinea.android.common.util.ListUtils:
    java.lang.String DEFAULT_JOIN_SEPARATOR -> DEFAULT_JOIN_SEPARATOR
    int getSize(java.util.List) -> getSize
    boolean isEmpty(java.util.List) -> isEmpty
    boolean isEquals(java.util.ArrayList,java.util.ArrayList) -> isEquals
    java.lang.String join(java.util.List) -> join
    java.lang.String join(java.util.List,char) -> join
    java.lang.String join(java.util.List,java.lang.String) -> join
    boolean addDistinctEntry(java.util.List,java.lang.Object) -> addDistinctEntry
    int addDistinctList(java.util.List,java.util.List) -> addDistinctList
    int distinctList(java.util.List) -> distinctList
    boolean addListNotNullValue(java.util.List,java.lang.Object) -> addListNotNullValue
    java.lang.Object getLast(java.util.List,java.lang.Object) -> getLast
    java.lang.Object getNext(java.util.List,java.lang.Object) -> getNext
    java.util.List invertList(java.util.List) -> invertList
cn.trinea.android.common.util.MapUtils -> cn.trinea.android.common.util.MapUtils:
    java.lang.String DEFAULT_KEY_AND_VALUE_SEPARATOR -> DEFAULT_KEY_AND_VALUE_SEPARATOR
    java.lang.String DEFAULT_KEY_AND_VALUE_PAIR_SEPARATOR -> DEFAULT_KEY_AND_VALUE_PAIR_SEPARATOR
    boolean isEmpty(java.util.Map) -> isEmpty
    boolean putMapNotEmptyKey(java.util.Map,java.lang.String,java.lang.String) -> putMapNotEmptyKey
    boolean putMapNotEmptyKeyAndValue(java.util.Map,java.lang.String,java.lang.String) -> putMapNotEmptyKeyAndValue
    boolean putMapNotEmptyKeyAndValue(java.util.Map,java.lang.String,java.lang.String,java.lang.String) -> putMapNotEmptyKeyAndValue
    boolean putMapNotNullKey(java.util.Map,java.lang.Object,java.lang.Object) -> putMapNotNullKey
    boolean putMapNotNullKeyAndValue(java.util.Map,java.lang.Object,java.lang.Object) -> putMapNotNullKeyAndValue
    java.lang.Object getKeyByValue(java.util.Map,java.lang.Object) -> getKeyByValue
    java.util.Map parseKeyAndValueToMap(java.lang.String,java.lang.String,java.lang.String,boolean) -> parseKeyAndValueToMap
    java.util.Map parseKeyAndValueToMap(java.lang.String,boolean) -> parseKeyAndValueToMap
    java.util.Map parseKeyAndValueToMap(java.lang.String) -> parseKeyAndValueToMap
    java.lang.String toJson(java.util.Map) -> toJson
cn.trinea.android.common.util.NetWorkUtils -> cn.trinea.android.common.util.NetWorkUtils:
    java.lang.String NETWORK_TYPE_WIFI -> NETWORK_TYPE_WIFI
    java.lang.String NETWORK_TYPE_3G -> NETWORK_TYPE_3G
    java.lang.String NETWORK_TYPE_2G -> NETWORK_TYPE_2G
    java.lang.String NETWORK_TYPE_WAP -> NETWORK_TYPE_WAP
    java.lang.String NETWORK_TYPE_UNKNOWN -> NETWORK_TYPE_UNKNOWN
    java.lang.String NETWORK_TYPE_DISCONNECT -> NETWORK_TYPE_DISCONNECT
    int getNetworkType(android.content.Context) -> getNetworkType
    java.lang.String getNetworkTypeName(android.content.Context) -> getNetworkTypeName
    boolean isFastMobileNetwork(android.content.Context) -> isFastMobileNetwork
cn.trinea.android.common.util.ObjectUtils -> cn.trinea.android.common.util.ObjectUtils:
    boolean isEquals(java.lang.Object,java.lang.Object) -> isEquals
    java.lang.String nullStrToEmpty(java.lang.Object) -> nullStrToEmpty
    java.lang.Long[] transformLongArray(long[]) -> transformLongArray
    long[] transformLongArray(java.lang.Long[]) -> transformLongArray
    java.lang.Integer[] transformIntArray(int[]) -> transformIntArray
    int[] transformIntArray(java.lang.Integer[]) -> transformIntArray
    int compare(java.lang.Object,java.lang.Object) -> compare
cn.trinea.android.common.util.PackageUtils -> cn.trinea.android.common.util.PackageUtils:
    java.lang.String TAG -> TAG
    int APP_INSTALL_AUTO -> APP_INSTALL_AUTO
    int APP_INSTALL_INTERNAL -> APP_INSTALL_INTERNAL
    int APP_INSTALL_EXTERNAL -> APP_INSTALL_EXTERNAL
    int INSTALL_SUCCEEDED -> INSTALL_SUCCEEDED
    int INSTALL_FAILED_ALREADY_EXISTS -> INSTALL_FAILED_ALREADY_EXISTS
    int INSTALL_FAILED_INVALID_APK -> INSTALL_FAILED_INVALID_APK
    int INSTALL_FAILED_INVALID_URI -> INSTALL_FAILED_INVALID_URI
    int INSTALL_FAILED_INSUFFICIENT_STORAGE -> INSTALL_FAILED_INSUFFICIENT_STORAGE
    int INSTALL_FAILED_DUPLICATE_PACKAGE -> INSTALL_FAILED_DUPLICATE_PACKAGE
    int INSTALL_FAILED_NO_SHARED_USER -> INSTALL_FAILED_NO_SHARED_USER
    int INSTALL_FAILED_UPDATE_INCOMPATIBLE -> INSTALL_FAILED_UPDATE_INCOMPATIBLE
    int INSTALL_FAILED_SHARED_USER_INCOMPATIBLE -> INSTALL_FAILED_SHARED_USER_INCOMPATIBLE
    int INSTALL_FAILED_MISSING_SHARED_LIBRARY -> INSTALL_FAILED_MISSING_SHARED_LIBRARY
    int INSTALL_FAILED_REPLACE_COULDNT_DELETE -> INSTALL_FAILED_REPLACE_COULDNT_DELETE
    int INSTALL_FAILED_DEXOPT -> INSTALL_FAILED_DEXOPT
    int INSTALL_FAILED_OLDER_SDK -> INSTALL_FAILED_OLDER_SDK
    int INSTALL_FAILED_CONFLICTING_PROVIDER -> INSTALL_FAILED_CONFLICTING_PROVIDER
    int INSTALL_FAILED_NEWER_SDK -> INSTALL_FAILED_NEWER_SDK
    int INSTALL_FAILED_TEST_ONLY -> INSTALL_FAILED_TEST_ONLY
    int INSTALL_FAILED_CPU_ABI_INCOMPATIBLE -> INSTALL_FAILED_CPU_ABI_INCOMPATIBLE
    int INSTALL_FAILED_MISSING_FEATURE -> INSTALL_FAILED_MISSING_FEATURE
    int INSTALL_FAILED_CONTAINER_ERROR -> INSTALL_FAILED_CONTAINER_ERROR
    int INSTALL_FAILED_INVALID_INSTALL_LOCATION -> INSTALL_FAILED_INVALID_INSTALL_LOCATION
    int INSTALL_FAILED_MEDIA_UNAVAILABLE -> INSTALL_FAILED_MEDIA_UNAVAILABLE
    int INSTALL_FAILED_VERIFICATION_TIMEOUT -> INSTALL_FAILED_VERIFICATION_TIMEOUT
    int INSTALL_FAILED_VERIFICATION_FAILURE -> INSTALL_FAILED_VERIFICATION_FAILURE
    int INSTALL_FAILED_PACKAGE_CHANGED -> INSTALL_FAILED_PACKAGE_CHANGED
    int INSTALL_FAILED_UID_CHANGED -> INSTALL_FAILED_UID_CHANGED
    int INSTALL_PARSE_FAILED_NOT_APK -> INSTALL_PARSE_FAILED_NOT_APK
    int INSTALL_PARSE_FAILED_BAD_MANIFEST -> INSTALL_PARSE_FAILED_BAD_MANIFEST
    int INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION -> INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION
    int INSTALL_PARSE_FAILED_NO_CERTIFICATES -> INSTALL_PARSE_FAILED_NO_CERTIFICATES
    int INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES -> INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES
    int INSTALL_PARSE_FAILED_CERTIFICATE_ENCODING -> INSTALL_PARSE_FAILED_CERTIFICATE_ENCODING
    int INSTALL_PARSE_FAILED_BAD_PACKAGE_NAME -> INSTALL_PARSE_FAILED_BAD_PACKAGE_NAME
    int INSTALL_PARSE_FAILED_BAD_SHARED_USER_ID -> INSTALL_PARSE_FAILED_BAD_SHARED_USER_ID
    int INSTALL_PARSE_FAILED_MANIFEST_MALFORMED -> INSTALL_PARSE_FAILED_MANIFEST_MALFORMED
    int INSTALL_PARSE_FAILED_MANIFEST_EMPTY -> INSTALL_PARSE_FAILED_MANIFEST_EMPTY
    int INSTALL_FAILED_INTERNAL_ERROR -> INSTALL_FAILED_INTERNAL_ERROR
    int INSTALL_FAILED_OTHER -> INSTALL_FAILED_OTHER
    int DELETE_SUCCEEDED -> DELETE_SUCCEEDED
    int DELETE_FAILED_INTERNAL_ERROR -> DELETE_FAILED_INTERNAL_ERROR
    int DELETE_FAILED_DEVICE_POLICY_MANAGER -> DELETE_FAILED_DEVICE_POLICY_MANAGER
    int DELETE_FAILED_INVALID_PACKAGE -> DELETE_FAILED_INVALID_PACKAGE
    int DELETE_FAILED_PERMISSION_DENIED -> DELETE_FAILED_PERMISSION_DENIED
    int install(android.content.Context,java.lang.String) -> install
    boolean installNormal(android.content.Context,java.lang.String) -> installNormal
    int installSilent(android.content.Context,java.lang.String) -> installSilent
    int installSilent(android.content.Context,java.lang.String,java.lang.String) -> installSilent
    int uninstall(android.content.Context,java.lang.String) -> uninstall
    boolean uninstallNormal(android.content.Context,java.lang.String) -> uninstallNormal
    int uninstallSilent(android.content.Context,java.lang.String) -> uninstallSilent
    int uninstallSilent(android.content.Context,java.lang.String,boolean) -> uninstallSilent
    boolean isSystemApplication(android.content.Context) -> isSystemApplication
    boolean isSystemApplication(android.content.Context,java.lang.String) -> isSystemApplication
    boolean isSystemApplication(android.content.pm.PackageManager,java.lang.String) -> isSystemApplication
    java.lang.Boolean isTopActivity(android.content.Context,java.lang.String) -> isTopActivity
    int getAppVersionCode(android.content.Context) -> getAppVersionCode
    int getInstallLocation() -> getInstallLocation
    java.lang.String getInstallLocationParams() -> getInstallLocationParams
    void startInstalledAppDetails(android.content.Context,java.lang.String) -> startInstalledAppDetails
cn.trinea.android.common.util.ParcelUtils -> cn.trinea.android.common.util.ParcelUtils:
    boolean readBoolean(android.os.Parcel) -> readBoolean
    void writeBoolean(boolean,android.os.Parcel) -> writeBoolean
    java.util.Map readHashMapStringAndString(android.os.Parcel) -> readHashMapStringAndString
    void writeHashMapStringAndString(java.util.Map,android.os.Parcel,int) -> writeHashMapStringAndString
    java.util.Map readHashMapStringKey(android.os.Parcel,java.lang.ClassLoader) -> readHashMapStringKey
    void writeHashMapStringKey(java.util.Map,android.os.Parcel,int) -> writeHashMapStringKey
    java.util.Map readHashMap(android.os.Parcel,java.lang.ClassLoader) -> readHashMap
    void writeHashMap(java.util.Map,android.os.Parcel,int) -> writeHashMap
cn.trinea.android.common.util.PatchUtils -> cn.trinea.android.common.util.PatchUtils:
    cn.trinea.android.common.entity.PatchResult patch(java.lang.String,java.lang.String,java.lang.String) -> patch
cn.trinea.android.common.util.PreferencesUtils -> cn.trinea.android.common.util.PreferencesUtils:
    java.lang.String PREFERENCE_NAME -> PREFERENCE_NAME
    boolean putString(android.content.Context,java.lang.String,java.lang.String) -> putString
    java.lang.String getString(android.content.Context,java.lang.String) -> getString
    java.lang.String getString(android.content.Context,java.lang.String,java.lang.String) -> getString
    boolean putInt(android.content.Context,java.lang.String,int) -> putInt
    int getInt(android.content.Context,java.lang.String) -> getInt
    int getInt(android.content.Context,java.lang.String,int) -> getInt
    boolean putLong(android.content.Context,java.lang.String,long) -> putLong
    long getLong(android.content.Context,java.lang.String) -> getLong
    long getLong(android.content.Context,java.lang.String,long) -> getLong
    boolean putFloat(android.content.Context,java.lang.String,float) -> putFloat
    float getFloat(android.content.Context,java.lang.String) -> getFloat
    float getFloat(android.content.Context,java.lang.String,float) -> getFloat
    boolean putBoolean(android.content.Context,java.lang.String,boolean) -> putBoolean
    boolean getBoolean(android.content.Context,java.lang.String) -> getBoolean
    boolean getBoolean(android.content.Context,java.lang.String,boolean) -> getBoolean
cn.trinea.android.common.util.RandomUtils -> cn.trinea.android.common.util.RandomUtils:
    java.lang.String NUMBERS_AND_LETTERS -> NUMBERS_AND_LETTERS
    java.lang.String NUMBERS -> NUMBERS
    java.lang.String LETTERS -> LETTERS
    java.lang.String CAPITAL_LETTERS -> CAPITAL_LETTERS
    java.lang.String LOWER_CASE_LETTERS -> LOWER_CASE_LETTERS
    java.lang.String getRandomNumbersAndLetters(int) -> getRandomNumbersAndLetters
    java.lang.String getRandomNumbers(int) -> getRandomNumbers
    java.lang.String getRandomLetters(int) -> getRandomLetters
    java.lang.String getRandomCapitalLetters(int) -> getRandomCapitalLetters
    java.lang.String getRandomLowerCaseLetters(int) -> getRandomLowerCaseLetters
    java.lang.String getRandom(java.lang.String,int) -> getRandom
    java.lang.String getRandom(char[],int) -> getRandom
    int getRandom(int) -> getRandom
    int getRandom(int,int) -> getRandom
    boolean shuffle(java.lang.Object[]) -> shuffle
    boolean shuffle(java.lang.Object[],int) -> shuffle
    int[] shuffle(int[]) -> shuffle
    int[] shuffle(int[],int) -> shuffle
cn.trinea.android.common.util.ResourceUtils -> cn.trinea.android.common.util.ResourceUtils:
    java.lang.String geFileFromAssets(android.content.Context,java.lang.String) -> geFileFromAssets
    java.lang.String geFileFromRaw(android.content.Context,int) -> geFileFromRaw
    java.util.List geFileToListFromAssets(android.content.Context,java.lang.String) -> geFileToListFromAssets
    java.util.List geFileToListFromRaw(android.content.Context,int) -> geFileToListFromRaw
cn.trinea.android.common.util.ScreenUtils -> cn.trinea.android.common.util.ScreenUtils:
    float dpToPx(android.content.Context,float) -> dpToPx
    float pxToDp(android.content.Context,float) -> pxToDp
    float dpToPxInt(android.content.Context,float) -> dpToPxInt
    float pxToDpCeilInt(android.content.Context,float) -> pxToDpCeilInt
cn.trinea.android.common.util.SerializeUtils -> cn.trinea.android.common.util.SerializeUtils:
    java.lang.Object deserialization(java.lang.String) -> deserialization
    void serialization(java.lang.String,java.lang.Object) -> serialization
cn.trinea.android.common.util.ShellUtils -> cn.trinea.android.common.util.ShellUtils:
    java.lang.String COMMAND_SU -> COMMAND_SU
    java.lang.String COMMAND_SH -> COMMAND_SH
    java.lang.String COMMAND_EXIT -> COMMAND_EXIT
    java.lang.String COMMAND_LINE_END -> COMMAND_LINE_END
    boolean checkRootPermission() -> checkRootPermission
    cn.trinea.android.common.util.ShellUtils$CommandResult execCommand(java.lang.String,boolean) -> execCommand
    cn.trinea.android.common.util.ShellUtils$CommandResult execCommand(java.util.List,boolean) -> execCommand
    cn.trinea.android.common.util.ShellUtils$CommandResult execCommand(java.lang.String[],boolean) -> execCommand
    cn.trinea.android.common.util.ShellUtils$CommandResult execCommand(java.lang.String,boolean,boolean) -> execCommand
    cn.trinea.android.common.util.ShellUtils$CommandResult execCommand(java.util.List,boolean,boolean) -> execCommand
    cn.trinea.android.common.util.ShellUtils$CommandResult execCommand(java.lang.String[],boolean,boolean) -> execCommand
cn.trinea.android.common.util.ShellUtils$CommandResult -> cn.trinea.android.common.util.ShellUtils$CommandResult:
    int result -> result
    java.lang.String successMsg -> successMsg
    java.lang.String errorMsg -> errorMsg
cn.trinea.android.common.util.SingletonUtils -> cn.trinea.android.common.util.SingletonUtils:
    java.lang.Object instance -> instance
    java.lang.Object newInstance() -> newInstance
    java.lang.Object getInstance() -> getInstance
cn.trinea.android.common.util.SizeUtils -> cn.trinea.android.common.util.SizeUtils:
    long GB_2_BYTE -> GB_2_BYTE
    long MB_2_BYTE -> MB_2_BYTE
    long KB_2_BYTE -> KB_2_BYTE
cn.trinea.android.common.util.SqliteUtils -> cn.trinea.android.common.util.SqliteUtils:
    cn.trinea.android.common.util.SqliteUtils instance -> instance
    cn.trinea.android.common.util.DbHelper dbHelper -> dbHelper
    android.database.sqlite.SQLiteDatabase db -> db
    cn.trinea.android.common.util.SqliteUtils getInstance(android.content.Context) -> getInstance
    android.database.sqlite.SQLiteDatabase getDb() -> getDb
cn.trinea.android.common.util.StringUtils -> cn.trinea.android.common.util.StringUtils:
    boolean isBlank(java.lang.String) -> isBlank
    boolean isEmpty(java.lang.CharSequence) -> isEmpty
    boolean isEquals(java.lang.String,java.lang.String) -> isEquals
    int length(java.lang.CharSequence) -> length
    java.lang.String nullStrToEmpty(java.lang.Object) -> nullStrToEmpty
    java.lang.String capitalizeFirstLetter(java.lang.String) -> capitalizeFirstLetter
    java.lang.String utf8Encode(java.lang.String) -> utf8Encode
    java.lang.String utf8Encode(java.lang.String,java.lang.String) -> utf8Encode
    java.lang.String getHrefInnerHtml(java.lang.String) -> getHrefInnerHtml
    java.lang.String htmlEscapeCharsToString(java.lang.String) -> htmlEscapeCharsToString
    java.lang.String fullWidthToHalfWidth(java.lang.String) -> fullWidthToHalfWidth
    java.lang.String halfWidthToFullWidth(java.lang.String) -> halfWidthToFullWidth
cn.trinea.android.common.util.SystemUtils -> cn.trinea.android.common.util.SystemUtils:
    int DEFAULT_THREAD_POOL_SIZE -> DEFAULT_THREAD_POOL_SIZE
    int getDefaultThreadPoolSize() -> getDefaultThreadPoolSize
    int getDefaultThreadPoolSize(int) -> getDefaultThreadPoolSize
cn.trinea.android.common.util.TimeUtils -> cn.trinea.android.common.util.TimeUtils:
    java.text.SimpleDateFormat DEFAULT_DATE_FORMAT -> DEFAULT_DATE_FORMAT
    java.text.SimpleDateFormat DATE_FORMAT_DATE -> DATE_FORMAT_DATE
    java.lang.String getTime(long,java.text.SimpleDateFormat) -> getTime
    java.lang.String getTime(long) -> getTime
    long getCurrentTimeInLong() -> getCurrentTimeInLong
    java.lang.String getCurrentTimeInString() -> getCurrentTimeInString
    java.lang.String getCurrentTimeInString(java.text.SimpleDateFormat) -> getCurrentTimeInString
cn.trinea.android.common.util.ToastUtils -> cn.trinea.android.common.util.ToastUtils:
    void show(android.content.Context,int) -> show
    void show(android.content.Context,int,int) -> show
    void show(android.content.Context,java.lang.CharSequence) -> show
    void show(android.content.Context,java.lang.CharSequence,int) -> show
    void show(android.content.Context,int,java.lang.Object[]) -> show
    void show(android.content.Context,java.lang.String,java.lang.Object[]) -> show
    void show(android.content.Context,int,int,java.lang.Object[]) -> show
    void show(android.content.Context,java.lang.String,int,java.lang.Object[]) -> show
cn.trinea.android.common.util.ViewUtils -> cn.trinea.android.common.util.ViewUtils:
    java.lang.String CLASS_NAME_GRID_VIEW -> CLASS_NAME_GRID_VIEW
    java.lang.String FIELD_NAME_VERTICAL_SPACING -> FIELD_NAME_VERTICAL_SPACING
    int getListViewHeightBasedOnChildren(android.widget.ListView) -> getListViewHeightBasedOnChildren
    int getGridViewVerticalSpacing(android.widget.GridView) -> getGridViewVerticalSpacing
    int getAbsListViewHeightBasedOnChildren(android.widget.AbsListView) -> getAbsListViewHeightBasedOnChildren
    void setViewHeight(android.view.View,int) -> setViewHeight
    void setListViewHeightBasedOnChildren(android.widget.ListView) -> setListViewHeightBasedOnChildren
    void setAbsListViewHeightBasedOnChildren(android.widget.AbsListView) -> setAbsListViewHeightBasedOnChildren
    void setSearchViewOnClickListener(android.view.View,android.view.View$OnClickListener) -> setSearchViewOnClickListener
    java.util.List getDescendants(android.view.ViewGroup,java.lang.Class,boolean) -> getDescendants
cn.trinea.android.common.view.BorderScrollView -> cn.trinea.android.common.view.BorderScrollView:
    cn.trinea.android.common.view.BorderScrollView$OnBorderListener onBorderListener -> onBorderListener
    android.view.View contentView -> contentView
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void setOnBorderListener(cn.trinea.android.common.view.BorderScrollView$OnBorderListener) -> setOnBorderListener
    void doOnBorderListener() -> doOnBorderListener
cn.trinea.android.common.view.BorderScrollView$OnBorderListener -> cn.trinea.android.common.view.BorderScrollView$OnBorderListener:
    void onBottom() -> onBottom
    void onTop() -> onTop
cn.trinea.android.common.view.DropDownListView -> cn.trinea.android.common.view.DropDownListView:
    boolean isDropDownStyle -> isDropDownStyle
    boolean isOnBottomStyle -> isOnBottomStyle
    boolean isAutoLoadOnBottom -> isAutoLoadOnBottom
    java.lang.String headerDefaultText -> headerDefaultText
    java.lang.String headerPullText -> headerPullText
    java.lang.String headerReleaseText -> headerReleaseText
    java.lang.String headerLoadingText -> headerLoadingText
    java.lang.String footerDefaultText -> footerDefaultText
    java.lang.String footerLoadingText -> footerLoadingText
    java.lang.String footerNoMoreText -> footerNoMoreText
    android.content.Context context -> context
    android.widget.RelativeLayout headerLayout -> headerLayout
    android.widget.ImageView headerImage -> headerImage
    android.widget.ProgressBar headerProgressBar -> headerProgressBar
    android.widget.TextView headerText -> headerText
    android.widget.TextView headerSecondText -> headerSecondText
    android.widget.RelativeLayout footerLayout -> footerLayout
    android.widget.ProgressBar footerProgressBar -> footerProgressBar
    android.widget.Button footerButton -> footerButton
    cn.trinea.android.common.view.DropDownListView$OnDropDownListener onDropDownListener -> onDropDownListener
    android.widget.AbsListView$OnScrollListener onScrollListener -> onScrollListener
    float headerPaddingTopRate -> headerPaddingTopRate
    int headerReleaseMinDistance -> headerReleaseMinDistance
    boolean hasMore -> hasMore
    boolean isShowFooterProgressBar -> isShowFooterProgressBar
    boolean isShowFooterWhenNoMore -> isShowFooterWhenNoMore
    int currentScrollState -> currentScrollState
    int currentHeaderStatus -> currentHeaderStatus
    boolean hasReachedTop -> hasReachedTop
    android.view.animation.RotateAnimation flipAnimation -> flipAnimation
    android.view.animation.RotateAnimation reverseFlipAnimation -> reverseFlipAnimation
    int headerOriginalHeight -> headerOriginalHeight
    int headerOriginalTopPadding -> headerOriginalTopPadding
    float actionDownPointY -> actionDownPointY
    boolean isOnBottomLoading -> isOnBottomLoading
    int HEADER_STATUS_CLICK_TO_LOAD -> HEADER_STATUS_CLICK_TO_LOAD
    int HEADER_STATUS_DROP_DOWN_TO_LOAD -> HEADER_STATUS_DROP_DOWN_TO_LOAD
    int HEADER_STATUS_RELEASE_TO_LOAD -> HEADER_STATUS_RELEASE_TO_LOAD
    int HEADER_STATUS_LOADING -> HEADER_STATUS_LOADING
    void init(android.content.Context) -> init
    void initDropDownStyle() -> initDropDownStyle
    void initOnBottomStyle() -> initOnBottomStyle
    boolean isDropDownStyle() -> isDropDownStyle
    void setDropDownStyle(boolean) -> setDropDownStyle
    boolean isOnBottomStyle() -> isOnBottomStyle
    void setOnBottomStyle(boolean) -> setOnBottomStyle
    boolean isAutoLoadOnBottom() -> isAutoLoadOnBottom
    void setAutoLoadOnBottom(boolean) -> setAutoLoadOnBottom
    boolean isShowFooterProgressBar() -> isShowFooterProgressBar
    void setShowFooterProgressBar(boolean) -> setShowFooterProgressBar
    boolean isShowFooterWhenNoMore() -> isShowFooterWhenNoMore
    void setShowFooterWhenNoMore(boolean) -> setShowFooterWhenNoMore
    android.widget.Button getFooterButton() -> getFooterButton
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setOnDropDownListener(cn.trinea.android.common.view.DropDownListView$OnDropDownListener) -> setOnDropDownListener
    void setOnBottomListener(android.view.View$OnClickListener) -> setOnBottomListener
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onDropDownBegin() -> onDropDownBegin
    void onDropDown() -> onDropDown
    void onDropDownComplete(java.lang.CharSequence) -> onDropDownComplete
    void setHeaderSecondText(java.lang.CharSequence) -> setHeaderSecondText
    void onDropDownComplete() -> onDropDownComplete
    void onBottomBegin() -> onBottomBegin
    void onBottom() -> onBottom
    void onBottomComplete() -> onBottomComplete
    void setSecondPositionVisible() -> setSecondPositionVisible
    void setHasMore(boolean) -> setHasMore
    boolean isHasMore() -> isHasMore
    android.widget.RelativeLayout getHeaderLayout() -> getHeaderLayout
    android.widget.RelativeLayout getFooterLayout() -> getFooterLayout
    float getHeaderPaddingTopRate() -> getHeaderPaddingTopRate
    void setHeaderPaddingTopRate(float) -> setHeaderPaddingTopRate
    int getHeaderReleaseMinDistance() -> getHeaderReleaseMinDistance
    void setHeaderReleaseMinDistance(int) -> setHeaderReleaseMinDistance
    java.lang.String getHeaderDefaultText() -> getHeaderDefaultText
    void setHeaderDefaultText(java.lang.String) -> setHeaderDefaultText
    java.lang.String getHeaderPullText() -> getHeaderPullText
    void setHeaderPullText(java.lang.String) -> setHeaderPullText
    java.lang.String getHeaderReleaseText() -> getHeaderReleaseText
    void setHeaderReleaseText(java.lang.String) -> setHeaderReleaseText
    java.lang.String getHeaderLoadingText() -> getHeaderLoadingText
    void setHeaderLoadingText(java.lang.String) -> setHeaderLoadingText
    java.lang.String getFooterDefaultText() -> getFooterDefaultText
    void setFooterDefaultText(java.lang.String) -> setFooterDefaultText
    java.lang.String getFooterLoadingText() -> getFooterLoadingText
    void setFooterLoadingText(java.lang.String) -> setFooterLoadingText
    java.lang.String getFooterNoMoreText() -> getFooterNoMoreText
    void setFooterNoMoreText(java.lang.String) -> setFooterNoMoreText
    void setHeaderStatusClickToLoad() -> setHeaderStatusClickToLoad
    void setHeaderStatusDropDownToLoad() -> setHeaderStatusDropDownToLoad
    void setHeaderStatusReleaseToLoad() -> setHeaderStatusReleaseToLoad
    void setHeaderStatusLoading() -> setHeaderStatusLoading
    void adjustHeaderPadding(android.view.MotionEvent) -> adjustHeaderPadding
    void resetHeaderPadding() -> resetHeaderPadding
    void measureHeaderLayout(android.view.View) -> measureHeaderLayout
    void getAttrs(android.content.Context,android.util.AttributeSet) -> getAttrs
cn.trinea.android.common.view.DropDownListView$1 -> cn.trinea.android.common.view.DropDownListView$1:
    cn.trinea.android.common.view.DropDownListView this$0 -> this$0
    void onClick(android.view.View) -> onClick
cn.trinea.android.common.view.DropDownListView$OnDropDownListener -> cn.trinea.android.common.view.DropDownListView$OnDropDownListener:
    void onDropDown() -> onDropDown
cn.trinea.android.common.view.HorizontalListView -> cn.trinea.android.common.view.HorizontalListView:
    boolean mAlwaysOverrideTouch -> mAlwaysOverrideTouch
    android.widget.ListAdapter mAdapter -> mAdapter
    int mLeftViewIndex -> mLeftViewIndex
    int mRightViewIndex -> mRightViewIndex
    int mCurrentX -> mCurrentX
    int mNextX -> mNextX
    int mMaxX -> mMaxX
    int mDisplayOffset -> mDisplayOffset
    android.widget.Scroller mScroller -> mScroller
    android.view.GestureDetector mGesture -> mGesture
    java.util.Queue mRemovedViewQueue -> mRemovedViewQueue
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelected -> mOnItemSelected
    android.widget.AdapterView$OnItemClickListener mOnItemClicked -> mOnItemClicked
    android.widget.AdapterView$OnItemLongClickListener mOnItemLongClicked -> mOnItemLongClicked
    boolean mDataChanged -> mDataChanged
    android.database.DataSetObserver mDataObserver -> mDataObserver
    android.view.GestureDetector$OnGestureListener mOnGesture -> mOnGesture
    void initView() -> initView
    void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    android.widget.ListAdapter getAdapter() -> getAdapter
    android.view.View getSelectedView() -> getSelectedView
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void reset() -> reset
    void setSelection(int) -> setSelection
    void addAndMeasureChild(android.view.View,int) -> addAndMeasureChild
    void onLayout(boolean,int,int,int,int) -> onLayout
    void fillList(int) -> fillList
    void fillListRight(int,int) -> fillListRight
    void fillListLeft(int,int) -> fillListLeft
    void removeNonVisibleItems(int) -> removeNonVisibleItems
    void positionItems(int) -> positionItems
    void scrollTo(int) -> scrollTo
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onDown(android.view.MotionEvent) -> onDown
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void access$2(cn.trinea.android.common.view.HorizontalListView,boolean) -> access$2
    void access$3(cn.trinea.android.common.view.HorizontalListView) -> access$3
    android.widget.AdapterView$OnItemClickListener access$4(cn.trinea.android.common.view.HorizontalListView) -> access$4
    int access$5(cn.trinea.android.common.view.HorizontalListView) -> access$5
    android.widget.AdapterView$OnItemSelectedListener access$6(cn.trinea.android.common.view.HorizontalListView) -> access$6
    android.widget.AdapterView$OnItemLongClickListener access$7(cn.trinea.android.common.view.HorizontalListView) -> access$7
cn.trinea.android.common.view.HorizontalListView$1 -> cn.trinea.android.common.view.HorizontalListView$1:
    cn.trinea.android.common.view.HorizontalListView this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
cn.trinea.android.common.view.HorizontalListView$2 -> cn.trinea.android.common.view.HorizontalListView$2:
    cn.trinea.android.common.view.HorizontalListView this$0 -> this$0
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean isEventWithinView(android.view.MotionEvent,android.view.View) -> isEventWithinView
cn.trinea.android.common.view.HorizontalListView$3 -> cn.trinea.android.common.view.HorizontalListView$3:
    cn.trinea.android.common.view.HorizontalListView this$0 -> this$0
    void run() -> run
cn.trinea.android.common.view.SlideOnePageGallery -> cn.trinea.android.common.view.SlideOnePageGallery:
    boolean isScrollingLeft(android.view.MotionEvent,android.view.MotionEvent) -> isScrollingLeft
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.UCMobile.PayPlugin.PayPluginService -> com.UCMobile.PayPlugin.PayPluginService:
    android.os.IBinder onBind(android.content.Intent) -> onBind
com.UCMobile.PayPlugin.PayResultReceiver -> com.UCMobile.PayPlugin.PayResultReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void native_UCPayResultNotify(java.lang.String) -> native_UCPayResultNotify
com.alipay.android.app.IAlixPay -> com.alipay.android.app.IAlixPay:
    java.lang.String Pay(java.lang.String) -> Pay
    java.lang.String test() -> test
    void registerCallback(com.alipay.android.app.IRemoteServiceCallback) -> registerCallback
    void unregisterCallback(com.alipay.android.app.IRemoteServiceCallback) -> unregisterCallback
    java.lang.String prePay(java.lang.String) -> prePay
com.alipay.android.app.IAlixPay$Stub -> com.alipay.android.app.IAlixPay$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_Pay -> TRANSACTION_Pay
    int TRANSACTION_test -> TRANSACTION_test
    int TRANSACTION_registerCallback -> TRANSACTION_registerCallback
    int TRANSACTION_unregisterCallback -> TRANSACTION_unregisterCallback
    int TRANSACTION_prePay -> TRANSACTION_prePay
    com.alipay.android.app.IAlixPay asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.alipay.android.app.IAlixPay$Stub$a -> com.alipay.android.app.a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String Pay(java.lang.String) -> Pay
    java.lang.String test() -> test
    void registerCallback(com.alipay.android.app.IRemoteServiceCallback) -> registerCallback
    void unregisterCallback(com.alipay.android.app.IRemoteServiceCallback) -> unregisterCallback
    java.lang.String prePay(java.lang.String) -> prePay
com.alipay.android.app.IRemoteServiceCallback -> com.alipay.android.app.IRemoteServiceCallback:
    void startActivity(java.lang.String,java.lang.String,int,android.os.Bundle) -> startActivity
    void payEnd(boolean,java.lang.String) -> payEnd
    boolean isHideLoadingScreen() -> isHideLoadingScreen
com.alipay.android.app.IRemoteServiceCallback$Stub -> com.alipay.android.app.IRemoteServiceCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_startActivity -> TRANSACTION_startActivity
    int TRANSACTION_payEnd -> TRANSACTION_payEnd
    int TRANSACTION_isHideLoadingScreen -> TRANSACTION_isHideLoadingScreen
    com.alipay.android.app.IRemoteServiceCallback asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.alipay.android.app.IRemoteServiceCallback$Stub$a -> com.alipay.android.app.b:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void startActivity(java.lang.String,java.lang.String,int,android.os.Bundle) -> startActivity
    void payEnd(boolean,java.lang.String) -> payEnd
    boolean isHideLoadingScreen() -> isHideLoadingScreen
com.alipay.mobilesecuritysdk.MainHandler -> com.alipay.mobilesecuritysdk.MainHandler:
com.alipay.mobilesecuritysdk.deviceID.CollectDeviceInfo -> com.alipay.mobilesecuritysdk.a.a:
    com.alipay.mobilesecuritysdk.deviceID.CollectDeviceInfo collectSingleton -> a
    com.alipay.mobilesecuritysdk.deviceID.CollectDeviceInfo getInstance() -> a
    java.lang.String getMacAddress(android.content.Context) -> a
    java.lang.String getCpuNum() -> b
    java.lang.String getSDKVer() -> c
    java.lang.String getOsVer() -> d
    java.lang.String getPhoneModel() -> e
    java.lang.String getImei(android.content.Context) -> b
    java.lang.String getImsi(android.content.Context) -> c
    java.lang.String getCpuFre() -> f
    long getTotalMemory() -> g
    long getSDCardMemory() -> h
    java.lang.String getRomName() -> i
    java.lang.String getBluMac() -> j
    java.lang.String getDeviceMx(android.content.Context) -> d
    java.lang.String getBandVer() -> k
    java.lang.String getPackageName(android.content.Context) -> e
com.alipay.mobilesecuritysdk.deviceID.DeviceIdManager -> com.alipay.mobilesecuritysdk.a.b:
    android.content.Context mcontext -> b
    java.util.Map strMap -> a
    java.lang.String GetApDid(java.util.Map) -> a
    void Update(android.content.Context,java.util.Map) -> a
    void UpdateLog() -> a
com.alipay.mobilesecuritysdk.deviceID.DeviceIdManager$1 -> com.alipay.mobilesecuritysdk.a.c:
    com.alipay.mobilesecuritysdk.deviceID.DeviceIdManager this$0 -> a
    android.content.Context val$context -> b
    java.util.Map val$args -> c
    void run() -> run
com.alipay.mobilesecuritysdk.deviceID.DeviceIdManager$2 -> com.alipay.mobilesecuritysdk.a.d:
    com.alipay.mobilesecuritysdk.deviceID.DeviceIdManager this$0 -> a
    void run() -> run
com.alipay.mobilesecuritysdk.deviceID.DeviceIdModel -> com.alipay.mobilesecuritysdk.a.e:
    com.alipay.mobilesecuritysdk.deviceID.DeviceMetaData dv -> a
    com.alipay.mobilesecuritysdk.deviceID.Profile profile -> b
    void Init(android.content.Context,java.util.Map) -> a
    java.lang.String UpdateId(android.content.Context,java.util.Map) -> b
    java.util.Map GetUploadInfo() -> a
    boolean CheckPrivateData(java.util.Map) -> a
    java.util.Map GetPrivateData(android.content.Context) -> a
    void WritePrivateData(android.content.Context,java.lang.String) -> a
    boolean hasInPublic() -> b
    java.lang.String readDataFromSettings() -> c
    void WriteDataToSettings(java.lang.String) -> a
    void WriteDataToSdCard(java.lang.String) -> b
    java.lang.String readDataFromSdCard() -> d
    boolean hasDataInSettings() -> g
    boolean hasDataInSdcard() -> h
    boolean checkCheckCode(java.lang.String,java.lang.String) -> a
    java.lang.String generaterCheckCode() -> e
    java.lang.String getCheckCodeString() -> i
    boolean checkApdid() -> f
    com.alipay.mobilesecuritysdk.deviceID.IdResponseInfo UploadData(android.content.Context) -> b
    java.lang.String UpdateId(android.content.Context) -> c
    void Log(java.lang.String) -> c
com.alipay.mobilesecuritysdk.deviceID.DeviceMetaData -> com.alipay.mobilesecuritysdk.a.f:
    java.lang.String mah1 -> a
    java.lang.String mah2 -> b
    java.lang.String mah3 -> c
    java.lang.String mah4 -> d
    java.lang.String mah5 -> e
    java.lang.String mah6 -> f
    java.lang.String mah7 -> g
    java.lang.String mah8 -> h
    java.lang.String mah9 -> i
    java.lang.String mah10 -> j
    java.lang.String mas1 -> k
    java.lang.String mas2 -> l
    java.lang.String mas3 -> m
    java.lang.String mas4 -> n
    java.lang.String mtime -> o
    java.lang.String mtid -> p
    java.lang.String mutdid -> q
    java.lang.String mappId -> r
    java.lang.String mdeviceId -> s
    java.lang.String mpriDeviceId -> t
    java.lang.String mapdtk -> u
    java.lang.String mrule -> v
    java.lang.String getMappId() -> a
    void setMappId(java.lang.String) -> a
    java.lang.String getMdeviceId() -> b
    void setMdeviceId(java.lang.String) -> b
    java.lang.String getMpriDeviceId() -> c
    void setMpriDeviceId(java.lang.String) -> c
    java.lang.String getMrule() -> d
    void setMrule(java.lang.String) -> d
    java.lang.String getMtid() -> e
    void setMtid(java.lang.String) -> e
    java.lang.String getMutdid() -> f
    void setMutdid(java.lang.String) -> f
    java.lang.String getMah1() -> g
    void setMah1(java.lang.String) -> g
    java.lang.String getMah2() -> h
    void setMah2(java.lang.String) -> h
    java.lang.String getMah3() -> i
    void setMah3(java.lang.String) -> i
    java.lang.String getMah4() -> j
    void setMah4(java.lang.String) -> j
    java.lang.String getMah5() -> k
    void setMah5(java.lang.String) -> k
    java.lang.String getMah6() -> l
    void setMah6(java.lang.String) -> l
    java.lang.String getMah7() -> m
    void setMah7(java.lang.String) -> m
    java.lang.String getMah8() -> n
    void setMah8(java.lang.String) -> n
    java.lang.String getMah9() -> o
    void setMah9(java.lang.String) -> o
    java.lang.String getMah10() -> p
    void setMah10(java.lang.String) -> p
    java.lang.String getMtime() -> q
    void setMtime(java.lang.String) -> q
    java.lang.String getMapdtk() -> r
    void setMapdtk(java.lang.String) -> r
    java.lang.String getMas1() -> s
    void setMas1(java.lang.String) -> s
    java.lang.String getMas2() -> t
    void setMas2(java.lang.String) -> t
    java.lang.String getMas3() -> u
    void setMas3(java.lang.String) -> u
    java.lang.String getMas4() -> v
    void setMas4(java.lang.String) -> v
com.alipay.mobilesecuritysdk.deviceID.IdResponseInfo -> com.alipay.mobilesecuritysdk.a.g:
    java.lang.String mversion -> a
    java.lang.String mapdid -> b
    java.lang.String mapdtk -> c
    java.lang.String mrule -> d
    java.lang.String mtime -> e
    java.lang.String mcheckcode -> f
    java.lang.String fuction -> g
    boolean msuccess -> h
    void setFuction(java.lang.String) -> a
    java.lang.String getMcheckcode() -> a
    void setMcheckcode(java.lang.String) -> b
    java.lang.String getMtime() -> b
    void setMtime(java.lang.String) -> c
    boolean isMsuccess() -> c
    void setMsuccess(boolean) -> a
    void setMversion(java.lang.String) -> d
    java.lang.String getMapdid() -> d
    void setMapdid(java.lang.String) -> e
    java.lang.String getMapdtk() -> e
    void setMapdtk(java.lang.String) -> f
    java.lang.String getMrule() -> f
    void setMrule(java.lang.String) -> g
com.alipay.mobilesecuritysdk.deviceID.LOG -> com.alipay.mobilesecuritysdk.a.h:
    java.io.File logFileDir -> b
    java.io.File logFileName -> c
    java.lang.String model -> d
    java.lang.String pkgName -> e
    boolean DBG -> a
    java.lang.String TAG -> f
    android.content.Context mcontext -> g
    void init(android.content.Context) -> a
    void uploadLogFile() -> a
    boolean doUpload(java.lang.String) -> a
    void logMessage(java.util.List) -> a
    long checkLogFile() -> b
    java.lang.String getCurLogFileName() -> c
    void getInfo(android.content.Context) -> b
    java.lang.String toJsonString(java.lang.String) -> b
    java.lang.String getStackString(java.lang.Throwable) -> a
com.alipay.mobilesecuritysdk.deviceID.Profile -> com.alipay.mobilesecuritysdk.a.i:
    java.lang.String generatePrivateData(java.util.Map) -> a
    java.lang.String MaptoString(java.util.Map) -> c
    java.lang.String generateUploadData(java.util.Map) -> b
    com.alipay.mobilesecuritysdk.deviceID.IdResponseInfo ParseResponse(java.lang.String) -> a
    java.util.Map getMap(java.lang.String) -> b
    java.lang.String GetDataFromSharedPre(android.content.SharedPreferences,java.lang.String) -> a
    void SetDataToSharePre(android.content.SharedPreferences,java.util.Map) -> a
com.alipay.mobilesecuritysdk.deviceID.SecurityUtils -> com.alipay.mobilesecuritysdk.a.j:
    java.lang.String str -> a
    java.lang.String getSeed() -> a
    java.lang.String encrypt(java.lang.String,java.lang.String) -> a
    java.lang.String decrypt(java.lang.String,java.lang.String) -> b
    byte[] getRawKey(byte[]) -> b
    byte[] encrypt(byte[],byte[]) -> a
    byte[] decrypt(byte[],byte[]) -> b
    byte[] toByte(java.lang.String) -> a
    java.lang.String toHex(byte[]) -> a
    void appendHex(java.lang.StringBuffer,byte) -> a
com.alipay.mobilesecuritysdk.face.SecurityClientMobile -> com.alipay.mobilesecuritysdk.b.a:
    boolean isError -> a
    boolean isDebug -> b
    java.lang.String GetApdid(android.content.Context,java.util.Map) -> a
com.alipay.mobilesecuritysdk.util.CommonUtils -> com.alipay.mobilesecuritysdk.c.a:
    boolean isNetWorkActive(android.content.Context) -> a
    boolean isBlank(java.lang.String) -> a
    boolean IsEmpty(java.lang.String) -> b
    java.lang.String MD5(java.lang.String) -> c
    java.lang.String ReadFile(java.lang.String) -> d
    void WriteFile(java.lang.String,java.lang.String) -> a
    java.lang.String textCompress(java.lang.String) -> e
    boolean GetSdCardFile() -> a
com.alipay.sdk.app.AuthTask -> com.alipay.sdk.app.AuthTask:
    android.app.Activity a -> a
    java.lang.String auth(java.lang.String) -> auth
com.alipay.sdk.app.H5AuthActivity -> com.alipay.sdk.app.a:
    android.webkit.WebView a -> a
    com.alipay.sdk.widget.a b -> b
    android.os.Handler c -> c
    boolean d -> d
    java.lang.Runnable e -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void finish() -> finish
    void a(org.json.JSONObject) -> a
    void e() -> a
    void f() -> b
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void a(com.alipay.sdk.app.H5AuthActivity) -> a
    void b(com.alipay.sdk.app.H5AuthActivity) -> b
    void c(com.alipay.sdk.app.H5AuthActivity) -> c
    android.webkit.WebView d(com.alipay.sdk.app.H5AuthActivity) -> d
    boolean e(com.alipay.sdk.app.H5AuthActivity) -> e
    boolean a(com.alipay.sdk.app.H5AuthActivity,boolean) -> a
    void f(com.alipay.sdk.app.H5AuthActivity) -> f
    java.lang.Runnable g(com.alipay.sdk.app.H5AuthActivity) -> g
    android.os.Handler h(com.alipay.sdk.app.H5AuthActivity) -> h
    void i(com.alipay.sdk.app.H5AuthActivity) -> i
    void a(com.alipay.sdk.app.H5AuthActivity,java.lang.String) -> a
    void a(com.alipay.sdk.app.H5AuthActivity,com.alipay.sdk.authjs.a) -> a
com.alipay.sdk.app.H5AuthActivity$a -> com.alipay.sdk.app.b:
    com.alipay.sdk.app.H5AuthActivity a -> a
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
com.alipay.sdk.app.H5AuthActivity$b -> com.alipay.sdk.app.c:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.alipay.sdk.app.H5PayActivity -> com.alipay.sdk.app.H5PayActivity:
    android.webkit.WebView a -> a
    com.alipay.sdk.widget.a b -> b
    android.os.Handler c -> c
    boolean d -> d
    boolean e -> e
    java.lang.Runnable f -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void finish() -> finish
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean a(com.alipay.sdk.app.H5PayActivity) -> a
    boolean b(com.alipay.sdk.app.H5PayActivity) -> b
    boolean a(com.alipay.sdk.app.H5PayActivity,boolean) -> a
    void c(com.alipay.sdk.app.H5PayActivity) -> c
    java.lang.Runnable d(com.alipay.sdk.app.H5PayActivity) -> d
    android.os.Handler e(com.alipay.sdk.app.H5PayActivity) -> e
    void f(com.alipay.sdk.app.H5PayActivity) -> f
com.alipay.sdk.app.H5PayActivity$a -> com.alipay.sdk.app.d:
    com.alipay.sdk.app.H5PayActivity a -> a
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
com.alipay.sdk.app.H5PayActivity$b -> com.alipay.sdk.app.e:
    com.alipay.sdk.app.H5PayActivity a -> a
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message) -> onFormResubmission
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.alipay.sdk.app.PayTask -> com.alipay.sdk.app.PayTask:
    android.app.Activity b -> b
    java.lang.String c -> c
    java.lang.Object a -> a
    boolean d -> d
    java.lang.String pay(java.lang.String) -> pay
    java.lang.String getVersion() -> getVersion
    boolean checkAccountIfExist() -> checkAccountIfExist
    java.lang.String b() -> a
    java.lang.String a(com.alipay.sdk.protocol.a) -> a
com.alipay.sdk.app.a -> com.alipay.sdk.app.f:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
com.alipay.sdk.app.aa -> com.alipay.sdk.app.g:
    com.alipay.sdk.app.H5PayActivity$b a -> a
    void run() -> run
com.alipay.sdk.app.ab -> com.alipay.sdk.app.h:
    java.lang.String a -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String a(int,java.lang.String,java.lang.String) -> a
com.alipay.sdk.app.ac -> com.alipay.sdk.app.i:
    com.alipay.sdk.app.ac a -> a
    com.alipay.sdk.app.ac b -> b
    com.alipay.sdk.app.ac c -> c
    com.alipay.sdk.app.ac d -> d
    com.alipay.sdk.app.ac e -> e
    com.alipay.sdk.app.ac f -> f
    int g -> g
    java.lang.String h -> h
    com.alipay.sdk.app.ac[] i -> i
    com.alipay.sdk.app.ac[] values() -> values
    com.alipay.sdk.app.ac valueOf(java.lang.String) -> valueOf
    int a() -> a
    java.lang.String b() -> b
    com.alipay.sdk.app.ac a(int) -> a
com.alipay.sdk.app.b -> com.alipay.sdk.app.j:
    java.lang.String a -> a
    com.alipay.sdk.app.H5AuthActivity b -> b
    void run() -> run
com.alipay.sdk.app.c -> com.alipay.sdk.app.k:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void run() -> run
com.alipay.sdk.app.d -> com.alipay.sdk.app.l:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void run() -> run
com.alipay.sdk.app.e -> com.alipay.sdk.app.m:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void run() -> run
com.alipay.sdk.app.f -> com.alipay.sdk.app.n:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void run() -> run
com.alipay.sdk.app.g -> com.alipay.sdk.app.o:
    java.lang.String a -> a
    com.alipay.sdk.app.H5AuthActivity b -> b
    void run() -> run
com.alipay.sdk.app.h -> com.alipay.sdk.app.p:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.i -> com.alipay.sdk.app.q:
    com.alipay.sdk.app.h a -> a
    void run() -> run
com.alipay.sdk.app.j -> com.alipay.sdk.app.r:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.k -> com.alipay.sdk.app.s:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.l -> com.alipay.sdk.app.t:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void a(com.alipay.sdk.authjs.a) -> a
com.alipay.sdk.app.m -> com.alipay.sdk.app.u:
    android.webkit.SslErrorHandler a -> a
    com.alipay.sdk.app.H5AuthActivity$b b -> b
    void run() -> run
com.alipay.sdk.app.n -> com.alipay.sdk.app.v:
    com.alipay.sdk.app.m a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.o -> com.alipay.sdk.app.w:
    com.alipay.sdk.app.m a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.p -> com.alipay.sdk.app.x:
    com.alipay.sdk.app.H5AuthActivity$b a -> a
    void run() -> run
com.alipay.sdk.app.q -> com.alipay.sdk.app.y:
    com.alipay.sdk.app.H5PayActivity a -> a
    void run() -> run
com.alipay.sdk.app.r -> com.alipay.sdk.app.z:
    android.webkit.JsResult a -> a
    com.alipay.sdk.app.H5PayActivity$a b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.s -> com.alipay.sdk.app.aa:
    android.webkit.JsResult a -> a
    com.alipay.sdk.app.H5PayActivity$a b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.t -> com.alipay.sdk.app.ab:
    android.webkit.JsResult a -> a
    com.alipay.sdk.app.H5PayActivity$a b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.u -> com.alipay.sdk.app.ac:
    android.webkit.JsResult a -> a
    com.alipay.sdk.app.H5PayActivity$a b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.v -> com.alipay.sdk.app.ad:
    android.webkit.JsPromptResult a -> a
    com.alipay.sdk.app.H5PayActivity$a b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.w -> com.alipay.sdk.app.ae:
    android.webkit.JsPromptResult a -> a
    com.alipay.sdk.app.H5PayActivity$a b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.x -> com.alipay.sdk.app.af:
    android.webkit.SslErrorHandler a -> a
    com.alipay.sdk.app.H5PayActivity$b b -> b
    void run() -> run
com.alipay.sdk.app.y -> com.alipay.sdk.app.ag:
    com.alipay.sdk.app.x a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.z -> com.alipay.sdk.app.ah:
    com.alipay.sdk.app.x a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.auth.AuthActivity -> com.alipay.sdk.auth.AuthActivity:
    android.webkit.WebView c -> a
    java.lang.String d -> b
    com.alipay.sdk.widget.a e -> c
    android.os.Handler f -> d
    boolean g -> e
    java.lang.Runnable h -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void a(org.json.JSONObject) -> a
    boolean a(java.lang.String) -> a
    void d() -> a
    void e() -> b
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void a(com.alipay.sdk.auth.AuthActivity) -> a
    void b(com.alipay.sdk.auth.AuthActivity) -> b
    void c(com.alipay.sdk.auth.AuthActivity) -> c
    android.webkit.WebView d(com.alipay.sdk.auth.AuthActivity) -> d
    boolean e(com.alipay.sdk.auth.AuthActivity) -> e
    boolean a(com.alipay.sdk.auth.AuthActivity,boolean) -> a
    boolean a(com.alipay.sdk.auth.AuthActivity,java.lang.String) -> a
    void f(com.alipay.sdk.auth.AuthActivity) -> f
    java.lang.Runnable g(com.alipay.sdk.auth.AuthActivity) -> g
    android.os.Handler h(com.alipay.sdk.auth.AuthActivity) -> h
    void i(com.alipay.sdk.auth.AuthActivity) -> i
    void b(com.alipay.sdk.auth.AuthActivity,java.lang.String) -> b
    void a(com.alipay.sdk.auth.AuthActivity,com.alipay.sdk.authjs.a) -> a
com.alipay.sdk.auth.AuthActivity$a -> com.alipay.sdk.auth.a:
    com.alipay.sdk.auth.AuthActivity a -> a
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
com.alipay.sdk.auth.AuthActivity$b -> com.alipay.sdk.auth.b:
    com.alipay.sdk.auth.AuthActivity a -> a
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.alipay.sdk.auth.a -> com.alipay.sdk.auth.c:
    com.alipay.sdk.auth.AuthActivity a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
com.alipay.sdk.auth.b -> com.alipay.sdk.auth.d:
    java.lang.String a -> a
    com.alipay.sdk.auth.AuthActivity b -> b
    void run() -> run
com.alipay.sdk.auth.c -> com.alipay.sdk.auth.e:
    com.alipay.sdk.auth.AuthActivity a -> a
    void run() -> run
com.alipay.sdk.auth.d -> com.alipay.sdk.auth.f:
    com.alipay.sdk.auth.AuthActivity a -> a
    void run() -> run
com.alipay.sdk.auth.e -> com.alipay.sdk.auth.g:
    com.alipay.sdk.auth.AuthActivity a -> a
    void run() -> run
com.alipay.sdk.auth.f -> com.alipay.sdk.auth.h:
    com.alipay.sdk.auth.AuthActivity a -> a
    void run() -> run
com.alipay.sdk.auth.g -> com.alipay.sdk.auth.i:
    java.lang.String a -> a
    com.alipay.sdk.auth.AuthActivity b -> b
    void run() -> run
com.alipay.sdk.auth.h -> com.alipay.sdk.auth.j:
    com.alipay.sdk.auth.AuthActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.auth.i -> com.alipay.sdk.auth.k:
    com.alipay.sdk.auth.h a -> a
    void run() -> run
com.alipay.sdk.auth.j -> com.alipay.sdk.auth.l:
    com.alipay.sdk.auth.AuthActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.auth.k -> com.alipay.sdk.auth.m:
    com.alipay.sdk.auth.AuthActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.auth.l -> com.alipay.sdk.auth.n:
    com.alipay.sdk.auth.AuthActivity a -> a
    void a(com.alipay.sdk.authjs.a) -> a
com.alipay.sdk.auth.m -> com.alipay.sdk.auth.o:
    android.webkit.SslErrorHandler a -> a
    com.alipay.sdk.auth.AuthActivity$b b -> b
    void run() -> run
com.alipay.sdk.auth.n -> com.alipay.sdk.auth.p:
    com.alipay.sdk.auth.m a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.auth.o -> com.alipay.sdk.auth.q:
    com.alipay.sdk.auth.m a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.auth.p -> com.alipay.sdk.auth.r:
    void a(android.app.Activity,java.lang.String) -> a
com.alipay.sdk.authjs.a -> com.alipay.sdk.a.a:
    java.lang.String i -> a
    java.lang.String j -> b
    java.lang.String k -> c
    java.lang.String m -> e
    org.json.JSONObject l -> d
    boolean n -> f
    java.lang.String a() -> a
com.alipay.sdk.authjs.a$a -> com.alipay.sdk.a.b:
    com.alipay.sdk.authjs.a$a a -> a
    com.alipay.sdk.authjs.a$a b -> b
    com.alipay.sdk.authjs.a$a c -> c
    com.alipay.sdk.authjs.a$a d -> d
    com.alipay.sdk.authjs.a$a e -> e
    com.alipay.sdk.authjs.a$a[] f -> f
    com.alipay.sdk.authjs.a$a[] values() -> values
    com.alipay.sdk.authjs.a$a valueOf(java.lang.String) -> valueOf
com.alipay.sdk.authjs.b -> com.alipay.sdk.a.c:
    void a(com.alipay.sdk.authjs.a) -> a
com.alipay.sdk.authjs.c -> com.alipay.sdk.a.d:
    com.alipay.sdk.authjs.b a -> a
    android.content.Context b -> b
    void a(java.lang.String) -> a
    void a(java.lang.String,com.alipay.sdk.authjs.a$a) -> a
com.alipay.sdk.authjs.d -> com.alipay.sdk.a.e:
    com.alipay.sdk.authjs.a a -> a
    com.alipay.sdk.authjs.c b -> b
    void run() -> run
com.alipay.sdk.authjs.e -> com.alipay.sdk.a.f:
    com.alipay.sdk.authjs.a a -> a
    com.alipay.sdk.authjs.c b -> b
    void run() -> run
com.alipay.sdk.cons.a -> com.alipay.sdk.b.a:
    java.lang.String b -> a
    java.lang.String c -> b
com.alipay.sdk.data.a -> com.alipay.sdk.c.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String toString() -> toString
com.alipay.sdk.data.b -> com.alipay.sdk.c.b:
    com.alipay.sdk.data.e a(com.alipay.sdk.data.c,java.lang.String,org.json.JSONObject) -> a
    void a(com.alipay.sdk.data.c,com.alipay.sdk.data.e,java.lang.String) -> a
    java.lang.String d(java.lang.String) -> a
    byte[] a(byte[]) -> a
    com.alipay.sdk.data.e a() -> a
com.alipay.sdk.data.c -> com.alipay.sdk.c.c:
    org.apache.http.Header[] b -> a
    java.lang.String c -> b
    java.lang.String d -> c
    java.util.ArrayList a() -> a
com.alipay.sdk.data.d -> com.alipay.sdk.c.d:
    com.alipay.sdk.data.d g -> d
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.alipay.sdk.data.d a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
com.alipay.sdk.data.e -> com.alipay.sdk.c.e:
    com.alipay.sdk.data.a a -> a
    org.json.JSONObject e -> e
    org.json.JSONObject f -> f
    long g -> g
    java.lang.ref.WeakReference b -> b
    boolean c -> c
    boolean d -> d
    org.json.JSONObject a(java.lang.String) -> a
    java.lang.String toString() -> toString
com.alipay.sdk.data.f -> com.alipay.sdk.c.f:
    int c -> a
    java.lang.String d -> b
    long e -> c
    java.lang.String f -> d
    java.lang.String g -> e
    java.lang.String h -> f
    org.json.JSONObject i -> g
    java.lang.String j -> h
    boolean k -> i
    com.alipay.sdk.data.a l -> j
    org.apache.http.Header[] m -> k
com.alipay.sdk.encrypt.a -> com.alipay.sdk.d.a:
    byte[] i -> a
    char[] j -> b
    boolean b(char) -> a
    boolean c(char) -> b
    java.lang.String a(byte[]) -> a
    byte[] a(java.lang.String) -> a
com.alipay.sdk.encrypt.b -> com.alipay.sdk.d.b:
    java.lang.String a(int,java.lang.String,java.lang.String) -> a
com.alipay.sdk.encrypt.c -> com.alipay.sdk.d.c:
    java.lang.String a(byte[]) -> a
    java.lang.String b(byte[]) -> b
com.alipay.sdk.encrypt.d -> com.alipay.sdk.d.d:
    java.lang.String a(java.lang.String,java.lang.String) -> a
com.alipay.sdk.encrypt.e -> com.alipay.sdk.d.e:
    java.lang.String a -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
com.alipay.sdk.exception.NetErrorException -> com.alipay.sdk.e.a:
    int errorCode -> a
    void printException(java.lang.String,java.lang.Throwable) -> a
com.alipay.sdk.net.a -> com.alipay.sdk.f.a:
    android.content.Context b -> b
    java.lang.String a -> a
    java.net.URL b() -> a
    org.apache.http.HttpResponse a(java.lang.String,com.alipay.sdk.data.c) -> a
    android.net.NetworkInfo f() -> b
    java.lang.String g() -> c
com.alipay.sdk.net.b -> com.alipay.sdk.f.b:
    com.alipay.sdk.net.b c -> b
    org.apache.http.impl.client.DefaultHttpClient b -> a
    com.alipay.sdk.net.b a() -> a
    void b() -> b
    org.apache.http.HttpResponse a(org.apache.http.client.methods.HttpUriRequest) -> a
com.alipay.sdk.net.c -> com.alipay.sdk.f.c:
    com.alipay.sdk.net.a a -> a
    java.lang.String a(org.apache.http.HttpResponse) -> a
com.alipay.sdk.net.d -> com.alipay.sdk.f.d:
    int a -> a
    com.alipay.sdk.data.c b -> b
    com.alipay.sdk.protocol.c a(android.content.Context,com.alipay.sdk.data.e,boolean) -> a
    org.json.JSONObject a(android.content.Context,com.alipay.sdk.data.e,com.alipay.sdk.data.f) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,com.alipay.sdk.data.c,com.alipay.sdk.data.f) -> a
    org.json.JSONObject a(java.lang.String,com.alipay.sdk.data.f) -> a
com.alipay.sdk.protocol.a -> com.alipay.sdk.g.a:
    com.alipay.sdk.protocol.a a -> a
    com.alipay.sdk.protocol.a b -> b
    com.alipay.sdk.protocol.a c -> c
    com.alipay.sdk.protocol.a d -> d
    com.alipay.sdk.protocol.a e -> e
    com.alipay.sdk.protocol.a f -> f
    com.alipay.sdk.protocol.a g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    org.json.JSONObject k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    boolean o -> o
    boolean p -> p
    boolean q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    org.json.JSONObject u -> u
    com.alipay.sdk.protocol.a[] v -> v
    com.alipay.sdk.protocol.a[] values() -> values
    com.alipay.sdk.protocol.a valueOf(java.lang.String) -> valueOf
    java.lang.String e() -> a
    com.alipay.sdk.protocol.a[] a(com.alipay.sdk.protocol.b) -> a
com.alipay.sdk.protocol.b -> com.alipay.sdk.g.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    org.json.JSONObject l -> l
    com.alipay.sdk.protocol.b a(org.json.JSONObject,java.lang.String) -> a
    com.alipay.sdk.protocol.b a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,org.json.JSONObject) -> a
    org.json.JSONObject a() -> a
com.alipay.sdk.protocol.c -> com.alipay.sdk.g.c:
    com.alipay.sdk.data.e a -> a
    com.alipay.sdk.data.f b -> b
    org.json.JSONObject c -> c
    void a(org.json.JSONObject) -> a
com.alipay.sdk.protocol.e -> com.alipay.sdk.g.d:
    com.alipay.sdk.protocol.g a(com.alipay.sdk.protocol.c) -> a
com.alipay.sdk.protocol.e$1 -> com.alipay.sdk.g.e:
    int[] a -> a
com.alipay.sdk.protocol.f -> com.alipay.sdk.g.f:
    com.alipay.sdk.protocol.f a -> a
    com.alipay.sdk.protocol.f b -> b
    com.alipay.sdk.protocol.f c -> c
    com.alipay.sdk.protocol.f d -> d
    java.lang.String e -> e
    com.alipay.sdk.protocol.f[] f -> f
    com.alipay.sdk.protocol.f[] values() -> values
    com.alipay.sdk.protocol.f valueOf(java.lang.String) -> valueOf
    com.alipay.sdk.protocol.f a(java.lang.String) -> a
com.alipay.sdk.protocol.g -> com.alipay.sdk.g.g:
    int l -> e
    boolean m -> f
    void a(org.json.JSONObject) -> a
com.alipay.sdk.protocol.h -> com.alipay.sdk.g.h:
    boolean k -> d
com.alipay.sdk.sys.a -> com.alipay.sdk.h.a:
    com.alipay.sdk.sys.a c -> c
    android.content.Context a -> a
    com.alipay.sdk.data.d b -> b
    com.alipay.sdk.sys.a a() -> a
    void a(android.content.Context,com.alipay.sdk.data.d) -> a
    boolean b() -> b
    java.lang.String a(java.lang.String[]) -> a
    java.lang.String c() -> c
com.alipay.sdk.sys.b -> com.alipay.sdk.h.b:
    double a -> a
    double b -> b
    java.lang.String a() -> a
com.alipay.sdk.tid.a -> com.alipay.sdk.i.a:
    java.lang.ref.WeakReference c -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String c(java.lang.String,java.lang.String) -> c
    boolean a(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String) -> a
    java.lang.String e(java.lang.String,java.lang.String) -> d
    void b(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.database.sqlite.SQLiteDatabase,java.lang.String) -> a
com.alipay.sdk.tid.b -> com.alipay.sdk.i.b:
    com.alipay.sdk.tid.b c -> c
    java.lang.String a -> a
    java.lang.String b -> b
    com.alipay.sdk.tid.b a() -> a
com.alipay.sdk.util.a -> com.alipay.sdk.j.a:
    java.lang.String[] a(java.lang.String) -> a
com.alipay.sdk.util.b -> com.alipay.sdk.j.b:
    java.lang.Object a -> a
    boolean c -> b
    java.lang.String a(android.app.Activity,java.lang.String) -> a
    java.lang.String b(android.app.Activity,java.lang.String) -> b
    boolean a(android.content.Context) -> a
com.alipay.sdk.util.c -> com.alipay.sdk.j.c:
    java.lang.String b -> a
    java.lang.String c -> b
    java.lang.String d -> c
    com.alipay.sdk.util.c e -> d
    com.alipay.sdk.util.c a(android.content.Context) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> a
    java.lang.String c() -> c
    com.alipay.sdk.util.f b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
com.alipay.sdk.util.d -> com.alipay.sdk.j.d:
    org.json.JSONObject a(org.json.JSONObject,org.json.JSONObject) -> a
com.alipay.sdk.util.f -> com.alipay.sdk.j.e:
    com.alipay.sdk.util.f a -> a
    com.alipay.sdk.util.f b -> b
    com.alipay.sdk.util.f c -> c
    com.alipay.sdk.util.f d -> d
    com.alipay.sdk.util.f e -> e
    com.alipay.sdk.util.f f -> f
    com.alipay.sdk.util.f g -> g
    com.alipay.sdk.util.f h -> h
    com.alipay.sdk.util.f i -> i
    com.alipay.sdk.util.f j -> j
    com.alipay.sdk.util.f k -> k
    com.alipay.sdk.util.f l -> l
    com.alipay.sdk.util.f m -> m
    com.alipay.sdk.util.f n -> n
    com.alipay.sdk.util.f o -> o
    int p -> p
    java.lang.String q -> q
    com.alipay.sdk.util.f[] r -> r
    com.alipay.sdk.util.f[] values() -> values
    com.alipay.sdk.util.f valueOf(java.lang.String) -> valueOf
    java.lang.String a() -> a
    com.alipay.sdk.util.f a(int) -> a
com.alipay.sdk.util.g -> com.alipay.sdk.j.f:
    android.app.Activity b -> a
    com.alipay.android.app.IAlixPay c -> b
    java.lang.Object d -> c
    boolean e -> d
    android.content.ServiceConnection f -> e
    com.alipay.android.app.IRemoteServiceCallback g -> f
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,android.content.Intent) -> a
    com.alipay.android.app.IAlixPay a(com.alipay.sdk.util.g,com.alipay.android.app.IAlixPay) -> a
    java.lang.Object a(com.alipay.sdk.util.g) -> a
    android.app.Activity b(com.alipay.sdk.util.g) -> b
com.alipay.sdk.util.h -> com.alipay.sdk.j.g:
    com.alipay.sdk.util.g a -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.alipay.sdk.util.i -> com.alipay.sdk.j.h:
    com.alipay.sdk.util.g a -> a
    boolean isHideLoadingScreen() -> isHideLoadingScreen
    void payEnd(boolean,java.lang.String) -> payEnd
    void startActivity(java.lang.String,java.lang.String,int,android.os.Bundle) -> startActivity
com.alipay.sdk.util.j -> com.alipay.sdk.j.i:
    java.lang.String a(byte[]) -> a
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    boolean a(java.lang.String) -> a
com.alipay.sdk.widget.a -> com.alipay.sdk.k.a:
    android.app.Activity a -> a
    android.app.ProgressDialog b -> b
    boolean a() -> a
    void b() -> b
    void c() -> c
com.alipay.sdk.widget.b -> com.alipay.sdk.k.b:
    boolean a -> a
    android.content.DialogInterface$OnCancelListener b -> b
    java.lang.CharSequence c -> c
    com.alipay.sdk.widget.a d -> d
    void run() -> run
com.alipay.sdk.widget.c -> com.alipay.sdk.k.c:
    com.alipay.sdk.widget.a a -> a
    void run() -> run
com.alipay.sdk.widget.d -> com.alipay.sdk.k.d:
    boolean a -> a
    android.app.Dialog a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.content.DialogInterface$OnClickListener,java.lang.String,android.content.DialogInterface$OnClickListener) -> a
com.alipay.sdk.widget.e -> com.alipay.sdk.k.e:
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.baidu.android.pushservice.BasicPushNotificationBuilder -> com.baidu.android.pushservice.BasicPushNotificationBuilder:
    com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder a -> a
    com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder getInner() -> getInner
    android.app.Notification construct(android.content.Context) -> construct
    com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder a(com.baidu.android.pushservice.BasicPushNotificationBuilder,com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder) -> a
com.baidu.android.pushservice.BasicPushNotificationBuilder$1 -> com.baidu.android.pushservice.BasicPushNotificationBuilder$1:
    android.content.Context a -> a
    com.baidu.android.pushservice.BasicPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CommandService -> com.baidu.android.pushservice.CommandService:
    java.lang.String a -> a
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    java.lang.String getReceiver(java.lang.String,java.lang.String) -> getReceiver
    void reflectReceiver(android.content.Intent) -> reflectReceiver
com.baidu.android.pushservice.CustomPushNotificationBuilder -> com.baidu.android.pushservice.CustomPushNotificationBuilder:
    boolean a -> a
    com.baidu.android.pushservice.apiproxy.BridgeCustomPushNotificationBuilder getInner() -> getInner
    void setLayoutDrawable(int) -> setLayoutDrawable
    android.app.Notification construct(android.content.Context) -> construct
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    void a(int) -> a
    com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder getInner() -> getInner
    boolean a(com.baidu.android.pushservice.CustomPushNotificationBuilder,boolean) -> a
    boolean a(com.baidu.android.pushservice.CustomPushNotificationBuilder) -> a
    void a(com.baidu.android.pushservice.CustomPushNotificationBuilder,int) -> a
com.baidu.android.pushservice.CustomPushNotificationBuilder$1 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$1:
    android.content.Context a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    com.baidu.android.pushservice.CustomPushNotificationBuilder f -> f
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$2 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$2:
    int a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$3 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$3:
    int a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$4 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$4:
    java.lang.String a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$5 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$5:
    java.lang.String a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$6 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$6:
    int a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$7 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$7:
    int a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$8 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$8:
    android.net.Uri a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$9 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$9:
    long[] a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.IPushLightappListener -> com.baidu.android.pushservice.IPushLightappListener:
    void initialComplete(com.baidu.android.pushservice.PushLightapp) -> initialComplete
    void onSubscribeResult(int,java.lang.String) -> onSubscribeResult
    void onUnsubscribeResult(int,java.lang.String) -> onUnsubscribeResult
    void onUnbindLightResult(int,java.lang.String) -> onUnbindLightResult
    void onSubscribeByApiKey(int,java.lang.String) -> onSubscribeByApiKey
com.baidu.android.pushservice.Internal -> com.baidu.android.pushservice.Internal:
    void enablePushService(android.content.Context) -> enablePushService
    void disablePushService(android.content.Context) -> disablePushService
    void disablePushConnection(android.content.Context) -> disablePushConnection
    void enablePushConnection(android.content.Context) -> enablePushConnection
    void createBdussIntent(android.content.Context) -> createBdussIntent
com.baidu.android.pushservice.Internal$1 -> com.baidu.android.pushservice.Internal$1:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.Internal$2 -> com.baidu.android.pushservice.Internal$2:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.Internal$3 -> com.baidu.android.pushservice.Internal$3:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.Internal$4 -> com.baidu.android.pushservice.Internal$4:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.Internal$5 -> com.baidu.android.pushservice.Internal$5:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.LoadExecutor -> com.baidu.android.pushservice.LoadExecutor:
    java.lang.String a -> a
    boolean loadPush(android.content.Context) -> loadPush
    boolean isPushLibLoaded(android.content.Context) -> isPushLibLoaded
    void excuteMethod(java.lang.Runnable,android.content.Context) -> excuteMethod
com.baidu.android.pushservice.LoadExecutor$1 -> com.baidu.android.pushservice.LoadExecutor$1:
    android.content.Context a -> a
    java.lang.Runnable b -> b
    void run() -> run
com.baidu.android.pushservice.PushConstants -> com.baidu.android.pushservice.PushConstants:
    java.lang.String EXTRA_PUSH_MESSAGE -> EXTRA_PUSH_MESSAGE
    java.lang.String EXTRA_PUSH_MESSAGE_STRING -> EXTRA_PUSH_MESSAGE_STRING
    java.lang.String ACTION_MESSAGE -> ACTION_MESSAGE
    java.lang.String ACTION_SDK_MESSAGE -> ACTION_SDK_MESSAGE
    java.lang.String ACTION_FB_MESSAGE -> ACTION_FB_MESSAGE
    java.lang.String ACTION_METHOD -> ACTION_METHOD
    java.lang.String ACTION_LAPP_RECEIVE -> ACTION_LAPP_RECEIVE
    java.lang.String ACTION_RECEIVE -> ACTION_RECEIVE
    java.lang.String ACTION_RECEIVER_NOTIFICATION_CLICK -> ACTION_RECEIVER_NOTIFICATION_CLICK
    java.lang.String ACTION_SDK_RECEIVE -> ACTION_SDK_RECEIVE
    java.lang.String ACTION_WEB_RECEIVE -> ACTION_WEB_RECEIVE
    java.lang.String EXTRA_WEB_BIND_API_KEY -> EXTRA_WEB_BIND_API_KEY
    java.lang.String ACTION_LAPP_MESSAGE -> ACTION_LAPP_MESSAGE
    java.lang.String METHOD_LAPP_BIND_INTENT -> METHOD_LAPP_BIND_INTENT
    java.lang.String METHOD_LAPP_UNBIND -> METHOD_LAPP_UNBIND
    java.lang.String METHOD_GET_LAPP_BIND_STATE -> METHOD_GET_LAPP_BIND_STATE
    java.lang.String EXTRA_LAPP_BIND_STATE -> EXTRA_LAPP_BIND_STATE
    java.lang.String METHOD_SET_LAPP_TAGS -> METHOD_SET_LAPP_TAGS
    java.lang.String METHOD_DEL_LAPP_TAGS -> METHOD_DEL_LAPP_TAGS
    int LOGIN_TYPE_LIGHT_APP_API_KEY -> LOGIN_TYPE_LIGHT_APP_API_KEY
    java.lang.String EXTRA_METHOD -> EXTRA_METHOD
    java.lang.String PACKAGE_NAME -> PACKAGE_NAME
    java.lang.String EXTRA_ERROR_CODE -> EXTRA_ERROR_CODE
    java.lang.String EXTRA_CONTENT -> EXTRA_CONTENT
    java.lang.String EXTRA_TAGS_LIST -> EXTRA_TAGS_LIST
    java.lang.String EXTRA_APP_ID -> EXTRA_APP_ID
    java.lang.String EXTRA_USER_ID -> EXTRA_USER_ID
    java.lang.String EXTRA_APP -> EXTRA_APP
    java.lang.String EXTRA_ACCESS_TOKEN -> EXTRA_ACCESS_TOKEN
    java.lang.String EXTRA_API_KEY -> EXTRA_API_KEY
    java.lang.String EXTRA_BIND_NAME -> EXTRA_BIND_NAME
    java.lang.String EXTRA_BIND_STATUS -> EXTRA_BIND_STATUS
    java.lang.String EXTRA_PUSH_SDK_VERSION -> EXTRA_PUSH_SDK_VERSION
    java.lang.String EXTRA_MSG_KEY -> EXTRA_MSG_KEY
    java.lang.String EXTRA_MSG -> EXTRA_MSG
    java.lang.String EXTRA_CB_URL -> EXTRA_CB_URL
    java.lang.String EXTRA_TIMESTAMP -> EXTRA_TIMESTAMP
    java.lang.String EXTRA_MSGID -> EXTRA_MSGID
    java.lang.String EXTRA_HASHCODE -> EXTRA_HASHCODE
    java.lang.String EXTRA_OPENTYPE -> EXTRA_OPENTYPE
    java.lang.String EXTRA_EXTRA -> EXTRA_EXTRA
    int OPEN_BY_USER -> OPEN_BY_USER
    int OPEN_BY_NOTIFICATION -> OPEN_BY_NOTIFICATION
    int BIND_STATUS_ONLINE -> BIND_STATUS_ONLINE
    int BIND_STATUS_OFFLINE -> BIND_STATUS_OFFLINE
    java.lang.String METHOD_SEND_MSG_TO_SERVER -> METHOD_SEND_MSG_TO_SERVER
    java.lang.String METHOD_SEND_MSG_TO_USER -> METHOD_SEND_MSG_TO_USER
    java.lang.String METHOD_APPSTART -> METHOD_APPSTART
    java.lang.String METHOD_APPSTOP -> METHOD_APPSTOP
    java.lang.String METHOD_SEND -> METHOD_SEND
    java.lang.String METHOD_BIND -> METHOD_BIND
    java.lang.String METHOD_UNBIND -> METHOD_UNBIND
    java.lang.String EXTRA_FETCH_TYPE -> EXTRA_FETCH_TYPE
    java.lang.String EXTRA_FETCH_NUM -> EXTRA_FETCH_NUM
    java.lang.String METHOD_FETCH -> METHOD_FETCH
    java.lang.String METHOD_COUNT -> METHOD_COUNT
    java.lang.String EXTRA_MSG_IDS -> EXTRA_MSG_IDS
    java.lang.String METHOD_DELETE -> METHOD_DELETE
    java.lang.String METHOD_GBIND -> METHOD_GBIND
    java.lang.String EXTRA_GID -> EXTRA_GID
    java.lang.String METHOD_SET_TAGS -> METHOD_SET_TAGS
    java.lang.String METHOD_DEL_TAGS -> METHOD_DEL_TAGS
    java.lang.String EXTRA_TAGS -> EXTRA_TAGS
    java.lang.String EXTRA_NOTIFICATION_TITLE -> EXTRA_NOTIFICATION_TITLE
    java.lang.String EXTRA_NOTIFICATION_CONTENT -> EXTRA_NOTIFICATION_CONTENT
    java.lang.String METHOD_GUNBIND -> METHOD_GUNBIND
    java.lang.String METHOD_GINFO -> METHOD_GINFO
    java.lang.String METHOD_GLIST -> METHOD_GLIST
    java.lang.String METHOD_LISTTAGS -> METHOD_LISTTAGS
    java.lang.String METHOD_LIST_LAPP_TAGS -> METHOD_LIST_LAPP_TAGS
    java.lang.String METHOD_FETCHGMSG -> METHOD_FETCHGMSG
    java.lang.String EXTRA_GROUP_FETCH_TYPE -> EXTRA_GROUP_FETCH_TYPE
    java.lang.String EXTRA_GROUP_FETCH_NUM -> EXTRA_GROUP_FETCH_NUM
    java.lang.String METHOD_COUNTGMSG -> METHOD_COUNTGMSG
    java.lang.String METHOD_ONLINE -> METHOD_ONLINE
    int ERROR_SUCCESS -> ERROR_SUCCESS
    int ERROR_NETWORK_ERROR -> ERROR_NETWORK_ERROR
    int ERROR_SERVICE_NOT_AVAILABLE -> ERROR_SERVICE_NOT_AVAILABLE
    int ERROR_SERVICE_NOT_AVAILABLE_TEMP -> ERROR_SERVICE_NOT_AVAILABLE_TEMP
    int ERROR_UNKNOWN -> ERROR_UNKNOWN
    int ERROR_SERVER_INTERNAL_ERROR -> ERROR_SERVER_INTERNAL_ERROR
    int ERROR_METHOD_ERROR -> ERROR_METHOD_ERROR
    int ERROR_PARAMS_ERROR -> ERROR_PARAMS_ERROR
    int ERROR_AUTHENTICATION_FAILED -> ERROR_AUTHENTICATION_FAILED
    int ERROR_QUOTA_USE_UP -> ERROR_QUOTA_USE_UP
    int ERROR_DATA_NOT_FOUND -> ERROR_DATA_NOT_FOUND
    int ERROR_TIME_EXPIRES -> ERROR_TIME_EXPIRES
    int ERROR_CHANNEL_TOKEN_TIMEOUT -> ERROR_CHANNEL_TOKEN_TIMEOUT
    int ERROR_BIND_NOT_EXIST -> ERROR_BIND_NOT_EXIST
    int ERROR_BIND_OVERLOAD -> ERROR_BIND_OVERLOAD
    int LOGIN_TYPE_API_KEY -> LOGIN_TYPE_API_KEY
    int LOGIN_TYPE_ACCESS_TOKEN -> LOGIN_TYPE_ACCESS_TOKEN
    int LOGIN_TYPE_BDUSS -> LOGIN_TYPE_BDUSS
    int LOGIN_TYPE_UNKNOWN -> LOGIN_TYPE_UNKNOWN
    int ERROR_AIDL_FAIL -> ERROR_AIDL_FAIL
    java.lang.String ERROR_AIDL_FAIL_EXCEPTION -> ERROR_AIDL_FAIL_EXCEPTION
    java.lang.String ERROR_AIDL_FAIL_NO_PUSHSERVICE -> ERROR_AIDL_FAIL_NO_PUSHSERVICE
    short ORIGINAL_VERSION -> ORIGINAL_VERSION
    int a -> a
    java.lang.String b -> b
    java.lang.String rsaEncrypt(java.lang.String) -> rsaEncrypt
    android.content.Intent createMethodIntent(android.content.Context) -> createMethodIntent
    void restartPushService(android.content.Context) -> restartPushService
    void startPushService(android.content.Context) -> startPushService
    java.lang.String getErrorMsg(int) -> getErrorMsg
    byte[] a(byte[],java.lang.String,int) -> a
com.baidu.android.pushservice.PushLightapp -> com.baidu.android.pushservice.PushLightapp:
    int b -> b
    boolean c -> c
    java.lang.String d -> d
    com.baidu.android.pushservice.PushLightapp e -> e
    com.baidu.android.pushservice.IPushLightappListener f -> f
    android.content.Context g -> g
    boolean h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    boolean k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    com.baidu.android.pushservice.aidl.IPushService a -> a
    android.content.ServiceConnection s -> s
    java.lang.String ACTION_REGISTER_SYNC -> ACTION_REGISTER_SYNC
    java.lang.String SHARED_NAME_SETTINGS -> SHARED_NAME_SETTINGS
    int CONTEXT_FLAG_MODE_MULTI_PROCESS -> CONTEXT_FLAG_MODE_MULTI_PROCESS
    java.lang.String KEY_PRIORITY2 -> KEY_PRIORITY2
    java.lang.String SETTINGS_KEY_CURRENT_PACKAGE_NAME -> SETTINGS_KEY_CURRENT_PACKAGE_NAME
    void e() -> e
    com.baidu.android.pushservice.PushLightapp a(android.content.Context) -> a
    void getInstanceAsync(android.content.Context,com.baidu.android.pushservice.IPushLightappListener) -> getInstanceAsync
    boolean isReady() -> isReady
    void destroy() -> destroy
    void f() -> f
    void subscribeLight(java.lang.String,java.lang.String,boolean,com.baidu.android.pushservice.IPushLightappListener) -> subscribeLight
    void subscribeLight(java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.IPushLightappListener) -> subscribeLight
    void subscribeLightByApiKey(java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.IPushLightappListener) -> subscribeLightByApiKey
    void unsubscribeLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.IPushLightappListener) -> unsubscribeLight
    void unbindLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.IPushLightappListener) -> unbindLight
    java.lang.String getSubcribeApps() -> getSubcribeApps
    java.lang.String getSubscribedAppids() -> getSubscribedAppids
    java.lang.String getSubscribedAppinfos(java.lang.String) -> getSubscribedAppinfos
    java.lang.String getMsgs(java.lang.String,int,boolean,int,int) -> getMsgs
    int getUnreadMsgNumber(java.lang.String,int) -> getUnreadMsgNumber
    int setMsgRead(java.lang.String) -> setMsgRead
    int setAllMsgRead(java.lang.String,int) -> setAllMsgRead
    int deleteMsg(java.lang.String) -> deleteMsg
    int deleteAllMsg(java.lang.String,int) -> deleteAllMsg
    boolean register(java.lang.String,java.lang.String) -> register
    boolean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> register
    boolean updateBlacklist(java.lang.String,java.lang.String,int) -> updateBlacklist
    boolean removeBlacklist(java.lang.String,java.lang.String) -> removeBlacklist
    boolean setNotifySwitch(java.lang.String,boolean) -> setNotifySwitch
    int getNewMsgNum(java.lang.String) -> getNewMsgNum
    boolean clearNewMsgNum(java.lang.String) -> clearNewMsgNum
    java.lang.String getBlackList(java.lang.String) -> getBlackList
    int g() -> g
    java.lang.String b(android.content.Context) -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.util.List getFriendPackages(android.content.Context) -> getFriendPackages
    boolean b(android.content.Context,java.lang.String) -> b
    boolean c(android.content.Context,java.lang.String) -> c
    int a() -> a
    boolean b() -> b
    boolean a(com.baidu.android.pushservice.PushLightapp) -> a
    void b(com.baidu.android.pushservice.PushLightapp) -> b
    boolean a(com.baidu.android.pushservice.PushLightapp,boolean) -> a
    int a(int) -> a
    int c(com.baidu.android.pushservice.PushLightapp) -> c
    com.baidu.android.pushservice.IPushLightappListener c() -> c
    com.baidu.android.pushservice.PushLightapp d() -> d
    android.content.Context d(com.baidu.android.pushservice.PushLightapp) -> d
    com.baidu.android.pushservice.PushLightapp e(com.baidu.android.pushservice.PushLightapp) -> e
    int a(com.baidu.android.pushservice.PushLightapp,int) -> a
    int f(com.baidu.android.pushservice.PushLightapp) -> f
    void g(com.baidu.android.pushservice.PushLightapp) -> g
com.baidu.android.pushservice.PushLightapp$1 -> com.baidu.android.pushservice.PushLightapp$1:
    com.baidu.android.pushservice.PushLightapp a -> a
    void run() -> run
com.baidu.android.pushservice.PushLightapp$2 -> com.baidu.android.pushservice.PushLightapp$2:
    com.baidu.android.pushservice.PushLightapp a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.android.pushservice.PushLightapp$3 -> com.baidu.android.pushservice.PushLightapp$3:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    com.baidu.android.pushservice.PushLightapp b -> b
    void onUnsubscribe(int,java.lang.String) -> onUnsubscribe
    void onSubscribe(int,java.lang.String) -> onSubscribe
    void onUnbindLight(int,java.lang.String) -> onUnbindLight
com.baidu.android.pushservice.PushLightapp$4 -> com.baidu.android.pushservice.PushLightapp$4:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    com.baidu.android.pushservice.PushLightapp b -> b
    void onUnsubscribe(int,java.lang.String) -> onUnsubscribe
    void onSubscribe(int,java.lang.String) -> onSubscribe
    void onUnbindLight(int,java.lang.String) -> onUnbindLight
com.baidu.android.pushservice.PushLightapp$5 -> com.baidu.android.pushservice.PushLightapp$5:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    java.lang.String b -> b
    com.baidu.android.pushservice.PushLightapp c -> c
    void onUnsubscribe(int,java.lang.String) -> onUnsubscribe
    void onSubscribe(int,java.lang.String) -> onSubscribe
    void onUnbindLight(int,java.lang.String) -> onUnbindLight
com.baidu.android.pushservice.PushLightapp$6 -> com.baidu.android.pushservice.PushLightapp$6:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    com.baidu.android.pushservice.PushLightapp b -> b
    void onUnsubscribe(int,java.lang.String) -> onUnsubscribe
    void onSubscribe(int,java.lang.String) -> onSubscribe
    void onUnbindLight(int,java.lang.String) -> onUnbindLight
com.baidu.android.pushservice.PushLightapp$7 -> com.baidu.android.pushservice.PushLightapp$7:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    com.baidu.android.pushservice.PushLightapp b -> b
    void onUnbindLight(int,java.lang.String) -> onUnbindLight
    void onSubscribe(int,java.lang.String) -> onSubscribe
    void onUnsubscribe(int,java.lang.String) -> onUnsubscribe
com.baidu.android.pushservice.PushManager -> com.baidu.android.pushservice.PushManager:
    java.lang.String a -> a
    void init(android.content.Context,java.lang.String,java.lang.String) -> init
    void init(android.content.Context,java.lang.String) -> init
    void initFromAKSK(android.content.Context,java.lang.String) -> initFromAKSK
    void startWork(android.content.Context,java.lang.String,java.lang.String) -> startWork
    void startWork(android.content.Context,int,java.lang.String) -> startWork
    void sdkStartWork(android.content.Context,java.lang.String,int) -> sdkStartWork
    void sdkUnbind(android.content.Context,java.lang.String) -> sdkUnbind
    void setSDKTags(android.content.Context,java.lang.String,java.util.List) -> setSDKTags
    void setLappTags(android.content.Context,java.lang.String,java.util.List) -> setLappTags
    void stopWork(android.content.Context) -> stopWork
    void resumeWork(android.content.Context) -> resumeWork
    boolean isPushEnabled(android.content.Context) -> isPushEnabled
    void activityStarted(android.app.Activity) -> activityStarted
    void activityStoped(android.app.Activity) -> activityStoped
    void setAccessToken(android.content.Context,java.lang.String) -> setAccessToken
    void setApiKey(android.content.Context,java.lang.String) -> setApiKey
    void setBduss(android.content.Context,java.lang.String) -> setBduss
    void bind(android.content.Context,int) -> bind
    void unbind(android.content.Context) -> unbind
    void fetchMessages(android.content.Context,int,int) -> fetchMessages
    void getMessageCounts(android.content.Context) -> getMessageCounts
    void deleteMessages(android.content.Context,java.lang.String[]) -> deleteMessages
    void sendMsgToUser(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMsgToUser
    void bindGroup(android.content.Context,java.lang.String) -> bindGroup
    void setTags(android.content.Context,java.util.List) -> setTags
    void listTags(android.content.Context) -> listTags
    void listSDKTags(android.content.Context,java.lang.String) -> listSDKTags
    void listLappTags(android.content.Context,java.lang.String) -> listLappTags
    void delTags(android.content.Context,java.util.List) -> delTags
    void delSDKTags(android.content.Context,java.lang.String,java.util.List) -> delSDKTags
    void delLappTags(android.content.Context,java.lang.String,java.util.List) -> delLappTags
    void unbindGroup(android.content.Context,java.lang.String) -> unbindGroup
    void getGroupInfo(android.content.Context,java.lang.String) -> getGroupInfo
    void getGroupList(android.content.Context) -> getGroupList
    void fetchGroupMessages(android.content.Context,java.lang.String,int,int) -> fetchGroupMessages
    void getGroupMessageCounts(android.content.Context,java.lang.String) -> getGroupMessageCounts
    void setDefaultNotificationBuilder(android.content.Context,com.baidu.android.pushservice.PushNotificationBuilder) -> setDefaultNotificationBuilder
    void setNotificationBuilder(android.content.Context,int,com.baidu.android.pushservice.PushNotificationBuilder) -> setNotificationBuilder
    void setMediaNotificationBuilder(android.content.Context,com.baidu.android.pushservice.PushNotificationBuilder) -> setMediaNotificationBuilder
    boolean isConnected(android.content.Context) -> isConnected
    boolean a(android.content.Context) -> a
    void tryConnect(android.content.Context) -> tryConnect
    void enableLbs(android.content.Context) -> enableLbs
    void disableLbs(android.content.Context) -> disableLbs
    void getLappBindState(android.content.Context,java.lang.String) -> getLappBindState
    java.util.HashMap getAppNotiMap(android.content.Context) -> getAppNotiMap
    void saveAppNotiMap(android.content.Context,java.util.HashMap) -> saveAppNotiMap
    void setNoDisturbMode(android.content.Context,int,int,int,int) -> setNoDisturbMode
com.baidu.android.pushservice.PushManager$1 -> com.baidu.android.pushservice.PushManager$1:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$10 -> com.baidu.android.pushservice.PushManager$10:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$11 -> com.baidu.android.pushservice.PushManager$11:
    android.content.Context a -> a
    int b -> b
    int c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$12 -> com.baidu.android.pushservice.PushManager$12:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$13 -> com.baidu.android.pushservice.PushManager$13:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$14 -> com.baidu.android.pushservice.PushManager$14:
    android.content.Context a -> a
    java.lang.String[] b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$15 -> com.baidu.android.pushservice.PushManager$15:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    void run() -> run
com.baidu.android.pushservice.PushManager$16 -> com.baidu.android.pushservice.PushManager$16:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$17 -> com.baidu.android.pushservice.PushManager$17:
    android.content.Context a -> a
    java.util.List b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$18 -> com.baidu.android.pushservice.PushManager$18:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$19 -> com.baidu.android.pushservice.PushManager$19:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$2 -> com.baidu.android.pushservice.PushManager$2:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$20 -> com.baidu.android.pushservice.PushManager$20:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$21 -> com.baidu.android.pushservice.PushManager$21:
    android.content.Context a -> a
    java.util.List b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$22 -> com.baidu.android.pushservice.PushManager$22:
    android.content.Context a -> a
    java.lang.String b -> b
    java.util.List c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$23 -> com.baidu.android.pushservice.PushManager$23:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$24 -> com.baidu.android.pushservice.PushManager$24:
    android.content.Context a -> a
    java.lang.String b -> b
    java.util.List c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$25 -> com.baidu.android.pushservice.PushManager$25:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$26 -> com.baidu.android.pushservice.PushManager$26:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$27 -> com.baidu.android.pushservice.PushManager$27:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$28 -> com.baidu.android.pushservice.PushManager$28:
    android.content.Context a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    void run() -> run
com.baidu.android.pushservice.PushManager$29 -> com.baidu.android.pushservice.PushManager$29:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$3 -> com.baidu.android.pushservice.PushManager$3:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$30 -> com.baidu.android.pushservice.PushManager$30:
    android.content.Context a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$31 -> com.baidu.android.pushservice.PushManager$31:
    android.content.Context a -> a
    int b -> b
    com.baidu.android.pushservice.PushNotificationBuilder c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$32 -> com.baidu.android.pushservice.PushManager$32:
    android.content.Context a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$33 -> com.baidu.android.pushservice.PushManager$33:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$34 -> com.baidu.android.pushservice.PushManager$34:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$35 -> com.baidu.android.pushservice.PushManager$35:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$36 -> com.baidu.android.pushservice.PushManager$36:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$37 -> com.baidu.android.pushservice.PushManager$37:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$38 -> com.baidu.android.pushservice.PushManager$38:
    java.util.HashMap a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$39 -> com.baidu.android.pushservice.PushManager$39:
    android.content.Context a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    void run() -> run
com.baidu.android.pushservice.PushManager$4 -> com.baidu.android.pushservice.PushManager$4:
    android.app.Activity a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$40 -> com.baidu.android.pushservice.PushManager$40:
    android.content.Context a -> a
    int b -> b
    java.lang.String c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$41 -> com.baidu.android.pushservice.PushManager$41:
    android.content.Context a -> a
    java.lang.String b -> b
    int c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$42 -> com.baidu.android.pushservice.PushManager$42:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$43 -> com.baidu.android.pushservice.PushManager$43:
    android.content.Context a -> a
    java.lang.String b -> b
    java.util.List c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$44 -> com.baidu.android.pushservice.PushManager$44:
    android.content.Context a -> a
    java.lang.String b -> b
    java.util.List c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$5 -> com.baidu.android.pushservice.PushManager$5:
    android.app.Activity a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$6 -> com.baidu.android.pushservice.PushManager$6:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$7 -> com.baidu.android.pushservice.PushManager$7:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$8 -> com.baidu.android.pushservice.PushManager$8:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$9 -> com.baidu.android.pushservice.PushManager$9:
    android.content.Context a -> a
    int b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder -> com.baidu.android.pushservice.PushNotificationBuilder:
    boolean a -> a
    com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder mInstance -> mInstance
    com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder getInner() -> getInner
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    void a(int) -> a
    android.app.Notification construct(android.content.Context) -> construct
    boolean a(com.baidu.android.pushservice.PushNotificationBuilder,boolean) -> a
    boolean a(com.baidu.android.pushservice.PushNotificationBuilder) -> a
    void a(com.baidu.android.pushservice.PushNotificationBuilder,int) -> a
com.baidu.android.pushservice.PushNotificationBuilder$1 -> com.baidu.android.pushservice.PushNotificationBuilder$1:
    android.content.Context a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$2 -> com.baidu.android.pushservice.PushNotificationBuilder$2:
    int a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$3 -> com.baidu.android.pushservice.PushNotificationBuilder$3:
    java.lang.String a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$4 -> com.baidu.android.pushservice.PushNotificationBuilder$4:
    java.lang.String a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$5 -> com.baidu.android.pushservice.PushNotificationBuilder$5:
    int a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$6 -> com.baidu.android.pushservice.PushNotificationBuilder$6:
    int a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$7 -> com.baidu.android.pushservice.PushNotificationBuilder$7:
    android.net.Uri a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$8 -> com.baidu.android.pushservice.PushNotificationBuilder$8:
    long[] a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushServiceReceiver -> com.baidu.android.pushservice.PushServiceReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.android.pushservice.PushServiceReceiver$1 -> com.baidu.android.pushservice.PushServiceReceiver$1:
    android.content.Context a -> a
    android.content.Intent b -> b
    com.baidu.android.pushservice.PushServiceReceiver c -> c
    void run() -> run
com.baidu.android.pushservice.PushSettings -> com.baidu.android.pushservice.PushSettings:
    void enableDebugMode(android.content.Context,boolean) -> enableDebugMode
com.baidu.android.pushservice.PushSettings$1 -> com.baidu.android.pushservice.PushSettings$1:
    android.content.Context a -> a
    boolean b -> b
    void run() -> run
com.baidu.android.pushservice.RegistrationReceiver -> com.baidu.android.pushservice.RegistrationReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.android.pushservice.RegistrationReceiver$1 -> com.baidu.android.pushservice.RegistrationReceiver$1:
    android.content.Context a -> a
    android.content.Intent b -> b
    com.baidu.android.pushservice.RegistrationReceiver c -> c
    void run() -> run
com.baidu.android.pushservice.aidl.IPushService -> com.baidu.android.pushservice.aidl.IPushService:
    void subscribeLight(java.lang.String,java.lang.String,boolean,com.baidu.android.pushservice.aidl.IPushServiceListener) -> subscribeLight
    void unsubscribeLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> unsubscribeLight
    void unbindLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> unbindLight
    java.lang.String getSubcribedApps() -> getSubcribedApps
    java.lang.String getSubscribedAppids() -> getSubscribedAppids
    java.lang.String getSubscribedAppinfos(java.lang.String) -> getSubscribedAppinfos
    java.lang.String getMsgs(java.lang.String,int,boolean,int,int) -> getMsgs
    int getUnreadMsgNumber(java.lang.String,int) -> getUnreadMsgNumber
    int setMsgRead(java.lang.String) -> setMsgRead
    int setAllMsgRead(java.lang.String,int) -> setAllMsgRead
    int deleteMsg(java.lang.String) -> deleteMsg
    int deleteAllMsg(java.lang.String,int) -> deleteAllMsg
    boolean register(java.lang.String,java.lang.String) -> register
    boolean registerRunTime(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> registerRunTime
    boolean updateBlacklist(java.lang.String,java.lang.String,int) -> updateBlacklist
    boolean removeBlacklist(java.lang.String,java.lang.String) -> removeBlacklist
    int getNewMsgNum(java.lang.String) -> getNewMsgNum
    boolean clearNewMsgNum(java.lang.String) -> clearNewMsgNum
    boolean setNotifySwitch(java.lang.String,boolean) -> setNotifySwitch
    int getPushVersion() -> getPushVersion
    void subscribeLightApp(java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> subscribeLightApp
    java.lang.String getBlackList(java.lang.String) -> getBlackList
com.baidu.android.pushservice.aidl.IPushService$Stub -> com.baidu.android.pushservice.aidl.IPushService$Stub:
    java.lang.String w -> w
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    com.baidu.android.pushservice.aidl.IPushService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.baidu.android.pushservice.aidl.IPushService$Stub$a -> com.baidu.android.pushservice.aidl.IPushService$Stub$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String a() -> a
    void subscribeLight(java.lang.String,java.lang.String,boolean,com.baidu.android.pushservice.aidl.IPushServiceListener) -> subscribeLight
    void unsubscribeLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> unsubscribeLight
    void unbindLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> unbindLight
    java.lang.String getSubcribedApps() -> getSubcribedApps
    java.lang.String getSubscribedAppids() -> getSubscribedAppids
    java.lang.String getSubscribedAppinfos(java.lang.String) -> getSubscribedAppinfos
    java.lang.String getMsgs(java.lang.String,int,boolean,int,int) -> getMsgs
    int getUnreadMsgNumber(java.lang.String,int) -> getUnreadMsgNumber
    int setMsgRead(java.lang.String) -> setMsgRead
    int setAllMsgRead(java.lang.String,int) -> setAllMsgRead
    int deleteMsg(java.lang.String) -> deleteMsg
    int deleteAllMsg(java.lang.String,int) -> deleteAllMsg
    boolean register(java.lang.String,java.lang.String) -> register
    boolean registerRunTime(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> registerRunTime
    boolean updateBlacklist(java.lang.String,java.lang.String,int) -> updateBlacklist
    boolean removeBlacklist(java.lang.String,java.lang.String) -> removeBlacklist
    int getNewMsgNum(java.lang.String) -> getNewMsgNum
    boolean clearNewMsgNum(java.lang.String) -> clearNewMsgNum
    boolean setNotifySwitch(java.lang.String,boolean) -> setNotifySwitch
    int getPushVersion() -> getPushVersion
    void subscribeLightApp(java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> subscribeLightApp
    java.lang.String getBlackList(java.lang.String) -> getBlackList
com.baidu.android.pushservice.aidl.IPushServiceListener -> com.baidu.android.pushservice.aidl.IPushServiceListener:
    void onSubscribe(int,java.lang.String) -> onSubscribe
    void onUnsubscribe(int,java.lang.String) -> onUnsubscribe
    void onUnbindLight(int,java.lang.String) -> onUnbindLight
com.baidu.android.pushservice.aidl.IPushServiceListener$Stub -> com.baidu.android.pushservice.aidl.IPushServiceListener$Stub:
    java.lang.String a -> a
    int d -> d
    int e -> e
    int f -> f
    com.baidu.android.pushservice.aidl.IPushServiceListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.baidu.android.pushservice.aidl.IPushServiceListener$Stub$a -> com.baidu.android.pushservice.aidl.IPushServiceListener$Stub$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String a() -> a
    void onSubscribe(int,java.lang.String) -> onSubscribe
    void onUnsubscribe(int,java.lang.String) -> onUnsubscribe
    void onUnbindLight(int,java.lang.String) -> onUnbindLight
com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder -> com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder:
    com.baidu.android.pushservice.internal.BasicPushNotificationBuilder a -> a
    com.baidu.android.pushservice.internal.BasicPushNotificationBuilder getInner() -> getInner
    android.app.Notification construct(android.content.Context) -> construct
com.baidu.android.pushservice.apiproxy.BridgeCustomPushNotificationBuilder -> com.baidu.android.pushservice.apiproxy.BridgeCustomPushNotificationBuilder:
    com.baidu.android.pushservice.internal.CustomPushNotificationBuilder getInner() -> getInner
    void setLayoutDrawable(int) -> setLayoutDrawable
    android.app.Notification construct(android.content.Context) -> construct
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    com.baidu.android.pushservice.internal.PushNotificationBuilder getInner() -> getInner
com.baidu.android.pushservice.apiproxy.BridgeInternal -> com.baidu.android.pushservice.apiproxy.BridgeInternal:
    void enablePushService(android.content.Context) -> enablePushService
    void disablePushService(android.content.Context) -> disablePushService
    void disablePushConnection(android.content.Context) -> disablePushConnection
    void enablePushConnection(android.content.Context) -> enablePushConnection
    void createBdussIntent(android.content.Context) -> createBdussIntent
com.baidu.android.pushservice.apiproxy.BridgePushConstants -> com.baidu.android.pushservice.apiproxy.BridgePushConstants:
    android.content.Intent createMethodIntent(android.content.Context) -> createMethodIntent
    void restartPushService(android.content.Context) -> restartPushService
    void startPushService(android.content.Context) -> startPushService
com.baidu.android.pushservice.apiproxy.BridgePushManager -> com.baidu.android.pushservice.apiproxy.BridgePushManager:
    void init(android.content.Context,java.lang.String,java.lang.String) -> init
    void init(android.content.Context,java.lang.String) -> init
    void initFromAKSK(android.content.Context,java.lang.String) -> initFromAKSK
    void startWork(android.content.Context,java.lang.String,java.lang.String) -> startWork
    void startWork(android.content.Context,int,java.lang.String) -> startWork
    void sdkStartWork(android.content.Context,java.lang.String,int) -> sdkStartWork
    void stopWork(android.content.Context) -> stopWork
    void resumeWork(android.content.Context) -> resumeWork
    boolean isPushEnabled(android.content.Context) -> isPushEnabled
    void activityStarted(android.app.Activity) -> activityStarted
    void activityStoped(android.app.Activity) -> activityStoped
    void setAccessToken(android.content.Context,java.lang.String) -> setAccessToken
    void setApiKey(android.content.Context,java.lang.String) -> setApiKey
    void setBduss(android.content.Context,java.lang.String) -> setBduss
    void bind(android.content.Context,int) -> bind
    void unbind(android.content.Context) -> unbind
    void fetchMessages(android.content.Context,int,int) -> fetchMessages
    void getMessageCounts(android.content.Context) -> getMessageCounts
    void deleteMessages(android.content.Context,java.lang.String[]) -> deleteMessages
    void sendMsgToUser(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMsgToUser
    void bindGroup(android.content.Context,java.lang.String) -> bindGroup
    void setTags(android.content.Context,java.util.List) -> setTags
    void listTags(android.content.Context) -> listTags
    void delTags(android.content.Context,java.util.List) -> delTags
    void unbindGroup(android.content.Context,java.lang.String) -> unbindGroup
    void getGroupInfo(android.content.Context,java.lang.String) -> getGroupInfo
    void getGroupList(android.content.Context) -> getGroupList
    void fetchGroupMessages(android.content.Context,java.lang.String,int,int) -> fetchGroupMessages
    void getGroupMessageCounts(android.content.Context,java.lang.String) -> getGroupMessageCounts
    void setDefaultNotificationBuilder(android.content.Context,com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder) -> setDefaultNotificationBuilder
    void setNotificationBuilder(android.content.Context,int,com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder) -> setNotificationBuilder
    void setMediaNotificationBuilder(android.content.Context,com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder) -> setMediaNotificationBuilder
    boolean isConnected(android.content.Context) -> isConnected
    void tryConnect(android.content.Context) -> tryConnect
    void enableLbs(android.content.Context) -> enableLbs
    void disableLbs(android.content.Context) -> disableLbs
    void sdkUnbind(android.content.Context,java.lang.String) -> sdkUnbind
    void setSDKTags(android.content.Context,java.lang.String,java.util.List) -> setSDKTags
    void setLappTags(android.content.Context,java.lang.String,java.util.List) -> setLappTags
    void listSDKTags(android.content.Context,java.lang.String) -> listSDKTags
    void delLappTags(android.content.Context,java.lang.String,java.util.List) -> delLappTags
    void listLappTags(android.content.Context,java.lang.String) -> listLappTags
    void delSDKTags(android.content.Context,java.lang.String,java.util.List) -> delSDKTags
    void getLappBindState(android.content.Context,java.lang.String) -> getLappBindState
    java.util.HashMap getAppNotiMap() -> getAppNotiMap
    void saveAppNotiMap(java.util.HashMap) -> saveAppNotiMap
    void setNoDisturbMode(android.content.Context,int,int,int,int) -> setNoDisturbMode
com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder -> com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder:
    com.baidu.android.pushservice.internal.PushNotificationBuilder mInstance -> mInstance
    com.baidu.android.pushservice.internal.PushNotificationBuilder getInner() -> getInner
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    android.app.Notification construct(android.content.Context) -> construct
com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder$1 -> com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder$1:
    com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder a -> a
    android.app.Notification construct(android.content.Context) -> construct
com.baidu.android.pushservice.apiproxy.BridgePushSettings -> com.baidu.android.pushservice.apiproxy.BridgePushSettings:
    void enableDebugMode(android.content.Context,boolean) -> enableDebugMode
com.baidu.android.pushservice.apiproxy.BridgeReceiver -> com.baidu.android.pushservice.apiproxy.BridgeReceiver:
    void PushServiceReceiverOnReceive(android.content.Context,android.content.Intent) -> PushServiceReceiverOnReceive
    void RegistrationReceiverOnReceive(android.content.Context,android.content.Intent) -> RegistrationReceiverOnReceive
com.baidu.android.silentupdate.SilentManager -> com.baidu.android.silentupdate.SilentManager:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    boolean g -> g
    void enableDebugMode(boolean) -> enableDebugMode
    void enableRSA(boolean) -> enableRSA
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    boolean loadLib(android.content.Context,java.lang.String,java.lang.String) -> loadLib
    boolean loadLib(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> loadLib
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(java.io.File) -> a
    boolean a(android.content.Context,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String b(java.io.File) -> b
    void a(java.io.InputStream,java.io.OutputStream) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String decrypt(java.lang.String,java.lang.String) -> decrypt
    void a(java.io.Closeable) -> a
com.baidu.android.silentupdate.a -> com.baidu.android.silentupdate.a:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.android.silentupdate.b -> com.baidu.android.silentupdate.b:
    java.lang.String a -> a
    boolean a(java.lang.ClassLoader,java.lang.ClassLoader) -> a
    java.lang.ClassLoader a(java.lang.String,java.lang.String,java.lang.String,android.content.Context) -> a
com.baidu.android.silentupdate.c -> com.baidu.android.silentupdate.c:
    void a(android.app.Application,java.lang.String) -> a
com.baidu.frontia.Frontia -> com.baidu.frontia.Frontia:
    java.lang.String a -> a
    com.baidu.frontia.base.impl.FrontiaImpl b -> b
    java.lang.String c -> c
    boolean init(android.content.Context,java.lang.String) -> init
    java.lang.String getApiKey() -> getApiKey
    java.lang.String getFrontiaVersion() -> getFrontiaVersion
    void setSlientUpdateEnabled(boolean) -> setSlientUpdateEnabled
    com.baidu.frontia.api.FrontiaPush getPush() -> getPush
com.baidu.frontia.FrontiaApplication -> com.baidu.frontia.FrontiaApplication:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void onCreate() -> onCreate
    void initFrontiaApplication(android.content.Context) -> initFrontiaApplication
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    boolean d(android.content.Context) -> d
com.baidu.frontia.FrontiaError -> com.baidu.frontia.FrontiaError:
    int No_Error -> No_Error
    int Error_DefaultError -> Error_DefaultError
    int Error_Unsupported_API -> Error_Unsupported_API
    int Error_No_Permission -> Error_No_Permission
    int Error_Unauthorized_IP -> Error_Unauthorized_IP
    int Error_DB_Query -> Error_DB_Query
    int Error_DB_Connect -> Error_DB_Connect
    int Error_DB_Result_Set_Empty -> Error_DB_Result_Set_Empty
    int Error_Network -> Error_Network
    int Error_Access_Server -> Error_Access_Server
    int Error_Param -> Error_Param
    int Error_AppId_Empty -> Error_AppId_Empty
    int Error_BCS -> Error_BCS
    int Error_Invalid_Bduss -> Error_Invalid_Bduss
    int Error_User_Not_Login -> Error_User_Not_Login
    int Error_User_Not_Active -> Error_User_Not_Active
    int Error_User_Not_Authorized -> Error_User_Not_Authorized
    int Error_User_Not_Exist -> Error_User_Not_Exist
    int Error_User_Already_Exist -> Error_User_Already_Exist
    int Error_File_Already_Exist -> Error_File_Already_Exist
    int Error_File_Name_Invaild -> Error_File_Name_Invaild
    int Error_File_Parent_Path_Not_Exist -> Error_File_Parent_Path_Not_Exist
    int Error_File_Not_Authorized -> Error_File_Not_Authorized
    int Error_Directory_Null -> Error_Directory_Null
    int Error_File_Not_Exist -> Error_File_Not_Exist
    int Error_File_Deal_Failed -> Error_File_Deal_Failed
    int Error_File_Create_Failed -> Error_File_Create_Failed
    int Error_File_Copy_Failed -> Error_File_Copy_Failed
    int Error_File_Delete_Failed -> Error_File_Delete_Failed
    int Error_Get_File_Meta_Failed -> Error_Get_File_Meta_Failed
    int Error_File_Move_Failed -> Error_File_Move_Failed
    int Error_File_Rename_Failed -> Error_File_Rename_Failed
    int Error_SuperFile_Create_Failed -> Error_SuperFile_Create_Failed
    int Error_SuperFile_Block_List_Empty -> Error_SuperFile_Block_List_Empty
    int Error_SuperFile_Update_Failed -> Error_SuperFile_Update_Failed
    int Error_Tag_Internal -> Error_Tag_Internal
    int Error_Tag_Param -> Error_Tag_Param
    int Error_Tag_Database -> Error_Tag_Database
    int Error_Set_Quota_Denied -> Error_Set_Quota_Denied
    int Error_Quota_Support_2_Level -> Error_Quota_Support_2_Level
    int Error_Quota_Exceed -> Error_Quota_Exceed
    int Error_Quota_Bigger_Than_ParentDir -> Error_Quota_Bigger_Than_ParentDir
    int Error_Quota_Smaller_Than_SubDir -> Error_Quota_Smaller_Than_SubDir
    int Error_Thumbnail_Failed -> Error_Thumbnail_Failed
    int Error_Invalid_Access_Token -> Error_Invalid_Access_Token
    int Error_Signature -> Error_Signature
    int Error_Object_Not_Exist -> Error_Object_Not_Exist
    int Error_ACL_Put -> Error_ACL_Put
    int Error_ACL_Query -> Error_ACL_Query
    int Error_ACL_Get -> Error_ACL_Get
    int Error_ACL_Not_Exist -> Error_ACL_Not_Exist
    int Error_Bucket_Already_Exist -> Error_Bucket_Already_Exist
    int Error_Bad_Request -> Error_Bad_Request
    int Error_BaiduBS_Internal_Error -> Error_BaiduBS_Internal_Error
    int Error_Not_Support -> Error_Not_Support
    int Error_Access_Denied -> Error_Access_Denied
    int Error_Service_Unavailable -> Error_Service_Unavailable
    int Error_Retry -> Error_Retry
    int Error_Put_Object_Data -> Error_Put_Object_Data
    int Error_Put_Object_Meta -> Error_Put_Object_Meta
    int Error_Get_Object_Data -> Error_Get_Object_Data
    int Error_Get_Object_Meta -> Error_Get_Object_Meta
    int Error_Storage_Exceed_Limit -> Error_Storage_Exceed_Limit
    int Error_Request_Exceed_Limit -> Error_Request_Exceed_Limit
    int Error_Transfer_Exceed_Limit -> Error_Transfer_Exceed_Limit
    int Error_Response_Key_Illegal -> Error_Response_Key_Illegal
    int Error_Response_Key_Not_Exist -> Error_Response_Key_Not_Exist
    int Error_CloudMatch_Not_Exist -> Error_CloudMatch_Not_Exist
    int Error_Internal_Server -> Error_Internal_Server
    int Error_Param_CloudDownaload -> Error_Param_CloudDownaload
    int Error_AppId_Is_Empty -> Error_AppId_Is_Empty
    int Error_Bduss_Is_Invalid -> Error_Bduss_Is_Invalid
    int Error_No_Permission_CloudDownload -> Error_No_Permission_CloudDownload
    int Error_User_Not_Login_CloudDownload -> Error_User_Not_Login_CloudDownload
    int Error_User_Not_Active_CloudDownload -> Error_User_Not_Active_CloudDownload
    int Error_User_Not_Authorized_CloudDownload -> Error_User_Not_Authorized_CloudDownload
    int Error_User_Not_Exsits -> Error_User_Not_Exsits
    int Error_Storage_Exceed_Limit_CloudDownload -> Error_Storage_Exceed_Limit_CloudDownload
    int Error_Object_Not_exists -> Error_Object_Not_exists
    int Error_Unsupported_Api -> Error_Unsupported_Api
    int Error_Request_Expires_Timeout -> Error_Request_Expires_Timeout
com.baidu.frontia.FrontiaQuery -> com.baidu.frontia.FrontiaQuery:
    com.baidu.frontia.base.impl.FrontiaQueryImpl a -> a
    void a(com.baidu.frontia.base.impl.FrontiaQueryImpl) -> a
    org.json.JSONObject toJSONObject() -> toJSONObject
    com.baidu.frontia.FrontiaQuery equals(java.lang.String,java.lang.Object) -> equals
    com.baidu.frontia.FrontiaQuery notEqual(java.lang.String,java.lang.Object) -> notEqual
    com.baidu.frontia.FrontiaQuery greaterThan(java.lang.String,java.lang.Object) -> greaterThan
    com.baidu.frontia.FrontiaQuery lessThan(java.lang.String,java.lang.Object) -> lessThan
    com.baidu.frontia.FrontiaQuery greaterThanEqualTo(java.lang.String,java.lang.Object) -> greaterThanEqualTo
    com.baidu.frontia.FrontiaQuery lessThanEqualTo(java.lang.String,java.lang.Object) -> lessThanEqualTo
    com.baidu.frontia.FrontiaQuery in(java.lang.String,java.lang.Object[]) -> in
    com.baidu.frontia.FrontiaQuery notIn(java.lang.String,java.lang.Object[]) -> notIn
    com.baidu.frontia.FrontiaQuery regEx(java.lang.String,java.lang.String) -> regEx
    com.baidu.frontia.FrontiaQuery startsWith(java.lang.String,java.lang.String) -> startsWith
    com.baidu.frontia.FrontiaQuery endsWith(java.lang.String,java.lang.String) -> endsWith
    com.baidu.frontia.FrontiaQuery all(java.lang.String,java.lang.Object[]) -> all
    com.baidu.frontia.FrontiaQuery size(java.lang.String,int) -> size
    com.baidu.frontia.FrontiaQuery and(com.baidu.frontia.FrontiaQuery) -> and
    com.baidu.frontia.FrontiaQuery or(com.baidu.frontia.FrontiaQuery) -> or
    com.baidu.frontia.FrontiaQuery not() -> not
    com.baidu.frontia.FrontiaQuery setLimit(int) -> setLimit
    int getLimit() -> getLimit
    com.baidu.frontia.FrontiaQuery addSort(java.lang.String,com.baidu.frontia.FrontiaQuery$SortOrder) -> addSort
    org.json.JSONObject getSort() -> getSort
    com.baidu.frontia.FrontiaQuery setSkip(int) -> setSkip
    int getSkip() -> getSkip
com.baidu.frontia.FrontiaQuery$SortOrder -> com.baidu.frontia.FrontiaQuery$SortOrder:
    com.baidu.frontia.FrontiaQuery$SortOrder ASC -> ASC
    com.baidu.frontia.FrontiaQuery$SortOrder DESC -> DESC
    com.baidu.frontia.FrontiaQuery$SortOrder[] a -> a
    com.baidu.frontia.FrontiaQuery$SortOrder[] values() -> values
    com.baidu.frontia.FrontiaQuery$SortOrder valueOf(java.lang.String) -> valueOf
com.baidu.frontia.a -> com.baidu.frontia.a:
    java.lang.String[] a() -> a
    void a(android.content.Context,java.lang.String) -> a
com.baidu.frontia.api.FrontiaDeepLink -> com.baidu.frontia.api.FrontiaDeepLink:
    java.lang.String a -> a
    com.baidu.frontia.module.deeplink.FrontiaDeepLinkImpl b -> b
    com.baidu.frontia.api.FrontiaDeepLink c -> c
    com.baidu.frontia.api.FrontiaDeepLink newInstance(android.content.Context) -> newInstance
    void launch(java.lang.String) -> launch
    void init(java.lang.String) -> init
com.baidu.frontia.api.FrontiaPush -> com.baidu.frontia.api.FrontiaPush:
    com.baidu.frontia.api.FrontiaPush a -> a
    com.baidu.frontia.module.push.FrontiaPushImpl b -> b
    android.content.Context c -> c
    com.baidu.frontia.module.push.FrontiaPushImpl a() -> a
    com.baidu.frontia.api.FrontiaPush newInstance(android.content.Context) -> newInstance
    void init(java.lang.String) -> init
    void setNotificationBuilder(int,com.baidu.frontia.api.FrontiaPushUtil$a) -> setNotificationBuilder
    void stop() -> stop
    void resume() -> resume
    boolean isPushWorking() -> isPushWorking
    void start() -> start
    void start(java.lang.String) -> start
    void setTags(java.util.List) -> setTags
    void deleteTags(java.util.List) -> deleteTags
    void listTags() -> listTags
    void enableLbs() -> enableLbs
    void disableLbs() -> disableLbs
    void pushMessage(java.lang.String,java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(java.lang.String,java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void listMessage(com.baidu.frontia.FrontiaQuery,com.baidu.frontia.api.FrontiaPushListener$ListMessageListener) -> listMessage
    void describeMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener) -> describeMessage
    void replaceMessage(java.lang.String,java.lang.String,java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener) -> replaceMessage
    void replaceMessage(java.lang.String,java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener) -> replaceMessage
    void replaceMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener) -> replaceMessage
    void removeMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener) -> removeMessage
    void setDebugModeEnabled(boolean) -> setDebugModeEnabled
com.baidu.frontia.api.FrontiaPush$a -> com.baidu.frontia.api.FrontiaPush$a:
    com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener c -> c
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$CommonMessageListenerImpl a -> a
    com.baidu.frontia.api.FrontiaPush b -> b
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$CommonMessageListenerImpl a() -> a
    com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener a(com.baidu.frontia.api.FrontiaPush$a) -> a
com.baidu.frontia.api.FrontiaPush$a$1 -> com.baidu.frontia.api.FrontiaPush$a$1:
    com.baidu.frontia.api.FrontiaPush$a a -> a
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPush$b -> com.baidu.frontia.api.FrontiaPush$b:
    com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener c -> c
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$DescribeMessageListenerImpl a -> a
    com.baidu.frontia.api.FrontiaPush b -> b
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$DescribeMessageListenerImpl a() -> a
    com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener a(com.baidu.frontia.api.FrontiaPush$b) -> a
com.baidu.frontia.api.FrontiaPush$b$1 -> com.baidu.frontia.api.FrontiaPush$b$1:
    com.baidu.frontia.api.FrontiaPush$b a -> a
    void onSuccess(com.baidu.frontia.module.push.FrontiaPushListenerImpl$DescribeMessageResult) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPush$c -> com.baidu.frontia.api.FrontiaPush$c:
    com.baidu.frontia.api.FrontiaPushListener$ListMessageListener c -> c
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$ListMessageListenerImpl a -> a
    com.baidu.frontia.api.FrontiaPush b -> b
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$ListMessageListenerImpl a() -> a
    com.baidu.frontia.api.FrontiaPushListener$ListMessageListener a(com.baidu.frontia.api.FrontiaPush$c) -> a
com.baidu.frontia.api.FrontiaPush$c$1 -> com.baidu.frontia.api.FrontiaPush$c$1:
    com.baidu.frontia.api.FrontiaPush$c a -> a
    void onSuccess(java.util.List) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPush$d -> com.baidu.frontia.api.FrontiaPush$d:
    com.baidu.frontia.api.FrontiaPushListener$PushMessageListener c -> c
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl a -> a
    com.baidu.frontia.api.FrontiaPush b -> b
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl a() -> a
    com.baidu.frontia.api.FrontiaPushListener$PushMessageListener a(com.baidu.frontia.api.FrontiaPush$d) -> a
com.baidu.frontia.api.FrontiaPush$d$1 -> com.baidu.frontia.api.FrontiaPush$d$1:
    com.baidu.frontia.api.FrontiaPush$d a -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushListener -> com.baidu.frontia.api.FrontiaPushListener:
com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener -> com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener:
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener -> com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener:
    void onSuccess(com.baidu.frontia.api.FrontiaPushListener$DescribeMessageResult) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushListener$DescribeMessageResult -> com.baidu.frontia.api.FrontiaPushListener$DescribeMessageResult:
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$DescribeMessageResult a -> a
    java.lang.String getId() -> getId
    java.lang.String getUserId() -> getUserId
    java.lang.String getChannelId() -> getChannelId
    java.lang.String getTag() -> getTag
    com.baidu.frontia.api.FrontiaPushUtil$Trigger getTrigger() -> getTrigger
    com.baidu.frontia.api.FrontiaPushUtil$MessageContent getMessage() -> getMessage
    org.json.JSONObject getExtras() -> getExtras
com.baidu.frontia.api.FrontiaPushListener$ListMessageListener -> com.baidu.frontia.api.FrontiaPushListener$ListMessageListener:
    void onSuccess(java.util.List) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushListener$PushMessageListener -> com.baidu.frontia.api.FrontiaPushListener$PushMessageListener:
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushMessageReceiver -> com.baidu.frontia.api.FrontiaPushMessageReceiver:
    java.lang.String TAG -> TAG
    java.lang.String a -> a
    java.lang.String b -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onBind(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onBind
    void onUnbind(android.content.Context,int,java.lang.String) -> onUnbind
    void onCheckBindState(android.content.Context,int,java.lang.String,boolean) -> onCheckBindState
    void onSetTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onSetTags
    void onDelTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onDelTags
    void onListTags(android.content.Context,int,java.util.List,java.lang.String) -> onListTags
    void onMessage(android.content.Context,java.lang.String,java.lang.String) -> onMessage
    void onNotificationClicked(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> onNotificationClicked
com.baidu.frontia.api.FrontiaPushUtil -> com.baidu.frontia.api.FrontiaPushUtil:
com.baidu.frontia.api.FrontiaPushUtil$AndroidContent -> com.baidu.frontia.api.FrontiaPushUtil$AndroidContent:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$AndroidContentImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$AndroidContentImpl a() -> a
    void setBuilderId(int) -> setBuilderId
    int getBuilderId() -> getBuilderId
    void setPKGContent(java.lang.String) -> setPKGContent
    java.lang.String getPKGContent() -> getPKGContent
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getUrl() -> getUrl
    void setNotificationStyle(com.baidu.frontia.api.FrontiaPushUtil$DefaultNotificationStyle) -> setNotificationStyle
    com.baidu.frontia.api.FrontiaPushUtil$DefaultNotificationStyle getNotificationStyle() -> getNotificationStyle
com.baidu.frontia.api.FrontiaPushUtil$DefaultNotificationStyle -> com.baidu.frontia.api.FrontiaPushUtil$DefaultNotificationStyle:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$DefaultNotificationStyleImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$DefaultNotificationStyleImpl a() -> a
    void enableAlert() -> enableAlert
    void disableAlert() -> disableAlert
    boolean isAlertEnabled() -> isAlertEnabled
    void enableVibration() -> enableVibration
    void disableVibration() -> disableVibration
    boolean isVibrationEnabled() -> isVibrationEnabled
    void enableDismissible() -> enableDismissible
    void disableDismissible() -> disableDismissible
    boolean isDismissible() -> isDismissible
com.baidu.frontia.api.FrontiaPushUtil$DeployStatus -> com.baidu.frontia.api.FrontiaPushUtil$DeployStatus:
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus DEVELOPE -> DEVELOPE
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus PRODUCTION -> PRODUCTION
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus[] a -> a
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus[] values() -> values
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus valueOf(java.lang.String) -> valueOf
com.baidu.frontia.api.FrontiaPushUtil$FrontiaPushBasicNotificationBuilder -> com.baidu.frontia.api.FrontiaPushUtil$FrontiaPushBasicNotificationBuilder:
    com.baidu.android.pushservice.internal.BasicPushNotificationBuilder a -> a
    com.baidu.android.pushservice.internal.PushNotificationBuilder a() -> a
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
com.baidu.frontia.api.FrontiaPushUtil$FrontiaPushCustomNotificationBuilder -> com.baidu.frontia.api.FrontiaPushUtil$FrontiaPushCustomNotificationBuilder:
    com.baidu.android.pushservice.internal.CustomPushNotificationBuilder a -> a
    com.baidu.android.pushservice.internal.PushNotificationBuilder a() -> a
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
com.baidu.frontia.api.FrontiaPushUtil$IOSContent -> com.baidu.frontia.api.FrontiaPushUtil$IOSContent:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$IOSContentImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$IOSContentImpl a() -> a
    void setAlertMsg(java.lang.String) -> setAlertMsg
    java.lang.String getAlertMsg() -> getAlertMsg
    void setSoundFile(java.lang.String) -> setSoundFile
    java.lang.String getSoundFile() -> getSoundFile
    void setBadge(int) -> setBadge
    int getBadge() -> getBadge
com.baidu.frontia.api.FrontiaPushUtil$MessageContent -> com.baidu.frontia.api.FrontiaPushUtil$MessageContent:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$MessageContentImpl a -> a
    int b -> b
    com.baidu.frontia.api.FrontiaPushUtil$MessageContent createStringMessage(java.lang.String,java.lang.String) -> createStringMessage
    com.baidu.frontia.api.FrontiaPushUtil$MessageContent createNotificationMessage(java.lang.String,java.lang.String,java.lang.String) -> createNotificationMessage
    void setMessage(java.lang.String) -> setMessage
    void setNotification(com.baidu.frontia.api.FrontiaPushUtil$NotificationContent) -> setNotification
    java.lang.String getMessageKeys() -> getMessageKeys
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus getDeployStatus() -> getDeployStatus
    java.lang.String getMessage() -> getMessage
    com.baidu.frontia.api.FrontiaPushUtil$NotificationContent getNotification() -> getNotification
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$MessageContentImpl a() -> a
com.baidu.frontia.api.FrontiaPushUtil$NotificationContent -> com.baidu.frontia.api.FrontiaPushUtil$NotificationContent:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$NotificationContentImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$NotificationContentImpl a() -> a
    java.lang.String getTitle() -> getTitle
    java.lang.String getDescription() -> getDescription
    void addCustomContent(java.lang.String,java.lang.String) -> addCustomContent
    org.json.JSONObject getCustomContent() -> getCustomContent
    void addAndroidContent(com.baidu.frontia.api.FrontiaPushUtil$AndroidContent) -> addAndroidContent
    com.baidu.frontia.api.FrontiaPushUtil$AndroidContent getAndroidContent() -> getAndroidContent
    void addIOSContent(com.baidu.frontia.api.FrontiaPushUtil$IOSContent) -> addIOSContent
    com.baidu.frontia.api.FrontiaPushUtil$IOSContent getIOSContent() -> getIOSContent
com.baidu.frontia.api.FrontiaPushUtil$Trigger -> com.baidu.frontia.api.FrontiaPushUtil$Trigger:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$TriggerImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$TriggerImpl a() -> a
    void setTime(java.lang.String) -> setTime
    java.lang.String getTime() -> getTime
    void setCrontab(java.lang.String) -> setCrontab
    java.lang.String getCrontab() -> getCrontab
com.baidu.frontia.api.FrontiaPushUtil$a -> com.baidu.frontia.api.FrontiaPushUtil$a:
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    com.baidu.android.pushservice.internal.PushNotificationBuilder a() -> a
com.baidu.frontia.framework.IModule -> com.baidu.frontia.framework.IModule:
    void init(java.lang.String) -> init
com.baidu.lightapp.LightAppPush -> com.baidu.lightapp.LightAppPush:
    com.baidu.lightapp.LightAppPush a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    com.baidu.lightapp.LightAppPush newInstance(android.content.Context,java.lang.String) -> newInstance
    void lightAppBind() -> lightAppBind
    void lightAppUnbind() -> lightAppUnbind
    void checkLightAppBindState() -> checkLightAppBindState
    void setLightAppTags(java.util.List) -> setLightAppTags
    void delLightAppTags(java.util.List) -> delLightAppTags
    void listLightAppTags() -> listLightAppTags
    void pushMessage(java.lang.String,java.lang.String,com.baidu.frontia.module.push.FrontiaPushUtilImpl$MessageContentImpl,com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl) -> pushMessage
    void pushMessage(java.lang.String,com.baidu.frontia.module.push.FrontiaPushUtilImpl$MessageContentImpl,com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl) -> pushMessage
    void pushMessage(com.baidu.frontia.module.push.FrontiaPushUtilImpl$MessageContentImpl,com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl) -> pushMessage
    com.baidu.frontia.base.impl.FrontiaCmd a() -> a
    java.lang.String b() -> b
    com.baidu.frontia.base.impl.FrontiaCmd a(com.baidu.lightapp.LightAppPush) -> a
com.baidu.lightapp.LightAppPush$a -> com.baidu.lightapp.LightAppPush$a:
    org.json.JSONObject b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl e -> e
    long f -> f
    com.baidu.lightapp.LightAppPush a -> a
    com.baidu.frontia.base.impl.FrontiaCmd$CmdResult a(java.lang.Void[]) -> a
    void a(com.baidu.frontia.base.impl.FrontiaCmd$CmdResult) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.location.BDErrorReport -> com.baidu.location.BDErrorReport:
    java.lang.String a -> a
    void onReportResult(boolean) -> onReportResult
    int setErrorInfo(boolean,double,double,boolean,java.lang.String,double,double,java.lang.String,java.lang.String) -> setErrorInfo
    android.os.Bundle getErrorInfo() -> getErrorInfo
com.baidu.location.BDGeofence -> com.baidu.location.BDGeofence:
    int GEOFENCE_TRANSITION_ENTER -> GEOFENCE_TRANSITION_ENTER
    java.lang.String COORD_TYPE_BD09 -> COORD_TYPE_BD09
    java.lang.String COORD_TYPE_BD09LL -> COORD_TYPE_BD09LL
    java.lang.String COORD_TYPE_GCJ -> COORD_TYPE_GCJ
    int RADIUS_TYPE_SMALL -> RADIUS_TYPE_SMALL
    java.lang.String getGeofenceId() -> getGeofenceId
com.baidu.location.BDGeofence$Builder -> com.baidu.location.BDGeofence$Builder:
    java.lang.String do -> do
    double for -> for
    double try -> try
    int a -> a
    boolean new -> new
    long if -> if
    java.lang.String int -> int
    com.baidu.location.BDGeofence$Builder setExpirationDruation(long) -> setExpirationDruation
    com.baidu.location.BDGeofence$Builder setCircularRegion(double,double,int) -> setCircularRegion
    com.baidu.location.BDGeofence$Builder setGeofenceId(java.lang.String) -> setGeofenceId
    com.baidu.location.BDGeofence$Builder setCoordType(java.lang.String) -> setCoordType
    com.baidu.location.BDGeofence build() -> build
com.baidu.location.BDLocation -> com.baidu.location.BDLocation:
    int TypeNone -> TypeNone
    int TypeGpsLocation -> TypeGpsLocation
    int TypeCriteriaException -> TypeCriteriaException
    int TypeNetWorkException -> TypeNetWorkException
    int TypeOffLineLocation -> TypeOffLineLocation
    int TypeOffLineLocationFail -> TypeOffLineLocationFail
    int TypeOffLineLocationNetworkFail -> TypeOffLineLocationNetworkFail
    int TypeNetWorkLocation -> TypeNetWorkLocation
    int TypeCacheLocation -> TypeCacheLocation
    int TypeServerError -> TypeServerError
    int LOCATION_WHERE_UNKNOW -> LOCATION_WHERE_UNKNOW
    int LOCATION_WHERE_IN_CN -> LOCATION_WHERE_IN_CN
    int LOCATION_WHERE_OUT_CN -> LOCATION_WHERE_OUT_CN
    int OPERATORS_TYPE_UNKONW -> OPERATORS_TYPE_UNKONW
    int OPERATORS_TYPE_MOBILE -> OPERATORS_TYPE_MOBILE
    int OPERATORS_TYPE_UNICOM -> OPERATORS_TYPE_UNICOM
    int OPERATORS_TYPE_TELECOMU -> OPERATORS_TYPE_TELECOMU
    int he -> he
    java.lang.String hi -> hi
    double g0 -> g0
    double hf -> hf
    boolean g2 -> g2
    double g6 -> g6
    boolean g3 -> g3
    float hh -> hh
    boolean g9 -> g9
    float hc -> hc
    boolean hg -> hg
    int gZ -> gZ
    float g5 -> g5
    java.lang.String hj -> hj
    boolean hd -> hd
    java.lang.String gY -> gY
    boolean g7 -> g7
    com.baidu.location.BDLocation$a g8 -> g8
    java.lang.String g1 -> g1
    int hb -> hb
    java.lang.String ha -> ha
    int hk -> hk
    java.lang.String g4 -> g4
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String do(java.lang.Throwable) -> do
    java.lang.String bu() -> bu
    void if(java.lang.Boolean) -> if
    boolean isCellChangeFlag() -> isCellChangeFlag
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    double getAltitude() -> getAltitude
    void setAltitude(double) -> setAltitude
    float getSpeed() -> getSpeed
    void setSpeed(float) -> setSpeed
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    void setAddrStr(java.lang.String) -> setAddrStr
    boolean hasAltitude() -> hasAltitude
    boolean hasSpeed() -> hasSpeed
    boolean hasRadius() -> hasRadius
    com.baidu.location.BDLocation q(java.lang.String) -> q
    void setLocType(int) -> setLocType
    int getLocType() -> getLocType
    void setSatelliteNumber(int) -> setSatelliteNumber
    int getSatelliteNumber() -> getSatelliteNumber
    float getDirection() -> getDirection
    void setDirection(float) -> setDirection
    boolean hasSateNumber() -> hasSateNumber
    boolean hasAddr() -> hasAddr
    com.baidu.location.BDLocation$a bx() -> bx
    void if(com.baidu.location.BDLocation$a) -> if
    java.lang.String getAddrStr() -> getAddrStr
    java.lang.String getProvince() -> getProvince
    java.lang.String getCity() -> getCity
    java.lang.String getCityCode() -> getCityCode
    java.lang.String getDistrict() -> getDistrict
    java.lang.String getStreet() -> getStreet
    java.lang.String getStreetNumber() -> getStreetNumber
    java.lang.String getFloor() -> getFloor
    int bv() -> bv
    void case(int) -> case
    java.lang.String getNetworkLocationType() -> getNetworkLocationType
    void setNetworkLocationType(java.lang.String) -> setNetworkLocationType
    int getOperators() -> getOperators
    void byte(int) -> byte
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String bw() -> bw
    java.lang.String getAdUrl(java.lang.String) -> getAdUrl
    java.lang.String by() -> by
    void internalSet(int,java.lang.String) -> internalSet
com.baidu.location.BDLocation$1 -> com.baidu.location.BDLocation$1:
    com.baidu.location.BDLocation a(android.os.Parcel) -> a
    com.baidu.location.BDLocation[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.location.BDLocation$a -> com.baidu.location.BDLocation$a:
    java.lang.String if -> if
    java.lang.String new -> new
    java.lang.String int -> int
    java.lang.String byte -> byte
    java.lang.String do -> do
    java.lang.String for -> for
    java.lang.String try -> try
    com.baidu.location.BDLocation a -> a
com.baidu.location.BDLocationListener -> com.baidu.location.BDLocationListener:
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.baidu.location.BDLocationStatusCodes -> com.baidu.location.BDLocationStatusCodes:
    int SUCCESS -> SUCCESS
    int ERROR -> ERROR
    int GEOFENCE_NOT_AVAIABLE -> GEOFENCE_NOT_AVAIABLE
    int GEOFENCE_TOO_MANY_GEOFENCES -> GEOFENCE_TOO_MANY_GEOFENCES
    int GEOFENCE_SERVICE_NO_ALIVIABLE -> GEOFENCE_SERVICE_NO_ALIVIABLE
    int getStatusCode(int) -> getStatusCode
com.baidu.location.BDNotifyListener -> com.baidu.location.BDNotifyListener:
    double mLatitude -> mLatitude
    double mLongitude -> mLongitude
    float mRadius -> mRadius
    float differDistance -> differDistance
    java.lang.String mCoorType -> mCoorType
    double mLatitudeC -> mLatitudeC
    double mLongitudeC -> mLongitudeC
    int Notified -> Notified
    boolean isAdded -> isAdded
    com.baidu.location.ab mNotifyCache -> mNotifyCache
    void SetNotifyLocation(double,double,float,java.lang.String) -> SetNotifyLocation
    void onNotify(com.baidu.location.BDLocation,float) -> onNotify
com.baidu.location.CommonEncrypt -> com.baidu.location.CommonEncrypt:
    boolean a -> a
    byte[] encrypt(byte[]) -> encrypt
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
com.baidu.location.GeofenceClient -> com.baidu.location.GeofenceClient:
    int bl -> bl
    java.lang.String BUNDLE_FOR_GEOFENCE_ID -> BUNDLE_FOR_GEOFENCE_ID
    android.content.Context bh -> bh
    boolean bn -> bn
    android.os.Messenger bm -> bm
    com.baidu.location.GeofenceClient$a bo -> bo
    android.os.Messenger bk -> bk
    com.baidu.location.GeofenceClient$OnGeofenceTriggerListener bi -> bi
    long bp -> bp
    android.content.ServiceConnection bj -> bj
    void start() -> start
    void d() -> d
    void setInterval(long) -> setInterval
    long e() -> e
    boolean isStarted() -> isStarted
    void registerGeofenceTriggerListener(com.baidu.location.GeofenceClient$OnGeofenceTriggerListener) -> registerGeofenceTriggerListener
    void addBDGeofence(com.baidu.location.BDGeofence,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> addBDGeofence
    void removeBDGeofences(java.util.List,com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> removeBDGeofences
    void for(java.lang.String) -> for
    void int(java.lang.String) -> int
    void startGeofenceScann() -> startGeofenceScann
    void stop() -> stop
    void void() -> void
    android.os.Messenger if(com.baidu.location.GeofenceClient,android.os.Messenger) -> if
    android.os.Messenger if(com.baidu.location.GeofenceClient) -> if
    boolean if(com.baidu.location.GeofenceClient,boolean) -> if
    void do(com.baidu.location.GeofenceClient,java.lang.String) -> do
    void do(com.baidu.location.GeofenceClient) -> do
    void if(com.baidu.location.GeofenceClient,java.lang.String) -> if
com.baidu.location.GeofenceClient$1 -> com.baidu.location.GeofenceClient$1:
    com.baidu.location.GeofenceClient a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener -> com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener:
    void onAddBDGeofencesResult(int,java.lang.String) -> onAddBDGeofencesResult
com.baidu.location.GeofenceClient$OnGeofenceTriggerListener -> com.baidu.location.GeofenceClient$OnGeofenceTriggerListener:
    void onGeofenceTrigger(java.lang.String) -> onGeofenceTrigger
    void onGeofenceExit(java.lang.String) -> onGeofenceExit
com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener -> com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener:
    void onRemoveBDGeofencesByRequestIdsResult(int,java.lang.String[]) -> onRemoveBDGeofencesByRequestIdsResult
com.baidu.location.GeofenceClient$a -> com.baidu.location.GeofenceClient$a:
    com.baidu.location.GeofenceClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.Jni -> com.baidu.location.Jni:
    int fw -> fw
    int fu -> fu
    int fv -> fv
    int fr -> fr
    int fs -> fs
    int fp -> fp
    int fo -> fo
    int fq -> fq
    boolean ft -> ft
    java.lang.String a(byte[],int) -> a
    java.lang.String sky() -> sky
    java.lang.String b(double,double,int,int) -> b
    java.lang.String c(byte[],int) -> c
    java.lang.String g(byte[]) -> g
    void f(byte[],byte[]) -> f
    java.lang.String j(java.lang.String) -> j
    java.lang.String aW() -> aW
    java.lang.String m(java.lang.String) -> m
    java.lang.String k(java.lang.String) -> k
    double[] if(double,double,java.lang.String) -> if
    void int(java.lang.String,java.lang.String) -> int
    java.lang.String l(java.lang.String) -> l
com.baidu.location.LLSInterface -> com.baidu.location.LLSInterface:
    void onCreate(android.content.Context) -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnBind(android.content.Intent) -> onUnBind
    void onDestroy() -> onDestroy
    double getVersion() -> getVersion
com.baidu.location.LocationClient -> com.baidu.location.LocationClient:
    java.lang.String jU -> jU
    int jX -> jX
    int km -> km
    int j5 -> j5
    int ky -> ky
    int ki -> ki
    int kl -> kl
    int kb -> kb
    int j6 -> j6
    int j9 -> j9
    int jS -> jS
    int kv -> kv
    int kj -> kj
    int j1 -> j1
    long ko -> ko
    java.lang.String kx -> kx
    com.baidu.location.LocationClientOption kh -> kh
    boolean kn -> kn
    android.content.Context ke -> ke
    android.os.Messenger kf -> kf
    com.baidu.location.LocationClient$a jT -> jT
    android.os.Messenger kd -> kd
    java.util.ArrayList kz -> kz
    com.baidu.location.BDLocation ku -> ku
    boolean j8 -> j8
    boolean ks -> ks
    boolean ka -> ka
    com.baidu.location.LocationClient$b jY -> jY
    boolean jR -> jR
    java.lang.Object jV -> jV
    long kg -> kg
    long kp -> kp
    com.baidu.location.ab j0 -> j0
    boolean kt -> kt
    com.baidu.location.BDLocationListener j7 -> j7
    java.lang.String kw -> kw
    java.lang.String kr -> kr
    boolean j4 -> j4
    java.lang.Boolean j3 -> j3
    java.lang.Boolean jZ -> jZ
    java.lang.Boolean kk -> kk
    boolean kc -> kc
    android.content.ServiceConnection kq -> kq
    long j2 -> j2
    com.baidu.location.BDErrorReport jW -> jW
    com.baidu.location.LocationClientOption getLocOption() -> getLocOption
    void setLocOption(com.baidu.location.LocationClientOption) -> setLocOption
    boolean updateLocation(android.location.Location) -> updateLocation
    void requestNotifyLocation() -> requestNotifyLocation
    int requestOfflineLocation() -> requestOfflineLocation
    void cP() -> cP
    int requestLocation() -> requestLocation
    boolean isStarted() -> isStarted
    com.baidu.location.BDLocation getLastKnownLocation() -> getLastKnownLocation
    java.lang.String getVersion() -> getVersion
    void start() -> start
    void cM() -> cM
    void stop() -> stop
    void cN() -> cN
    void registerNotify(com.baidu.location.BDNotifyListener) -> registerNotify
    void l(android.os.Message) -> l
    void removeNotifyEvent(com.baidu.location.BDNotifyListener) -> removeNotifyEvent
    void q(android.os.Message) -> q
    void n(android.os.Message) -> n
    android.os.Bundle cL() -> cL
    android.os.Bundle cK() -> cK
    void registerNotifyLocationListener(com.baidu.location.BDLocationListener) -> registerNotifyLocationListener
    void s(android.os.Message) -> s
    void registerLocationListener(com.baidu.location.BDLocationListener) -> registerLocationListener
    void r(android.os.Message) -> r
    void unRegisterLocationListener(com.baidu.location.BDLocationListener) -> unRegisterLocationListener
    void m(android.os.Message) -> m
    void cO() -> cO
    void o(android.os.Message) -> o
    void if(android.os.Message,int) -> if
    void p(android.os.Message) -> p
    void else(int) -> else
    void setForBaiduMap(boolean) -> setForBaiduMap
    void setDebug(boolean) -> setDebug
    boolean notifyError() -> notifyError
    int reportErrorWithInfo(com.baidu.location.BDErrorReport) -> reportErrorWithInfo
    void cancleError() -> cancleError
    void goto(boolean) -> goto
    boolean goto(int) -> goto
    java.lang.String getAccessKey() -> getAccessKey
    android.os.Messenger if(com.baidu.location.LocationClient,android.os.Messenger) -> if
    android.os.Messenger char(com.baidu.location.LocationClient) -> char
    boolean if(com.baidu.location.LocationClient,boolean) -> if
    android.os.Messenger new(com.baidu.location.LocationClient) -> new
    android.os.Bundle long(com.baidu.location.LocationClient) -> long
    com.baidu.location.LocationClientOption else(com.baidu.location.LocationClient) -> else
    java.lang.Boolean if(com.baidu.location.LocationClient) -> if
    java.lang.Boolean if(com.baidu.location.LocationClient,java.lang.Boolean) -> if
    com.baidu.location.LocationClient$a byte(com.baidu.location.LocationClient) -> byte
    java.lang.Object for(com.baidu.location.LocationClient) -> for
    boolean int(com.baidu.location.LocationClient,boolean) -> int
    java.util.ArrayList goto(com.baidu.location.LocationClient) -> goto
    void for(com.baidu.location.LocationClient,android.os.Message) -> for
    void do(com.baidu.location.LocationClient,android.os.Message) -> do
    void if(com.baidu.location.LocationClient,android.os.Message) -> if
    void case(com.baidu.location.LocationClient,android.os.Message) -> case
    void byte(com.baidu.location.LocationClient,android.os.Message) -> byte
    void new(com.baidu.location.LocationClient,android.os.Message) -> new
    void do(com.baidu.location.LocationClient) -> do
    void try(com.baidu.location.LocationClient) -> try
    void case(com.baidu.location.LocationClient) -> case
    void int(com.baidu.location.LocationClient,android.os.Message) -> int
    void int(com.baidu.location.LocationClient) -> int
    boolean for(com.baidu.location.LocationClient,boolean) -> for
    void if(com.baidu.location.LocationClient,android.os.Message,int) -> if
    void try(com.baidu.location.LocationClient,android.os.Message) -> try
    void do(com.baidu.location.LocationClient,boolean) -> do
com.baidu.location.LocationClient$1 -> com.baidu.location.LocationClient$1:
    com.baidu.location.LocationClient a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.location.LocationClient$a -> com.baidu.location.LocationClient$a:
    com.baidu.location.LocationClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.LocationClient$b -> com.baidu.location.LocationClient$b:
    com.baidu.location.LocationClient a -> a
    void run() -> run
com.baidu.location.LocationClientOption -> com.baidu.location.LocationClientOption:
    int MIN_SCAN_SPAN -> MIN_SCAN_SPAN
    int MIN_SCAN_SPAN_NETWORK -> MIN_SCAN_SPAN_NETWORK
    int byte -> byte
    int void -> void
    int try -> try
    java.lang.String do -> do
    java.lang.String else -> else
    boolean for -> for
    int int -> int
    int d -> d
    java.lang.String if -> if
    int h -> h
    boolean goto -> goto
    boolean a -> a
    boolean new -> new
    boolean e -> e
    float c -> c
    int long -> long
    java.lang.String case -> case
    boolean b -> b
    boolean char -> char
    boolean g -> g
    com.baidu.location.LocationClientOption$LocationMode f -> f
    boolean equals(com.baidu.location.LocationClientOption) -> equals
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    java.lang.String getAddrType() -> getAddrType
    void setAddrType(java.lang.String) -> setAddrType
    void setIsNeedAddress(boolean) -> setIsNeedAddress
    boolean isOpenGps() -> isOpenGps
    void setOpenGps(boolean) -> setOpenGps
    boolean isLocationNotify() -> isLocationNotify
    void setLocationNotify(boolean) -> setLocationNotify
    int getScanSpan() -> getScanSpan
    void setScanSpan(int) -> setScanSpan
    int getTimeOut() -> getTimeOut
    void setTimeOut(int) -> setTimeOut
    java.lang.String getProdName() -> getProdName
    void setProdName(java.lang.String) -> setProdName
    void setLocationMode(com.baidu.location.LocationClientOption$LocationMode) -> setLocationMode
    com.baidu.location.LocationClientOption$LocationMode getLocationMode() -> getLocationMode
    void setNeedDeviceDirect(boolean) -> setNeedDeviceDirect
    boolean a() -> a
    void SetIgnoreCacheException(boolean) -> SetIgnoreCacheException
    void setIgnoreKillProcess(boolean) -> setIgnoreKillProcess
com.baidu.location.LocationClientOption$1 -> com.baidu.location.LocationClientOption$1:
    int[] a -> a
com.baidu.location.LocationClientOption$LocationMode -> com.baidu.location.LocationClientOption$LocationMode:
    com.baidu.location.LocationClientOption$LocationMode Hight_Accuracy -> Hight_Accuracy
    com.baidu.location.LocationClientOption$LocationMode Battery_Saving -> Battery_Saving
    com.baidu.location.LocationClientOption$LocationMode Device_Sensors -> Device_Sensors
    com.baidu.location.LocationClientOption$LocationMode[] a -> a
    com.baidu.location.LocationClientOption$LocationMode[] values() -> values
    com.baidu.location.LocationClientOption$LocationMode valueOf(java.lang.String) -> valueOf
com.baidu.location.a -> com.baidu.location.a:
    java.lang.Boolean lv -> lv
    java.lang.Boolean lq -> lq
    char lr -> lr
    java.lang.String ls -> ls
    int lu -> lu
    java.lang.String lp -> lp
    java.text.SimpleDateFormat lw -> lw
    java.text.SimpleDateFormat lt -> lt
    void if(java.lang.String,java.lang.Object) -> if
    void int(java.lang.String,java.lang.Object) -> int
    void new(java.lang.String,java.lang.Object) -> new
    void do(java.lang.String,java.lang.Object) -> do
    void for(java.lang.String,java.lang.Object) -> for
    void case(java.lang.String,java.lang.String) -> case
    void goto(java.lang.String,java.lang.String) -> goto
    void byte(java.lang.String,java.lang.String) -> byte
    void char(java.lang.String,java.lang.String) -> char
    void else(java.lang.String,java.lang.String) -> else
    void if(java.lang.String,java.lang.String,char) -> if
    void int(java.lang.String,java.lang.String,java.lang.String) -> int
    void dh() -> dh
    java.util.Date di() -> di
com.baidu.location.a.a -> com.baidu.location.a.a:
    java.lang.String goto -> goto
    java.lang.String do -> do
    java.lang.String for -> for
    java.lang.String char -> char
    java.lang.String int -> int
    java.lang.String byte -> byte
    java.lang.String else -> else
    java.lang.String if -> if
    java.lang.String b -> b
    java.lang.String try -> try
    java.lang.String new -> new
    java.lang.String case -> case
    java.lang.String void -> void
    java.lang.String long -> long
    java.lang.String a -> a
com.baidu.location.a.b -> com.baidu.location.a.b:
    java.lang.String a -> a
    java.lang.String if -> if
    java.lang.String new -> new
    java.lang.String for -> for
    java.lang.String int -> int
    java.lang.String do -> do
com.baidu.location.a0 -> com.baidu.location.a0:
    java.lang.String i -> i
    java.lang.String I -> I
    int F -> F
    int byte -> byte
    int for -> for
    int k -> k
    int r -> r
    int O -> O
    int d -> d
    int L -> L
    int Q -> Q
    int else -> else
    int E -> E
    int goto -> goto
    int q -> q
    int K -> K
    int G -> G
    int o -> o
    int void -> void
    int do -> do
    int char -> char
    int p -> p
    int n -> n
    int h -> h
    int x -> x
    int e -> e
    int case -> case
    int C -> C
    int f -> f
    int D -> D
    int A -> A
    int B -> B
    int z -> z
    int m -> m
    int M -> M
    int u -> u
    int s -> s
    int N -> N
    int H -> H
    int w -> w
    int y -> y
    int v -> v
    int try -> try
    int l -> l
    int g -> g
    int int -> int
    int t -> t
    int long -> long
    int if -> if
    int b -> b
    int P -> P
    int j -> j
    int J -> J
    int new -> new
    int c -> c
com.baidu.location.a1 -> com.baidu.location.a1:
    com.baidu.location.a1 iR -> iR
    java.lang.String jb -> jb
    boolean i3 -> i3
    boolean i9 -> i9
    boolean iS -> iS
    java.lang.String iT -> iT
    int i7 -> i7
    double i0 -> i0
    double iZ -> iZ
    double i4 -> i4
    double iX -> iX
    double iW -> iW
    long iU -> iU
    boolean i1 -> i1
    boolean i5 -> i5
    int iV -> iV
    int ja -> ja
    java.lang.String iY -> iY
    java.lang.String i8 -> i8
    java.lang.String i6 -> i6
    boolean i2 -> i2
    com.baidu.location.a1 ct() -> ct
    void j(android.os.Message) -> j
    void cy() -> cy
    void cx() -> cx
    void k(android.os.Message) -> k
    com.baidu.location.BDLocation case(boolean) -> case
    void for(com.baidu.location.au$b) -> for
    void if(com.baidu.location.au$b,com.baidu.location.BDLocation,android.database.sqlite.SQLiteDatabase) -> if
    void cv() -> cv
    void if(java.lang.String,com.baidu.location.u$a,com.baidu.location.au$b,com.baidu.location.BDLocation) -> if
    void s(java.lang.String) -> s
    void if(java.lang.String,com.baidu.location.u$a,android.database.sqlite.SQLiteDatabase) -> if
    void cw() -> cw
    java.lang.String byte(boolean) -> byte
    void cu() -> cu
    void do(com.baidu.location.a1) -> do
    boolean if(com.baidu.location.a1,boolean) -> if
    java.lang.String if(com.baidu.location.a1) -> if
    void if(com.baidu.location.a1,java.lang.String,com.baidu.location.u$a,android.database.sqlite.SQLiteDatabase) -> if
    void if(com.baidu.location.a1,com.baidu.location.au$b,com.baidu.location.BDLocation,android.database.sqlite.SQLiteDatabase) -> if
com.baidu.location.a1$1 -> com.baidu.location.a1$1:
    com.baidu.location.a1 a -> a
    void run() -> run
com.baidu.location.a1$a -> com.baidu.location.a1$a:
    com.baidu.location.a1 a -> a
    java.lang.Boolean a(java.lang.Boolean[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.location.a1$b -> com.baidu.location.a1$b:
    com.baidu.location.a1 a -> a
    java.lang.Boolean a(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.location.a2 -> com.baidu.location.a2:
    com.baidu.location.a2 jk -> jk
    java.lang.String jf -> jf
    java.lang.String jj -> jj
    java.lang.String jh -> jh
    int je -> je
    int jd -> jd
    android.hardware.Sensor ji -> ji
    java.lang.String jc -> jc
    java.lang.String jg -> jg
    com.baidu.location.a2 cC() -> cC
    void try(java.lang.String,java.lang.String) -> try
    java.lang.String cA() -> cA
    java.lang.String cD() -> cD
    java.lang.String cB() -> cB
    java.lang.String cz() -> cz
    java.lang.String t(java.lang.String) -> t
    java.lang.String char(boolean) -> char
    java.lang.String if(boolean,java.lang.String) -> if
com.baidu.location.a3 -> com.baidu.location.a3:
    int jn -> jn
    int jF -> jF
    int jo -> jo
    int jH -> jH
    long jw -> jw
    int jq -> jq
    java.lang.String jM -> jM
    java.lang.String jE -> jE
    java.lang.String jO -> jO
    java.lang.String jy -> jy
    java.lang.String jL -> jL
    java.lang.String jl -> jl
    java.lang.String jt -> jt
    boolean jr -> jr
    java.util.List jP -> jP
    java.util.List jm -> jm
    android.os.PowerManager$WakeLock jD -> jD
    android.os.HandlerThread jI -> jI
    com.baidu.location.a3$d jv -> jv
    com.baidu.location.a3$c jC -> jC
    boolean js -> js
    java.lang.String ju -> ju
    java.lang.String jB -> jB
    com.baidu.location.au$b jQ -> jQ
    com.baidu.location.au$b jN -> jN
    java.lang.String jp -> jp
    android.os.Messenger jK -> jK
    int jG -> jG
    java.util.Map jA -> jA
    com.baidu.location.a3 jJ -> jJ
    android.os.Handler jz -> jz
    boolean jx -> jx
    com.baidu.location.a3 cE() -> cE
    void cJ() -> cJ
    void for(java.util.List) -> for
    void cH() -> cH
    void for(com.baidu.location.at) -> for
    java.util.List else(boolean) -> else
    boolean cG() -> cG
    void byte(android.content.Context) -> byte
    void cI() -> cI
    void if(android.content.Context,android.os.Message) -> if
    void new(android.content.Context) -> new
    void try(android.content.Context) -> try
    void if(android.content.Context,int) -> if
    java.util.List for(java.lang.String,boolean) -> for
    java.util.List if(java.util.List,boolean) -> if
    java.util.Map cF() -> cF
    boolean do(com.baidu.location.a3,boolean) -> do
    java.lang.String do(com.baidu.location.a3,java.lang.String) -> do
    com.baidu.location.au$b if(com.baidu.location.a3,com.baidu.location.au$b) -> if
    boolean try(com.baidu.location.a3) -> try
    boolean if(com.baidu.location.a3,boolean) -> if
    java.util.Map goto(com.baidu.location.a3) -> goto
    android.os.Messenger char(com.baidu.location.a3) -> char
    java.util.List for(com.baidu.location.a3,boolean) -> for
    java.lang.String case(com.baidu.location.a3) -> case
    java.lang.String for(com.baidu.location.a3) -> for
    boolean else(com.baidu.location.a3) -> else
    boolean new(com.baidu.location.a3) -> new
    com.baidu.location.au$b int(com.baidu.location.a3) -> int
    java.lang.String if(com.baidu.location.a3,java.lang.String) -> if
    java.util.List if(com.baidu.location.a3,java.util.List) -> if
    java.util.List do(com.baidu.location.a3,java.util.List) -> do
    void for(com.baidu.location.a3,java.util.List) -> for
    void do(com.baidu.location.a3) -> do
    void if(com.baidu.location.a3,android.content.Context) -> if
    com.baidu.location.a3$d if(com.baidu.location.a3) -> if
    android.os.Handler byte(com.baidu.location.a3) -> byte
com.baidu.location.a3$1 -> com.baidu.location.a3$1:
com.baidu.location.a3$a -> com.baidu.location.a3$a:
    java.lang.String dZ -> dZ
    java.lang.String d2 -> d2
    java.lang.String d1 -> d1
    java.lang.String d3 -> d3
    java.lang.String d5 -> d5
    com.baidu.location.at d0 -> d0
    java.lang.String d4 -> d4
    com.baidu.location.a3 dY -> dY
    void X() -> X
    void do(boolean) -> do
    void ao() -> ao
    void am() -> am
    void an() -> an
com.baidu.location.a3$b -> com.baidu.location.a3$b:
    com.baidu.location.a3 eT -> eT
    void byte(android.os.Message) -> byte
    void aA() -> aA
com.baidu.location.a3$c -> com.baidu.location.a3$c:
    com.baidu.location.a3 a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.a3$d -> com.baidu.location.a3$d:
    com.baidu.location.a3 lo -> lo
    void run() -> run
com.baidu.location.aa -> com.baidu.location.aa:
    com.baidu.location.aa gr -> gr
    com.baidu.location.aa$a gl -> gl
    long gt -> gt
    boolean go -> go
    boolean gq -> gq
    boolean gu -> gu
    boolean gi -> gi
    boolean gw -> gw
    boolean gj -> gj
    boolean gn -> gn
    boolean gs -> gs
    int gp -> gp
    java.lang.String gk -> gk
    int gv -> gv
    int gm -> gm
    int gx -> gx
    com.baidu.location.aa bf() -> bf
    void bh() -> bh
    void bi() -> bi
    boolean p(java.lang.String) -> p
    void bd() -> bd
    void bj() -> bj
    void bg() -> bg
    void o(java.lang.String) -> o
    void if(org.apache.http.HttpEntity) -> if
    void do(org.apache.http.HttpEntity) -> do
    void try(int) -> try
    void be() -> be
    void bk() -> bk
    void new(int) -> new
    void if(com.baidu.location.aa,org.apache.http.HttpEntity) -> if
    void do(com.baidu.location.aa,org.apache.http.HttpEntity) -> do
com.baidu.location.aa$a -> com.baidu.location.aa$a:
    java.lang.String dD -> dD
    boolean dC -> dC
    boolean dE -> dE
    com.baidu.location.aa dB -> dB
    void X() -> X
    void do(boolean) -> do
    void if(java.lang.String,boolean) -> if
com.baidu.location.ab -> com.baidu.location.ab:
    java.util.ArrayList gE -> gE
    float gI -> gI
    com.baidu.location.BDLocation gF -> gF
    long gK -> gK
    com.baidu.location.LocationClient gM -> gM
    android.content.Context gz -> gz
    int gy -> gy
    long gG -> gG
    boolean gJ -> gJ
    android.app.PendingIntent gD -> gD
    android.app.AlarmManager gA -> gA
    com.baidu.location.ab$b gH -> gH
    java.lang.String gC -> gC
    com.baidu.location.ab$a gB -> gB
    boolean gL -> gL
    void bm() -> bm
    int do(com.baidu.location.BDNotifyListener) -> do
    void if(com.baidu.location.BDNotifyListener) -> if
    int for(com.baidu.location.BDNotifyListener) -> for
    boolean bn() -> bn
    void bl() -> bl
    void if(long) -> if
    void int(com.baidu.location.BDLocation) -> int
    java.util.ArrayList do(com.baidu.location.ab) -> do
    void if(com.baidu.location.ab,com.baidu.location.BDLocation) -> if
    com.baidu.location.LocationClient if(com.baidu.location.ab) -> if
com.baidu.location.ab$a -> com.baidu.location.ab$a:
    com.baidu.location.ab a -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    void a(com.baidu.location.BDLocation) -> a
com.baidu.location.ab$b -> com.baidu.location.ab$b:
    com.baidu.location.ab a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.ac -> com.baidu.location.ac:
    com.baidu.location.ac gN -> gN
    com.baidu.location.ac bo() -> bo
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void if(java.io.File,java.lang.String,java.lang.String) -> if
    void bp() -> bp
    java.lang.String if(java.lang.Throwable) -> if
    boolean new(java.lang.String,java.lang.String) -> new
com.baidu.location.ad -> com.baidu.location.ad:
    com.baidu.location.ad$a gW -> gW
    android.os.Messenger gS -> gS
    android.content.Context gR -> gR
    boolean gO -> gO
    android.os.Looper gU -> gU
    android.os.HandlerThread gT -> gT
    boolean gQ -> gQ
    long gV -> gV
    boolean gX -> gX
    long gP -> gP
    void onCreate(android.content.Context) -> onCreate
    void bt() -> bt
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void bs() -> bs
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.Handler br() -> br
    long bq() -> bq
    void h(android.os.Message) -> h
    void e(android.os.Message) -> e
    void i(android.os.Message) -> i
    void d(android.os.Message) -> d
    boolean onUnBind(android.content.Intent) -> onUnBind
    double getVersion() -> getVersion
    void for(com.baidu.location.ad,android.os.Message) -> for
    void if(com.baidu.location.ad,android.os.Message) -> if
    void do(com.baidu.location.ad,android.os.Message) -> do
    void int(com.baidu.location.ad,android.os.Message) -> int
    void do(com.baidu.location.ad) -> do
    void if(com.baidu.location.ad) -> if
com.baidu.location.ad$a -> com.baidu.location.ad$a:
    com.baidu.location.ad a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.ae -> com.baidu.location.ae:
    boolean R -> R
    boolean S -> S
    boolean T -> T
com.baidu.location.af -> com.baidu.location.af:
    int kR -> kR
    int kC -> kC
    android.hardware.SensorManager kO -> kO
    android.hardware.Sensor kB -> kB
    android.hardware.Sensor kH -> kH
    android.os.Handler kJ -> kJ
    com.baidu.location.af kK -> kK
    boolean kI -> kI
    boolean kG -> kG
    boolean kE -> kE
    boolean kD -> kD
    java.lang.StringBuffer kP -> kP
    java.lang.StringBuffer kN -> kN
    java.lang.Runnable kQ -> kQ
    java.lang.Runnable kA -> kA
    int kM -> kM
    int kF -> kF
    boolean kL -> kL
    com.baidu.location.af c0() -> c0
    void long(int) -> long
    boolean void(int) -> void
    void if(java.io.RandomAccessFile,int) -> if
    void e(int) -> e
    boolean c4() -> c4
    boolean if(java.io.File) -> if
    java.lang.String d(int) -> d
    java.lang.String h(int) -> h
    java.lang.String c5() -> c5
    boolean if(java.io.File,int) -> if
    java.lang.String c1() -> c1
    java.lang.String cV() -> cV
    java.lang.String cU() -> cU
    void c2() -> c2
    void cY() -> cY
    void cX() -> cX
    void c3() -> c3
    void cT() -> cT
    void cZ() -> cZ
    void cS() -> cS
    void cW() -> cW
    void cQ() -> cQ
    void cR() -> cR
    void do(java.lang.StringBuffer) -> do
    void if(java.lang.StringBuffer) -> if
    void if(java.lang.StringBuffer,java.lang.StringBuffer,java.lang.String) -> if
    void if(java.lang.StringBuffer,java.io.File) -> if
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    java.lang.Runnable for(com.baidu.location.af) -> for
    android.os.Handler if(com.baidu.location.af) -> if
    java.lang.Runnable do(com.baidu.location.af) -> do
com.baidu.location.af$1 -> com.baidu.location.af$1:
    com.baidu.location.af a -> a
    void run() -> run
com.baidu.location.af$2 -> com.baidu.location.af$2:
    com.baidu.location.af a -> a
    void run() -> run
com.baidu.location.af$3 -> com.baidu.location.af$3:
    com.baidu.location.af a -> a
    void run() -> run
com.baidu.location.af$a -> com.baidu.location.af$a:
    boolean if -> if
    java.lang.StringBuffer do -> do
    com.baidu.location.af a -> a
    void if() -> if
    void a() -> a
    void do() -> do
com.baidu.location.af$b -> com.baidu.location.af$b:
    com.baidu.location.af a -> a
com.baidu.location.ag -> com.baidu.location.ag:
    com.baidu.location.ag hm -> hm
    android.os.Handler hl -> hl
    com.baidu.location.ag bz() -> bz
    void bD() -> bD
    void bB() -> bB
    boolean bC() -> bC
    boolean bA() -> bA
com.baidu.location.ah -> com.baidu.location.ah:
    float[] ho -> ho
    float[] hs -> hs
    float[] hr -> hr
    android.hardware.SensorManager hq -> hq
    com.baidu.location.ah ht -> ht
    float hp -> hp
    boolean hn -> hn
    com.baidu.location.ah bG() -> bG
    void bH() -> bH
    void bF() -> bF
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void try(boolean) -> try
    boolean bI() -> bI
    float bE() -> bE
com.baidu.location.ai -> com.baidu.location.ai:
    double hC -> hC
    double hv -> hv
    float hA -> hA
    boolean hD -> hD
    boolean hx -> hx
    java.lang.String hz -> hz
    java.lang.String hw -> hw
    java.lang.String hy -> hy
    java.lang.String hE -> hE
    java.lang.String hB -> hB
    java.lang.String hu -> hu
    java.lang.String bN() -> bN
    boolean bJ() -> bJ
    double bK() -> bK
    double bL() -> bL
    float bM() -> bM
com.baidu.location.aj -> com.baidu.location.aj:
    com.baidu.location.au$b ex -> ex
    com.baidu.location.u$a eu -> eu
    boolean es -> es
    boolean ew -> ew
    boolean ev -> ev
    boolean eq -> eq
    java.lang.String er -> er
    android.os.Handler et -> et
    void byte(android.os.Message) -> byte
    void aA() -> aA
    java.lang.String h(java.lang.String) -> h
com.baidu.location.aj$a -> com.baidu.location.aj$a:
    java.lang.String dH -> dH
    java.lang.String dG -> dG
    com.baidu.location.aj dF -> dF
    void X() -> X
    void do(boolean) -> do
    void e(java.lang.String) -> e
com.baidu.location.aj$b -> com.baidu.location.aj$b:
    com.baidu.location.aj a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.ak -> com.baidu.location.ak:
    com.baidu.location.ak eB -> eB
    int eR -> eR
    int ey -> ey
    boolean eM -> eM
    com.baidu.location.av eF -> eF
    com.baidu.location.aj$a ez -> ez
    java.lang.String eS -> eS
    com.baidu.location.BDLocation eP -> eP
    com.baidu.location.BDLocation eQ -> eQ
    com.baidu.location.au$b eJ -> eJ
    com.baidu.location.u$a eH -> eH
    boolean eN -> eN
    boolean eA -> eA
    boolean eK -> eK
    long eE -> eE
    long eG -> eG
    int eC -> eC
    android.os.Handler et -> et
    com.baidu.location.BDLocation$a eO -> eO
    long eD -> eD
    double eI -> eI
    double eL -> eL
    com.baidu.location.ak aF() -> aF
    void case(android.os.Message) -> case
    void aJ() -> aJ
    void aE() -> aE
    void else(android.os.Message) -> else
    void goto(android.os.Message) -> goto
    void char(android.os.Message) -> char
    void aI() -> aI
    boolean if(com.baidu.location.au$b) -> if
    boolean aB() -> aB
    boolean aH() -> aH
    boolean if(com.baidu.location.u$a) -> if
    void aL() -> aL
    void aD() -> aD
    void byte(android.os.Message) -> byte
    void aA() -> aA
    void aG() -> aG
    void for(com.baidu.location.BDLocation) -> for
    void aC() -> aC
    void aK() -> aK
    boolean do(com.baidu.location.ak) -> do
    boolean if(com.baidu.location.ak,boolean) -> if
    void if(com.baidu.location.ak) -> if
com.baidu.location.ak$1 -> com.baidu.location.ak$1:
com.baidu.location.ak$a -> com.baidu.location.ak$a:
    com.baidu.location.ak a -> a
    void run() -> run
com.baidu.location.al -> com.baidu.location.al:
    com.baidu.location.al hG -> hG
    android.os.Handler hH -> hH
    boolean hF -> hF
    boolean hI -> hI
    com.baidu.location.al bP() -> bP
    void bO() -> bO
    void bR() -> bR
    void bQ() -> bQ
    void for(com.baidu.location.al) -> for
    boolean if(com.baidu.location.al,boolean) -> if
    boolean do(com.baidu.location.al) -> do
    android.os.Handler if(com.baidu.location.al) -> if
com.baidu.location.al$1 -> com.baidu.location.al$1:
    com.baidu.location.al a -> a
    void run() -> run
com.baidu.location.al$2 -> com.baidu.location.al$2:
    com.baidu.location.al a -> a
    void run() -> run
com.baidu.location.am -> com.baidu.location.am:
    android.hardware.SensorManager h7 -> h7
    boolean h8 -> h8
    int hW -> hW
    android.hardware.Sensor hY -> hY
    long hM -> hM
    int h1 -> h1
    int hL -> hL
    float h5 -> h5
    float hO -> hO
    float h4 -> h4
    int hZ -> hZ
    float[] hN -> hN
    float[] h0 -> h0
    int h2 -> h2
    double[] h3 -> h3
    int h6 -> h6
    int hJ -> hJ
    java.util.Timer hV -> hV
    int hX -> hX
    double[] hR -> hR
    int hT -> hT
    double hQ -> hQ
    int hK -> hK
    long hU -> hU
    int hP -> hP
    android.hardware.SensorEventListener hS -> hS
    void bW() -> bW
    void bX() -> bX
    void bV() -> bV
    void do(double) -> do
    boolean if(double) -> if
    float[] if(float,float,float) -> if
    double if(double[]) -> if
    void char(int) -> char
    int bU() -> bU
    int bS() -> bS
    void bT() -> bT
    float[] if(com.baidu.location.am,float[]) -> if
    float[] if(com.baidu.location.am,float,float,float) -> if
    int do(com.baidu.location.am) -> do
    int for(com.baidu.location.am) -> for
    int if(com.baidu.location.am,int) -> if
    void if(com.baidu.location.am) -> if
com.baidu.location.am$1 -> com.baidu.location.am$1:
    com.baidu.location.am a -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.baidu.location.am$2 -> com.baidu.location.am$2:
    com.baidu.location.am a -> a
    void run() -> run
com.baidu.location.an -> com.baidu.location.an:
    com.baidu.location.an goto -> goto
    java.lang.String int -> int
    java.lang.String byte -> byte
    java.lang.String else -> else
    java.lang.String new -> new
    boolean a -> a
    java.lang.String case -> case
    java.lang.String do -> do
    com.baidu.location.an$a try -> try
    long char -> char
    long for -> for
    long if -> if
    com.baidu.location.an a() -> a
    void do() -> do
    void if() -> if
    void a(android.os.Message) -> a
    void a(java.lang.String) -> a
    void if(java.lang.String) -> if
    java.lang.String a(com.baidu.location.an) -> a
    java.lang.String if(com.baidu.location.an,java.lang.String) -> if
    java.lang.String if(com.baidu.location.an) -> if
    java.lang.String a(com.baidu.location.an,java.lang.String) -> a
    long do(com.baidu.location.an) -> do
    long for(com.baidu.location.an) -> for
    long a(com.baidu.location.an,long) -> a
com.baidu.location.an$a -> com.baidu.location.an$a:
    boolean dL -> dL
    java.lang.String dJ -> dJ
    android.os.Messenger dK -> dK
    com.baidu.location.an dI -> dI
    void X() -> X
    void do(boolean) -> do
    void try(android.os.Message) -> try
com.baidu.location.ao -> com.baidu.location.ao:
com.baidu.location.ap -> com.baidu.location.ap:
    java.lang.String ib -> ib
    double ih -> ih
    int ig -> ig
    java.lang.String ie -> ie
    java.lang.String ic -> ic
    java.lang.String[] ia -> ia
    java.lang.String[] id -> id
    com.baidu.location.ap h9 -> h9
    com.baidu.location.ap b5() -> b5
    void new(com.baidu.location.BDLocation) -> new
    com.baidu.location.ap$a b2() -> b2
    void b3() -> b3
    double b4() -> b4
    double bZ() -> bZ
    double bY() -> bY
    long b0() -> b0
    boolean b1() -> b1
    int b6() -> b6
com.baidu.location.ap$a -> com.baidu.location.ap$a:
    double int -> int
    double try -> try
    double if -> if
    long new -> new
    boolean for -> for
    int do -> do
    com.baidu.location.ap a -> a
com.baidu.location.aq -> com.baidu.location.aq:
    java.lang.Object a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object,java.lang.Object) -> a
    void a(boolean) -> a
    void a(boolean,java.lang.Object) -> a
    void if(boolean,java.lang.Object) -> if
    void a(boolean,java.lang.String,java.lang.Object[]) -> a
    void if(boolean) -> if
com.baidu.location.ar -> com.baidu.location.ar:
    android.os.HandlerThread a -> a
    android.os.HandlerThread a() -> a
com.baidu.location.as -> com.baidu.location.as:
    com.baidu.location.as do() -> do
    void if() -> if
    void a() -> a
com.baidu.location.at -> com.baidu.location.at:
    int d -> d
    long void -> void
    int int -> int
    int e -> e
    java.lang.String for -> for
    java.lang.String byte -> byte
    int else -> else
    int case -> case
    int i -> i
    java.lang.String do -> do
    double goto -> goto
    double try -> try
    int a -> a
    float b -> b
    long long -> long
    int c -> c
    java.lang.String new -> new
    boolean f -> f
    boolean char -> char
    boolean if -> if
    long h -> h
    int g -> g
    int try() -> try
    void a(int) -> a
    java.lang.String getGeofenceId() -> getGeofenceId
    double case() -> case
    double a() -> a
    float do() -> do
    void a(float) -> a
    long goto() -> goto
    java.lang.String int() -> int
    boolean byte() -> byte
    void do(boolean) -> do
    boolean for() -> for
    void if(boolean) -> if
    boolean if() -> if
    void a(boolean) -> a
    long else() -> else
    void a(long) -> a
    int char() -> char
    int new() -> new
    void if(java.lang.String) -> if
    void do(int) -> do
    void a(double,double) -> a
    void a(java.lang.String) -> a
    void if(long) -> if
    java.lang.String if(int) -> if
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.baidu.location.au -> com.baidu.location.au:
    int ij -> ij
    long ii -> ii
    long io -> io
    long iq -> iq
    com.baidu.location.au is -> is
    android.net.wifi.WifiManager ir -> ir
    com.baidu.location.au$a iw -> iw
    com.baidu.location.au$b im -> im
    long ip -> ip
    long iv -> iv
    boolean iu -> iu
    java.lang.Object in -> in
    java.lang.reflect.Method it -> it
    boolean ik -> ik
    long il -> il
    com.baidu.location.au cc() -> cc
    void ci() -> ci
    void b8() -> b8
    boolean cj() -> cj
    boolean cd() -> cd
    boolean cl() -> cl
    boolean b9() -> b9
    boolean ca() -> ca
    java.lang.String ck() -> ck
    com.baidu.location.au$b b7() -> b7
    com.baidu.location.au$b ch() -> ch
    com.baidu.location.au$b ce() -> ce
    void cb() -> cb
    boolean cf() -> cf
    boolean if(com.baidu.location.au$b,com.baidu.location.au$b,float) -> if
    double if(com.baidu.location.au$b,com.baidu.location.au$b) -> if
    java.lang.String cg() -> cg
    boolean r(java.lang.String) -> r
    long if(com.baidu.location.au,long) -> if
    void if(com.baidu.location.au) -> if
    boolean if(com.baidu.location.au,java.lang.String) -> if
    long do(com.baidu.location.au) -> do
com.baidu.location.au$1 -> com.baidu.location.au$1:
com.baidu.location.au$a -> com.baidu.location.au$a:
    com.baidu.location.au a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.au$b -> com.baidu.location.au$b:
    java.util.List for -> for
    long if -> if
    long int -> int
    boolean do -> do
    boolean new -> new
    com.baidu.location.au a -> a
    java.lang.String int() -> int
    int try() -> try
    java.lang.String char() -> char
    java.lang.String byte() -> byte
    java.lang.String a(int) -> a
    java.lang.String if(int) -> if
    java.lang.String else() -> else
    void a() -> a
    java.lang.String do(int) -> do
    boolean if(com.baidu.location.au$b) -> if
    boolean do(com.baidu.location.au$b) -> do
    boolean a(com.baidu.location.au$b) -> a
    int do() -> do
    boolean case() -> case
    boolean for() -> for
    boolean new() -> new
    boolean if() -> if
com.baidu.location.av -> com.baidu.location.av:
    boolean do(com.baidu.location.au$b) -> do
    int try(com.baidu.location.BDLocation) -> try
    void cm() -> cm
com.baidu.location.aw -> com.baidu.location.aw:
    boolean k3 -> k3
    java.lang.String k2 -> k2
    boolean la -> la
    java.lang.String kY -> kY
    int k4 -> k4
    int k6 -> k6
    java.lang.String k8 -> k8
    char k1 -> k1
    java.lang.String k9 -> k9
    boolean k5 -> k5
    int kT -> kT
    double k0 -> k0
    double kW -> kW
    java.util.List kU -> kU
    boolean kZ -> kZ
    int k7 -> k7
    boolean kV -> kV
    java.lang.String kX -> kX
    int kS -> kS
    void c6() -> c6
    boolean u(java.lang.String) -> u
    boolean c9() -> c9
    int db() -> db
    java.lang.String c8() -> c8
    double da() -> da
    double c7() -> c7
com.baidu.location.ax -> com.baidu.location.ax:
    int iA -> iA
    java.lang.String i -> i
    java.lang.String iy -> iy
    java.lang.String iB -> iB
    java.lang.String iD -> iD
    java.lang.String iF -> iF
    java.lang.String iC -> iC
    java.lang.String iM -> iM
    int iK -> iK
    int iJ -> iJ
    int iz -> iz
    int iI -> iI
    android.content.Context ix -> ix
    com.baidu.location.ax$a iL -> iL
    android.os.HandlerThread iH -> iH
    java.lang.Object iE -> iE
    com.baidu.location.ax iG -> iG
    com.baidu.location.ax for(android.content.Context) -> for
    void if(com.baidu.location.at,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> if
    void do(com.baidu.location.at) -> do
    void if(com.baidu.location.at) -> if
    void do(java.lang.String,boolean) -> do
    void if(java.util.List,com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> if
    long cs() -> cs
    void if(int,java.lang.String,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> if
    void if(int,java.lang.String[],com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> if
    void cq() -> cq
    void cn() -> cn
    void cr() -> cr
    int if(com.baidu.location.at,java.lang.String) -> if
    int do(java.util.List) -> do
    void cp() -> cp
    void co() -> co
    void if(com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener,int,java.lang.String) -> if
    void int(android.content.Context) -> int
    int do(android.content.Context) -> do
    void for(com.baidu.location.ax) -> for
    android.content.Context if(com.baidu.location.ax) -> if
    void if(com.baidu.location.ax,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener,int,java.lang.String) -> if
    com.baidu.location.ax$a do(com.baidu.location.ax) -> do
    void if(com.baidu.location.ax,int,java.lang.String,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> if
    void if(com.baidu.location.ax,int,java.lang.String[],com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> if
    int if(com.baidu.location.ax,com.baidu.location.at,java.lang.String) -> if
    int if(com.baidu.location.ax,java.util.List) -> if
com.baidu.location.ax$1 -> com.baidu.location.ax$1:
    com.baidu.location.at if -> if
    com.baidu.location.ax a -> a
    void run() -> run
com.baidu.location.ax$2 -> com.baidu.location.ax$2:
    com.baidu.location.at if -> if
    com.baidu.location.ax a -> a
    void run() -> run
com.baidu.location.ax$3 -> com.baidu.location.ax$3:
    com.baidu.location.ax a -> a
    void run() -> run
com.baidu.location.ax$a -> com.baidu.location.ax$a:
    int if -> if
    int do -> do
    int for -> for
    com.baidu.location.ax a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.ax$b -> com.baidu.location.ax$b:
    java.lang.String dR -> dR
    java.lang.String dP -> dP
    java.lang.String dU -> dU
    java.lang.String dQ -> dQ
    java.lang.String dW -> dW
    java.lang.String dS -> dS
    java.lang.String dN -> dN
    int dO -> dO
    com.baidu.location.at dX -> dX
    com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener dM -> dM
    int dV -> dV
    com.baidu.location.ax dT -> dT
    void X() -> X
    void do(boolean) -> do
    void al() -> al
com.baidu.location.ax$c -> com.baidu.location.ax$c:
    com.baidu.location.at do -> do
    java.lang.String if -> if
    com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener for -> for
    com.baidu.location.ax a -> a
    void run() -> run
com.baidu.location.ax$d -> com.baidu.location.ax$d:
    java.util.List if -> if
    com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener do -> do
    com.baidu.location.ax a -> a
    void run() -> run
com.baidu.location.ay -> com.baidu.location.ay:
    void if() -> if
    void a() -> a
com.baidu.location.az -> com.baidu.location.az:
    boolean for -> for
    java.lang.String if -> if
    com.baidu.location.az$a do -> do
    com.baidu.location.az a -> a
    com.baidu.location.az do() -> do
    void for() -> for
    void if() -> if
    java.lang.String a() -> a
    boolean int() -> int
    boolean a(com.baidu.location.az,boolean) -> a
    java.lang.String a(com.baidu.location.az,java.lang.String) -> a
    boolean a(com.baidu.location.az) -> a
com.baidu.location.az$a -> com.baidu.location.az$a:
    com.baidu.location.az a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.b -> com.baidu.location.b:
    boolean a -> a
com.baidu.location.b.a.a -> com.baidu.location.b.a.a:
    boolean a -> a
    java.lang.String if -> if
    java.lang.String if(android.content.Context) -> if
    java.lang.String a(android.content.Context) -> a
com.baidu.location.b.a.b -> com.baidu.location.b.a.b:
    java.lang.String do -> do
    boolean a -> a
    java.lang.String int -> int
    java.lang.String for -> for
    java.lang.String if -> if
    java.lang.String a(android.content.Context) -> a
    java.lang.String do(android.content.Context) -> do
    java.lang.String if(android.content.Context) -> if
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.baidu.location.b.a.b$a -> com.baidu.location.b.a.b$a:
    java.lang.String do -> do
    java.lang.String if -> if
    boolean a -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.location.b.a.b$a a(android.content.Context) -> a
com.baidu.location.b.a.c -> com.baidu.location.b.a.c:
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.location.b.b.a -> com.baidu.location.b.b.a:
    java.lang.String if -> if
    java.lang.String a -> a
    byte[] if(java.lang.String,java.lang.String,byte[]) -> if
    byte[] a(java.lang.String,java.lang.String,byte[]) -> a
com.baidu.location.b.b.b -> com.baidu.location.b.b.b:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.location.c -> com.baidu.location.c:
    boolean aL -> aL
    boolean a5 -> a5
    boolean an -> an
    int aq -> aq
    java.lang.String af -> af
    java.lang.String aU -> aU
    java.lang.String aw -> aw
    java.lang.String al -> al
    java.lang.String av -> av
    java.lang.String ao -> ao
    boolean aE -> aE
    boolean aI -> aI
    boolean as -> as
    java.lang.String ag -> ag
    java.lang.Process be -> be
    java.lang.String aF -> aF
    java.lang.String bc -> bc
    boolean aK -> aK
    int at -> at
    double aO -> aO
    double a3 -> a3
    double Y -> Y
    double au -> au
    int aN -> aN
    byte[] ar -> ar
    boolean bb -> bb
    int ap -> ap
    float bg -> bg
    float am -> am
    float aJ -> aJ
    float aY -> aY
    int ax -> ax
    int aP -> aP
    int a1 -> a1
    int ab -> ab
    int Z -> Z
    int a7 -> a7
    int ai -> ai
    float aH -> aH
    float aG -> aG
    float bd -> bd
    float aW -> aW
    int a2 -> a2
    float ad -> ad
    int aX -> aX
    float X -> X
    float aB -> aB
    float aA -> aA
    int az -> az
    int ay -> ay
    int aV -> aV
    boolean aj -> aj
    boolean ac -> ac
    int aZ -> aZ
    int a4 -> a4
    int aQ -> aQ
    long aR -> aR
    long a8 -> a8
    long aT -> aT
    long aS -> aS
    long a6 -> a6
    long bf -> bf
    int ak -> ak
    int ba -> ba
    int aa -> aa
    int ae -> ae
    float aM -> aM
    float aD -> aD
    float a0 -> a0
    int aC -> aC
    int a9 -> a9
    int ah -> ah
    int do(java.lang.String,java.lang.String,java.lang.String) -> do
    float if(java.lang.String,java.lang.String,java.lang.String) -> if
    double for(java.lang.String,java.lang.String,java.lang.String) -> for
    java.lang.String if(java.lang.String,java.lang.String,java.lang.String,double) -> if
    java.lang.String try() -> try
    java.lang.String if() -> if
    java.lang.String if(com.baidu.location.u$a,com.baidu.location.au$b,android.location.Location,java.lang.String,int) -> if
    java.lang.String if(com.baidu.location.u$a,com.baidu.location.au$b,android.location.Location,java.lang.String) -> if
    void else() -> else
    void char() -> char
    void do(java.lang.String,java.lang.String) -> do
    void if(java.lang.String,java.lang.String) -> if
    void if(java.lang.String) -> if
    boolean if(com.baidu.location.BDLocation) -> if
    void do(java.lang.String) -> do
    java.lang.String for() -> for
    java.lang.String int() -> int
    java.lang.String byte() -> byte
    java.lang.String new() -> new
    java.lang.String do() -> do
    java.lang.String case() -> case
    java.lang.String goto() -> goto
    java.lang.String long() -> long
com.baidu.location.d -> com.baidu.location.d:
    java.lang.String dd -> dd
    java.lang.String dc -> dc
    java.lang.String db -> db
    android.os.Handler da -> da
    com.baidu.location.d c9 -> c9
    com.baidu.location.d ac() -> ac
    void ae() -> ae
    android.os.Handler ab() -> ab
    void X() -> X
    void do(boolean) -> do
    void ad() -> ad
    boolean Z() -> Z
    void aa() -> aa
    boolean for(java.lang.String,java.lang.String) -> for
    void if(java.io.File,java.io.File) -> if
    void if(com.baidu.location.d) -> if
    boolean do(com.baidu.location.d) -> do
    void for(com.baidu.location.d) -> for
com.baidu.location.d$1 -> com.baidu.location.d$1:
    com.baidu.location.d a -> a
    void run() -> run
com.baidu.location.d$2 -> com.baidu.location.d$2:
    com.baidu.location.d a -> a
    void run() -> run
com.baidu.location.d$3 -> com.baidu.location.d$3:
    com.baidu.location.d a -> a
    void run() -> run
com.baidu.location.e -> com.baidu.location.e:
    java.lang.String new -> new
    int for -> for
    com.baidu.location.e if -> if
    int do -> do
    int a -> a
    int int -> int
    com.baidu.location.e if() -> if
    void a(int,long) -> a
    long a(int) -> a
    long do() -> do
    void do(long) -> do
    long a() -> a
    void if(long) -> if
    long for() -> for
    void a(long) -> a
com.baidu.location.f -> com.baidu.location.f:
    com.baidu.location.LLSInterface iN -> iN
    com.baidu.location.LLSInterface iP -> iP
    com.baidu.location.LLSInterface iQ -> iQ
    java.lang.String replaceFileName -> replaceFileName
    java.lang.String iO -> iO
    android.content.Context mC -> mC
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onDestroy() -> onDestroy
    float getFrameVersion() -> getFrameVersion
    java.lang.String getJarFileName() -> getJarFileName
    android.content.Context getServiceContext() -> getServiceContext
com.baidu.location.g -> com.baidu.location.g:
    boolean bu -> bu
    long br -> br
    long bq -> bq
    long bs -> bs
    com.baidu.location.g bt -> bt
    com.baidu.location.g h() -> h
    void i() -> i
    void try(java.lang.String) -> try
    long new(java.lang.String) -> new
com.baidu.location.h -> com.baidu.location.h:
    com.baidu.location.h a -> a
    com.baidu.location.h for() -> for
    void int() -> int
    void do() -> do
    void if() -> if
    void a() -> a
com.baidu.location.i -> com.baidu.location.i:
    void a(android.content.Context,android.app.PendingIntent,int) -> a
    void a(android.content.Context,android.app.PendingIntent) -> a
com.baidu.location.j -> com.baidu.location.j:
    double lm -> lm
    double li -> li
    boolean lf -> lf
    long lk -> lk
    double lc -> lc
    double ld -> ld
    int lg -> lg
    int lj -> lj
    com.baidu.location.j lh -> lh
    com.baidu.location.x lb -> lb
    com.baidu.location.x ln -> ln
    int le -> le
    int ll -> ll
    com.baidu.location.j dg() -> dg
    void df() -> df
    void dd() -> dd
    void if(com.baidu.location.u$a,com.baidu.location.au$b) -> if
    java.lang.String dc() -> dc
    void de() -> de
com.baidu.location.k -> com.baidu.location.k:
    com.baidu.location.k bx -> bx
    java.util.ArrayList bw -> bw
    boolean by -> by
    boolean bv -> bv
    com.baidu.location.k q() -> q
    void o() -> o
    boolean l() -> l
    void new(android.os.Message) -> new
    void do(android.os.Message) -> do
    boolean int(android.os.Message) -> int
    java.lang.String if(android.os.Message) -> if
    void if(com.baidu.location.BDLocation,int) -> if
    void do(com.baidu.location.BDLocation) -> do
    void byte(java.lang.String) -> byte
    void if(com.baidu.location.BDLocation,android.os.Message) -> if
    void j() -> j
    java.lang.String p() -> p
    int for(android.os.Message) -> for
    com.baidu.location.k$a if(android.os.Messenger) -> if
    void if(com.baidu.location.k$a) -> if
    void k() -> k
    void m() -> m
    void n() -> n
com.baidu.location.k$a -> com.baidu.location.k$a:
    java.lang.String int -> int
    android.os.Messenger for -> for
    com.baidu.location.LocationClientOption do -> do
    int if -> if
    com.baidu.location.k a -> a
    void a(com.baidu.location.BDLocation) -> a
    void a(com.baidu.location.BDLocation,int) -> a
    void if(com.baidu.location.BDLocation) -> if
    void a() -> a
    void if() -> if
    void a(int) -> a
    void a(int,java.lang.String,com.baidu.location.BDLocation) -> a
    void a(com.baidu.location.k$a,int) -> a
com.baidu.location.l -> com.baidu.location.l:
    java.lang.String bI -> bI
    java.lang.String b1 -> b1
    java.io.File bF -> bF
    java.io.File b9 -> b9
    int bM -> bM
    int bY -> bY
    int b7 -> b7
    long bA -> bA
    int b3 -> b3
    android.app.AlarmManager bK -> bK
    com.baidu.location.l$a ca -> ca
    android.app.PendingIntent bL -> bL
    android.content.Context bN -> bN
    long bZ -> bZ
    long[] bE -> bE
    int bJ -> bJ
    com.baidu.location.u$a bT -> bT
    java.lang.String bO -> bO
    java.lang.String bP -> bP
    int b5 -> b5
    boolean bH -> bH
    boolean bR -> bR
    boolean b6 -> b6
    android.os.Handler bC -> bC
    int bV -> bV
    boolean bG -> bG
    long bU -> bU
    int b4 -> b4
    long bS -> bS
    long bQ -> bQ
    long b2 -> b2
    java.lang.String bB -> bB
    boolean bD -> bD
    com.baidu.location.l$c bz -> bz
    java.util.ArrayList b0 -> b0
    java.util.ArrayList bX -> bX
    long b8 -> b8
    java.lang.String bW -> bW
    void v() -> v
    void w() -> w
    void if(boolean) -> if
    void u() -> u
    void r() -> r
    java.lang.String t() -> t
    boolean s() -> s
    boolean if(double,double) -> if
    android.os.Handler if(com.baidu.location.l) -> if
com.baidu.location.l$1 -> com.baidu.location.l$1:
    com.baidu.location.l a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.l$a -> com.baidu.location.l$a:
    com.baidu.location.l a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.l$b -> com.baidu.location.l$b:
    double do -> do
    double if -> if
    java.util.HashMap int -> int
    double for -> for
    com.baidu.location.l a -> a
    double a(com.baidu.location.l$b) -> a
    java.util.HashMap if() -> if
    double a() -> a
com.baidu.location.l$c -> com.baidu.location.l$c:
    boolean if -> if
    com.baidu.location.l a -> a
    void a(android.content.Context) -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.m -> com.baidu.location.m:
    java.lang.String do -> do
    int if -> if
    com.baidu.location.m a -> a
    com.baidu.location.m a(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.database.sqlite.SQLiteDatabase) -> a
com.baidu.location.n -> com.baidu.location.n:
    float W -> W
    java.lang.String U -> U
    int V -> V
com.baidu.location.o -> com.baidu.location.o:
    java.util.ArrayList dr -> dr
    boolean dm -> dm
    long dp -> dp
    long dq -> dq
    int dn -> dn
    android.os.Handler ds -> ds
    int dj -> dj
    com.baidu.location.o dl -> dl
    com.baidu.location.o$a dk -> dk
    int di -> di
    com.baidu.location.o ah() -> ah
    void do(int) -> do
    void X() -> X
    void do(boolean) -> do
    boolean for(boolean) -> for
    void ai() -> ai
    boolean ag() -> ag
    void if(com.baidu.location.o) -> if
    android.os.Handler do(com.baidu.location.o) -> do
com.baidu.location.o$1 -> com.baidu.location.o$1:
    com.baidu.location.o a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.o$a -> com.baidu.location.o$a:
    java.lang.String dh -> dh
    int df -> df
    boolean dg -> dg
    com.baidu.location.o de -> de
    void X() -> X
    void do(boolean) -> do
    boolean af() -> af
com.baidu.location.p -> com.baidu.location.p:
    boolean do(com.baidu.location.au$b) -> do
    int try(com.baidu.location.BDLocation) -> try
    void cm() -> cm
com.baidu.location.q -> com.baidu.location.q:
    java.util.ArrayList cv -> cv
    java.util.ArrayList cm -> cm
    java.util.ArrayList cB -> cB
    java.util.ArrayList cN -> cN
    java.util.ArrayList cx -> cx
    java.util.ArrayList cG -> cG
    java.lang.String cP -> cP
    java.lang.String cK -> cK
    java.lang.String cJ -> cJ
    java.lang.String cy -> cy
    java.lang.String cE -> cE
    int cc -> cc
    int cd -> cd
    int cI -> cI
    int cr -> cr
    int ct -> ct
    int cl -> cl
    java.io.File ck -> ck
    int ci -> ci
    int cM -> cM
    int ch -> ch
    int cw -> cw
    int co -> co
    int cg -> cg
    int cD -> cD
    int cz -> cz
    double cf -> cf
    double cC -> cC
    double cn -> cn
    double ce -> ce
    int cq -> cq
    int cj -> cj
    int cL -> cL
    android.location.Location cs -> cs
    android.location.Location cF -> cF
    android.location.Location cb -> cb
    com.baidu.location.au$b cu -> cu
    com.baidu.location.q$b cA -> cA
    com.baidu.location.q cO -> cO
    int cp -> cp
    long cH -> cH
    com.baidu.location.q y() -> y
    java.lang.String C() -> C
    void do(com.baidu.location.u$a,com.baidu.location.au$b,android.location.Location,java.lang.String) -> do
    void if(double,double,double,double) -> if
    boolean if(android.location.Location,boolean) -> if
    boolean if(android.location.Location) -> if
    boolean if(android.location.Location,com.baidu.location.au$b) -> if
    void A() -> A
    void B() -> B
    void F() -> F
    void goto(java.lang.String) -> goto
    void else(java.lang.String) -> else
    void void(java.lang.String) -> void
    int if(java.util.List,int) -> if
    boolean if(int,int,int,int,long) -> if
    void case(java.lang.String) -> case
    void char(java.lang.String) -> char
    void if(int,boolean) -> if
    boolean if(java.lang.String,java.util.List) -> if
    java.lang.String E() -> E
    void x() -> x
    java.lang.String if(int) -> if
    java.lang.String z() -> z
    void if(java.lang.String,int) -> if
    void if(java.lang.String,int,boolean) -> if
    void if(int,int) -> if
    void if(int,int,boolean) -> if
    void D() -> D
    void G() -> G
    void long(java.lang.String) -> long
    java.lang.String if(com.baidu.location.u$a,com.baidu.location.au$b,android.location.Location,java.lang.String,java.lang.String) -> if
com.baidu.location.q$a -> com.baidu.location.q$a:
    java.lang.String du -> du
    com.baidu.location.q dt -> dt
    void X() -> X
    void do(boolean) -> do
    void aj() -> aj
com.baidu.location.q$b -> com.baidu.location.q$b:
    boolean dw -> dw
    int dz -> dz
    int dy -> dy
    java.util.ArrayList dx -> dx
    com.baidu.location.q dv -> dv
    void X() -> X
    void do(boolean) -> do
    void ak() -> ak
com.baidu.location.r -> com.baidu.location.r:
    com.baidu.location.r cR -> cR
    com.baidu.location.l cQ -> cQ
    android.os.Handler cS -> cS
    com.baidu.location.r I() -> I
    void L() -> L
    void H() -> H
    android.os.Handler J() -> J
    void K() -> K
    void if(com.baidu.location.r) -> if
com.baidu.location.r$a -> com.baidu.location.r$a:
    com.baidu.location.r a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.s -> com.baidu.location.s:
    com.baidu.location.u$a cT -> cT
    com.baidu.location.au$b cU -> cU
    boolean cW -> cW
    java.text.SimpleDateFormat cV -> cV
    void N() -> N
    java.text.SimpleDateFormat M() -> M
com.baidu.location.s$a -> com.baidu.location.s$a:
    com.baidu.location.s dA -> dA
    void X() -> X
    void do(boolean) -> do
    void d(java.lang.String) -> d
com.baidu.location.t -> com.baidu.location.t:
    boolean c1 -> c1
    int c0 -> c0
    java.lang.String c5 -> c5
    int c7 -> c7
    java.lang.String cX -> cX
    int c8 -> c8
    org.apache.http.HttpEntity cY -> cY
    java.util.List cZ -> cZ
    java.lang.String c4 -> c4
    byte[] c3 -> c3
    java.lang.String c2 -> c2
    int c6 -> c6
    void X() -> X
    void do(boolean) -> do
    void U() -> U
    void R() -> R
    void V() -> V
    void P() -> P
    void Y() -> Y
    org.apache.http.client.HttpClient if(org.apache.http.params.HttpParams) -> if
    void O() -> O
    int T() -> T
    int if(android.content.Context,android.net.NetworkInfo) -> if
    boolean if(android.content.Context) -> if
    void if(com.baidu.location.t) -> if
    int Q() -> Q
    java.lang.String S() -> S
    int W() -> W
    boolean if(com.baidu.location.t,boolean) -> if
com.baidu.location.t$1 -> com.baidu.location.t$1:
    com.baidu.location.t a -> a
    void run() -> run
com.baidu.location.t$2 -> com.baidu.location.t$2:
    com.baidu.location.t a -> a
    void run() -> run
com.baidu.location.t$3 -> com.baidu.location.t$3:
    com.baidu.location.t a -> a
    void run() -> run
com.baidu.location.t$4 -> com.baidu.location.t$4:
    com.baidu.location.t a -> a
    void run() -> run
com.baidu.location.t$5 -> com.baidu.location.t$5:
    com.baidu.location.t a -> a
    void run() -> run
com.baidu.location.t$a -> com.baidu.location.t$a:
    javax.net.ssl.SSLContext a -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.baidu.location.t$a$1 -> com.baidu.location.t$a$1:
    com.baidu.location.t$a a -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.baidu.location.u -> com.baidu.location.u:
    com.baidu.location.u eo -> eo
    android.telephony.TelephonyManager d6 -> d6
    com.baidu.location.u$a ec -> ec
    com.baidu.location.u$a d9 -> d9
    java.util.List ek -> ek
    java.lang.String ee -> ee
    com.baidu.location.u$b el -> el
    boolean ea -> ea
    java.lang.reflect.Method em -> em
    java.lang.reflect.Method d8 -> d8
    java.lang.reflect.Method eh -> eh
    java.lang.reflect.Method d7 -> d7
    java.lang.reflect.Method ep -> ep
    java.lang.Class ei -> ei
    long eg -> eg
    int ej -> ej
    boolean en -> en
    boolean ef -> ef
    int ed -> ed
    int eb -> eb
    com.baidu.location.u au() -> au
    void ax() -> ax
    void as() -> as
    void ar() -> ar
    void ay() -> ay
    int aq() -> aq
    java.lang.String aw() -> aw
    boolean ap() -> ap
    com.baidu.location.u$a at() -> at
    void if(android.telephony.CellLocation) -> if
    int az() -> az
    long av() -> av
    com.baidu.location.u$a do(com.baidu.location.u) -> do
    java.util.List try(com.baidu.location.u) -> try
    int for(com.baidu.location.u) -> for
    int if(com.baidu.location.u,int) -> if
    int int(com.baidu.location.u) -> int
    boolean if(com.baidu.location.u) -> if
    android.telephony.TelephonyManager new(com.baidu.location.u) -> new
    void if(com.baidu.location.u,android.telephony.CellLocation) -> if
com.baidu.location.u$a -> com.baidu.location.u$a:
    int a -> a
    int for -> for
    int byte -> byte
    int case -> case
    int char -> char
    int do -> do
    long if -> if
    int int -> int
    char new -> new
    com.baidu.location.u try -> try
    boolean a(com.baidu.location.u$a) -> a
    boolean if() -> if
    boolean a() -> a
    boolean do() -> do
    boolean byte() -> byte
    boolean new() -> new
    java.lang.String case() -> case
    java.lang.String int() -> int
    java.lang.String toString() -> toString
    java.lang.String try() -> try
    java.lang.String for() -> for
com.baidu.location.u$b -> com.baidu.location.u$b:
    com.baidu.location.u a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.baidu.location.v -> com.baidu.location.v:
    com.baidu.location.v eU -> eU
    int eV -> eV
    com.baidu.location.BDLocation eX -> eX
    long eW -> eW
    com.baidu.location.aj$a eY -> eY
    com.baidu.location.v aN() -> aN
    void long(android.os.Message) -> long
    void void(android.os.Message) -> void
    void aM() -> aM
    void byte(android.os.Message) -> byte
    void aA() -> aA
com.baidu.location.w -> com.baidu.location.w:
    java.lang.String if(android.content.Context) -> if
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
com.baidu.location.w$a -> com.baidu.location.w$a:
    java.lang.String a(byte[]) -> a
com.baidu.location.x -> com.baidu.location.x:
    long if -> if
    int a -> a
    boolean add(java.lang.Object) -> add
com.baidu.location.y -> com.baidu.location.y:
    com.baidu.location.y fm -> fm
    java.lang.String fc -> fc
    java.io.File e2 -> e2
    int eZ -> eZ
    int e8 -> e8
    int fg -> fg
    int fj -> fj
    int ff -> ff
    int fh -> fh
    int e1 -> e1
    int e3 -> e3
    java.lang.StringBuffer e0 -> e0
    boolean e7 -> e7
    int fd -> fd
    int fl -> fl
    long e6 -> e6
    long e5 -> e5
    long fn -> fn
    double fa -> fa
    double fb -> fb
    int e4 -> e4
    int e9 -> e9
    int fe -> fe
    java.lang.String fi -> fi
    boolean fk -> fk
    com.baidu.location.y aR() -> aR
    void aS() -> aS
    void aV() -> aV
    boolean do(android.location.Location) -> do
    boolean if(android.location.Location,int,int) -> if
    boolean aU() -> aU
    boolean i(java.lang.String) -> i
    java.lang.String for(int) -> for
    void aP() -> aP
    void aQ() -> aQ
    java.lang.String aT() -> aT
    boolean aO() -> aO
    boolean if(int,int,int) -> if
com.baidu.location.z -> com.baidu.location.z:
    int fZ -> fZ
    long fV -> fV
    int f4 -> f4
    int fU -> fU
    int fK -> fK
    double fI -> fI
    com.baidu.location.z f5 -> f5
    android.content.Context fR -> fR
    android.location.LocationManager fC -> fC
    android.location.Location ga -> ga
    com.baidu.location.z$b f3 -> f3
    com.baidu.location.z$c f8 -> f8
    android.location.GpsStatus fx -> fx
    com.baidu.location.z$a fF -> fF
    int fT -> fT
    long fO -> fO
    long fL -> fL
    boolean fD -> fD
    boolean f0 -> f0
    java.lang.String f9 -> f9
    boolean f7 -> f7
    long fS -> fS
    long gc -> gc
    java.lang.String fW -> fW
    java.lang.String gg -> gg
    java.io.File f6 -> f6
    android.os.Handler fA -> fA
    int gb -> gb
    int fB -> fB
    int fX -> fX
    int fG -> fG
    int f1 -> f1
    int gd -> gd
    android.location.Location fE -> fE
    android.location.Location fN -> fN
    android.location.Location fY -> fY
    android.location.Location fQ -> fQ
    long f2 -> f2
    long gh -> gh
    long ge -> ge
    long fP -> fP
    java.lang.StringBuilder fH -> fH
    java.lang.String fM -> fM
    int gf -> gf
    int fz -> fz
    java.util.HashMap fJ -> fJ
    byte[] fy -> fy
    com.baidu.location.z bc() -> bc
    void a2() -> a2
    void if(java.lang.String,android.location.Location) -> if
    void ba() -> ba
    void bb() -> bb
    void a4() -> a4
    java.lang.String a3() -> a3
    void int(boolean) -> int
    java.lang.String a6() -> a6
    java.lang.String case(android.location.Location) -> case
    java.lang.String aX() -> aX
    android.location.Location a0() -> a0
    boolean a1() -> a1
    boolean aZ() -> aZ
    boolean aY() -> aY
    boolean if(android.location.Location,android.location.Location,boolean) -> if
    void int(android.location.Location) -> int
    void for(android.location.Location) -> for
    void if(double,double,float) -> if
    void new(boolean) -> new
    java.lang.String byte(android.location.Location) -> byte
    java.lang.String new(android.location.Location) -> new
    void try(android.location.Location) -> try
    void a8() -> a8
    java.lang.String if(android.location.GpsSatellite,java.util.HashMap) -> if
    int if(java.util.HashMap) -> if
    java.lang.String a5() -> a5
    double[] if(java.util.List) -> if
    double[] do(double,double) -> do
    double[] for(double,double) -> for
    int if(com.baidu.location.aw,int) -> if
    boolean a9() -> a9
    void do(com.baidu.location.z,android.location.Location) -> do
    com.baidu.location.z$a for(com.baidu.location.z) -> for
    void if(com.baidu.location.z,java.lang.String,android.location.Location) -> if
    boolean case(com.baidu.location.z) -> case
    long for(com.baidu.location.z,long) -> for
    android.os.Handler byte(com.baidu.location.z) -> byte
    long do(com.baidu.location.z,long) -> do
    void if(com.baidu.location.z,boolean) -> if
    void if(com.baidu.location.z,android.location.Location) -> if
    boolean do(com.baidu.location.z,boolean) -> do
    long if(com.baidu.location.z,long) -> if
    android.location.LocationManager if(com.baidu.location.z) -> if
    android.location.GpsStatus do(com.baidu.location.z) -> do
    android.location.GpsStatus if(com.baidu.location.z,android.location.GpsStatus) -> if
    java.lang.StringBuilder if(java.lang.StringBuilder) -> if
    int do(com.baidu.location.z,int) -> do
    int if(com.baidu.location.z,int) -> if
    java.util.HashMap do(com.baidu.location.z,java.util.HashMap) -> do
    int int(com.baidu.location.z) -> int
    java.util.HashMap new(com.baidu.location.z) -> new
    java.lang.String if(com.baidu.location.z,android.location.GpsSatellite,java.util.HashMap) -> if
    java.lang.StringBuilder a7() -> a7
    int int(int) -> int
    int if(com.baidu.location.z,java.util.HashMap) -> if
    long char(com.baidu.location.z) -> char
    int try(com.baidu.location.z) -> try
    int if(com.baidu.location.z,com.baidu.location.aw,int) -> if
    java.lang.String n(java.lang.String) -> n
com.baidu.location.z$1 -> com.baidu.location.z$1:
    com.baidu.location.z a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.z$a -> com.baidu.location.z$a:
    long if -> if
    long a -> a
    int char -> char
    boolean try -> try
    boolean byte -> byte
    java.util.List case -> case
    java.lang.String for -> for
    java.lang.String new -> new
    java.lang.String do -> do
    com.baidu.location.z int -> int
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
    void a(java.lang.String) -> a
com.baidu.location.z$b -> com.baidu.location.z$b:
    com.baidu.location.z a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.location.z$c -> com.baidu.location.z$c:
    long if -> if
    com.baidu.location.z a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.bairuitech.anychat.AnyChatAudioHelper -> com.bairuitech.anychat.a:
    android.media.AudioTrack mAudioTrack -> a
    android.media.AudioRecord mAudioRecord -> b
    com.bairuitech.anychat.AnyChatAudioHelper$PlayAudioThread mPlayAudioThread -> c
    boolean mPlayThreadExitFlag -> d
    int mMinPlayBufSize -> e
    boolean mAudioPlayReleased -> f
    com.bairuitech.anychat.AnyChatAudioHelper$RecordAudioThread mRecordAudioThread -> g
    boolean mRecordThreadExitFlag -> h
    int mMinRecordBufSize -> i
    boolean mAudioRecordReleased -> j
    android.content.Context mContext -> k
    int mProfile -> l
    int mPlayMode -> m
    void SetContext(android.content.Context) -> a
    int InitAudioPlayer(int) -> a
    void ReleaseAudioPlayer() -> a
    int InitAudioRecorder(int) -> b
    void ReleaseAudioRecorder() -> b
    android.media.AudioTrack access$0(com.bairuitech.anychat.AnyChatAudioHelper) -> a
    boolean access$1(com.bairuitech.anychat.AnyChatAudioHelper) -> b
    android.media.AudioRecord access$2(com.bairuitech.anychat.AnyChatAudioHelper) -> c
    boolean access$3(com.bairuitech.anychat.AnyChatAudioHelper) -> d
com.bairuitech.anychat.AnyChatAudioHelper$PlayAudioThread -> com.bairuitech.anychat.b:
    com.bairuitech.anychat.AnyChatAudioHelper this$0 -> a
    void run() -> run
com.bairuitech.anychat.AnyChatAudioHelper$RecordAudioThread -> com.bairuitech.anychat.c:
    com.bairuitech.anychat.AnyChatAudioHelper this$0 -> a
    void run() -> run
com.bairuitech.anychat.AnyChatBaseEvent -> com.bairuitech.anychat.d:
    void OnAnyChatConnectMessage(boolean) -> a
    void OnAnyChatLoginMessage(int,int) -> a
    void OnAnyChatEnterRoomMessage(int,int) -> b
    void OnAnyChatOnlineUserMessage(int,int) -> c
    void OnAnyChatUserAtRoomMessage(int,boolean) -> a
    void OnAnyChatLinkCloseMessage(int) -> a
com.bairuitech.anychat.AnyChatCameraHelper -> com.bairuitech.anychat.e:
    android.hardware.Camera mCamera -> c
    boolean bIfPreview -> d
    boolean bNeedCapture -> e
    int iCurrentCameraId -> f
    android.view.SurfaceHolder currentHolder -> g
    int mVideoPixfmt -> h
    int iCaptureBuffers -> i
    android.content.Context mContext -> j
    int mCameraOrientation -> k
    int mCameraFacing -> l
    int mDeviceOrientation -> m
    int CAMERA_FACING_BACK -> a
    int CAMERA_FACING_FRONT -> b
    void SetContext(android.content.Context) -> a
    void initCamera() -> e
    void CaptureControl(boolean) -> a
    int GetCameraNumber() -> a
    void CameraAutoFocus() -> b
    void SwitchCamera() -> c
    void SelectVideoCapture(int) -> a
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    int getDeviceOrientation() -> f
    void setCameraDisplayOrientation() -> d
    boolean access$0(com.bairuitech.anychat.AnyChatCameraHelper) -> a
    android.hardware.Camera access$1(com.bairuitech.anychat.AnyChatCameraHelper) -> b
com.bairuitech.anychat.AnyChatCameraHelper$1 -> com.bairuitech.anychat.f:
    com.bairuitech.anychat.AnyChatCameraHelper this$0 -> a
    void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
com.bairuitech.anychat.AnyChatCoreSDK -> com.bairuitech.anychat.AnyChatCoreSDK:
    com.bairuitech.anychat.AnyChatBaseEvent baseEvent -> a
    com.bairuitech.anychat.AnyChatStateChgEvent stateChgEvent -> b
    com.bairuitech.anychat.AnyChatPrivateChatEvent privateChatEvent -> c
    com.bairuitech.anychat.AnyChatTextMsgEvent textMsgEvent -> d
    com.bairuitech.anychat.AnyChatTransDataEvent transDataEvent -> e
    com.bairuitech.anychat.AnyChatVideoCallEvent videoCallEvent -> f
    com.bairuitech.anychat.AnyChatUserInfoEvent userInfoEvent -> g
    com.bairuitech.anychat.AnyChatRecordEvent recordEvent -> h
    com.bairuitech.anychat.AnyChatCoreSDK mAnyChat -> n
    com.bairuitech.anychat.AnyChatCoreSDK$MainHandler mHandler -> i
    com.bairuitech.anychat.AnyChatAudioHelper mAudioHelper -> j
    com.bairuitech.anychat.AnyChatCameraHelper mCameraHelper -> k
    com.bairuitech.anychat.AnyChatSensorHelper mSensorHelper -> l
    com.bairuitech.anychat.AnyChatVideoHelper mVideoHelper -> m
    int HANDLE_TYPE_NOTIFYMSG -> o
    int HANDLE_TYPE_TEXTMSG -> p
    int HANDLE_TYPE_TRANSFILE -> q
    int HANDLE_TYPE_TRANSBUF -> r
    int HANDLE_TYPE_TRANSBUFEX -> s
    int HANDLE_TYPE_SDKFILTER -> t
    int HANDLE_TYPE_VIDEOCALL -> u
    int HANDLE_TYPE_RECORD -> v
    com.bairuitech.anychat.AnyChatCoreSDK getInstance(android.content.Context) -> a
    void SetBaseEvent(com.bairuitech.anychat.AnyChatBaseEvent) -> a
    int RegisterNotify() -> RegisterNotify
    int InitSDK(int,int) -> InitSDK
    int Connect(java.lang.String,int) -> Connect
    int Login(java.lang.String,java.lang.String) -> Login
    int EnterRoom(int,java.lang.String) -> EnterRoom
    int LeaveRoom(int) -> LeaveRoom
    int Logout() -> Logout
    int[] GetOnlineUser() -> GetOnlineUser
    int UserCameraControl(int,int) -> UserCameraControl
    int UserSpeakControl(int,int) -> UserSpeakControl
    java.lang.String QueryUserStateString(int,int) -> QueryUserStateString
    int QueryUserStateInt(int,int) -> QueryUserStateInt
    int GetCameraState(int) -> GetCameraState
    int GetSpeakState(int) -> GetSpeakState
    int SetSDKOptionInt(int,int) -> SetSDKOptionInt
    int GetSDKOptionInt(int) -> GetSDKOptionInt
    byte[] FetchAudioPlayBuffer(int) -> FetchAudioPlayBuffer
    java.lang.String GetUserName(int) -> a
    java.lang.String[] EnumVideoCapture() -> EnumVideoCapture
    int SelectVideoCapture(java.lang.String) -> SelectVideoCapture
    java.lang.String GetCurVideoCapture() -> GetCurVideoCapture
    int SetInputVideoFormat(int,int,int,int,int) -> SetInputVideoFormat
    int InputVideoData(byte[],int,int) -> InputVideoData
    int SetInputAudioFormat(int,int,int,int) -> SetInputAudioFormat
    int InputAudioData(byte[],int,int) -> InputAudioData
    void OnNotifyMsg(int,int,int) -> a
    int access$0() -> a
    int access$1() -> b
    int access$2() -> c
    int access$3() -> d
    int access$4() -> e
    int access$5() -> f
    int access$6() -> g
    int access$7() -> h
com.bairuitech.anychat.AnyChatCoreSDK$MainHandler -> com.bairuitech.anychat.g:
    java.lang.ref.WeakReference mAnyChat -> a
    void handleMessage(android.os.Message) -> handleMessage
com.bairuitech.anychat.AnyChatOrientationEventListener -> com.bairuitech.anychat.h:
    void onOrientationChanged(int) -> onOrientationChanged
com.bairuitech.anychat.AnyChatPrivateChatEvent -> com.bairuitech.anychat.i:
    void OnAnyChatPrivateRequestMessage(int,int) -> a
    void OnAnyChatPrivateEchoMessage(int,int) -> b
    void OnAnyChatPrivateExitMessage(int,int) -> c
com.bairuitech.anychat.AnyChatRecordEvent -> com.bairuitech.anychat.j:
    void OnAnyChatRecordEvent(int,java.lang.String,int,int,int,java.lang.String) -> a
    void OnAnyChatSnapShotEvent(int,java.lang.String,int,int,java.lang.String) -> a
com.bairuitech.anychat.AnyChatSensorHelper -> com.bairuitech.anychat.k:
    com.bairuitech.anychat.AnyChatOrientationEventListener orientationListener -> a
    float LastXSpead -> b
    float LastYSpead -> c
    float LastZSpead -> d
    boolean bCameraNeedFocus -> e
    java.util.Date LastSportTime -> f
    void InitSensor(android.content.Context) -> a
    void DestroySensor() -> a
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.bairuitech.anychat.AnyChatStateChgEvent -> com.bairuitech.anychat.l:
    void OnAnyChatMicStateChgMessage(int,boolean) -> a
    void OnAnyChatCameraStateChgMessage(int,int) -> a
    void OnAnyChatChatModeChgMessage(int,boolean) -> b
    void OnAnyChatActiveStateChgMessage(int,int) -> b
    void OnAnyChatP2PConnectStateMessage(int,int) -> c
com.bairuitech.anychat.AnyChatTextMsgEvent -> com.bairuitech.anychat.m:
    void OnAnyChatTextMessage(int,int,boolean,java.lang.String) -> a
com.bairuitech.anychat.AnyChatTransDataEvent -> com.bairuitech.anychat.n:
    void OnAnyChatTransFile(int,java.lang.String,java.lang.String,int,int,int,int) -> a
    void OnAnyChatTransBuffer(int,byte[],int) -> a
    void OnAnyChatTransBufferEx(int,byte[],int,int,int,int) -> a
    void OnAnyChatSDKFilterData(byte[],int) -> a
com.bairuitech.anychat.AnyChatUserInfoEvent -> com.bairuitech.anychat.o:
    void OnAnyChatUserInfoUpdate(int,int) -> a
    void OnAnyChatFriendStatus(int,int) -> b
com.bairuitech.anychat.AnyChatVideoCallEvent -> com.bairuitech.anychat.p:
    void OnAnyChatVideoCallEvent(int,int,int,int,int,java.lang.String) -> a
com.bairuitech.anychat.AnyChatVideoHelper -> com.bairuitech.anychat.q:
    int MAX_VIDEO_NUM -> b
    com.bairuitech.anychat.VideoRenderer[] render -> a
    int bindVideo(android.view.SurfaceHolder) -> a
    void SetVideoUser(int,int) -> a
com.bairuitech.anychat.VideoRenderer -> com.bairuitech.anychat.r:
    android.graphics.Bitmap bitmap -> a
    android.view.SurfaceHolder surfaceHolder -> b
    android.graphics.Rect srcRect -> c
    android.graphics.Rect dstRect -> d
    float dstBottomScale -> e
    float dstRightScale -> f
    float max_cut_imgscale -> g
    int mUserid -> h
    int GetUserId() -> a
    void SetUserId(int) -> a
    void changeDestRect(int,int) -> a
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
com.example.zf_pad.BaseActivity -> com.example.zf_pad.a:
    android.content.Context mContext -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
    java.lang.String getDeviceInfo(android.content.Context) -> a
com.example.zf_pad.Config -> com.example.zf_pad.b:
    int countShopCar -> a
    java.lang.String checkVersion -> b
    int ROWS -> c
    java.lang.String token -> d
    java.lang.Boolean shopcar -> e
    java.lang.Boolean AderssManger -> f
    java.lang.Boolean AderssMangerBACK -> g
    java.lang.String INDEXIMG -> h
    java.lang.String getmes -> i
    java.lang.String MSGEDLONE -> j
    java.lang.String MSGEDLALL -> k
    java.lang.String MSGREAD -> l
    int GOODID -> m
    int UserID -> n
    boolean iszd -> o
    java.lang.String FINDPASS -> p
    java.lang.String goodcomment -> q
    com.example.zf_pad.entity.GoodinfoEntity gfe -> r
    java.util.ArrayList celist -> s
    java.util.ArrayList celist2 -> t
    java.util.ArrayList tDates -> u
    java.util.ArrayList other_rate -> v
    java.util.List pub -> w
    java.util.List single -> x
    java.util.List myList -> y
    java.util.List list -> z
    int ScreenWidth -> A
    int ScreenHeight -> B
    java.lang.String suportare -> C
    java.lang.String suportcl -> D
    java.lang.String tv_sqkt -> E
    int goodId -> F
    int gid -> G
    int GoodComment -> H
    java.lang.String CITY -> I
    boolean iszl -> J
    boolean isFRIST -> K
    boolean isExit -> L
    boolean isNew -> M
    boolean support_type -> N
    int cityId -> O
    int MyTab -> P
    java.util.List son -> Q
    com.example.zf_pad.entity.PortSon myson -> R
    int portindex -> S
    int lx -> T
    boolean canzl -> U
    java.lang.String apply -> V
    boolean ismer -> W
    java.util.List mCities -> X
    android.content.SharedPreferences mySharedPreferences -> ae
    java.lang.String channelId -> Y
    java.lang.String notificationTitle -> Z
    java.lang.String notificationMsgID -> aa
    boolean isFirstCreateMain -> ab
    java.lang.String changePhoneNum -> ac
    java.lang.String changeemail -> ad
    boolean CheckIsLogin(android.content.Context) -> a
    void GOODPICLIST(android.content.Context,int,com.example.zf_pad.trade.common.HttpCallback) -> a
com.example.zf_pad.MyApplication -> com.example.zf_pad.MyApplication:
    android.widget.TextView mLocationResult -> a
    com.example.zf_pad.MyApplication mInstance -> j
    com.baidu.location.LocationClient mLocationClient -> b
    com.baidu.location.GeofenceClient mGeofenceClient -> c
    com.example.zf_pad.MyApplication$MyLocationListener mMyLocationListener -> d
    android.os.Vibrator mVibrator -> e
    java.lang.Boolean isLogin -> f
    java.lang.String versionCode -> k
    int notifyId -> l
    java.lang.Boolean isSelect -> m
    int CITYID -> n
    java.util.List mCities -> o
    java.util.List comfirmList -> g
    java.lang.String token -> p
    com.loopj.android.http.AsyncHttpClient client -> h
    java.util.List mList -> q
    com.example.zf_pad.entity.UserEntity NewUser -> i
    android.content.SharedPreferences mySharedPreferences -> r
    boolean hasOrderPaid -> s
    java.util.ArrayList historyList -> t
    int getCITYID() -> a
    void setCITYID(int) -> a
    java.util.List getComfirmList() -> b
    com.loopj.android.http.AsyncHttpClient getClient() -> c
    void addActivity(android.app.Activity) -> a
    void onCreate() -> onCreate
    com.example.zf_pad.MyApplication getInstance() -> d
    void logMsg(java.lang.String) -> a
    void hideSoftKeyboard(android.app.Activity) -> b
    com.nostra13.universalimageloader.core.DisplayImageOptions getDisplayOption() -> e
    void initImageLoader(android.content.Context) -> a
    void setHasOrderPaid(boolean) -> a
    java.util.ArrayList getHistoryList() -> f
    void clearHistoryForPay() -> g
    java.util.List access$0(com.example.zf_pad.MyApplication) -> a
com.example.zf_pad.MyApplication$MyLocationListener -> com.example.zf_pad.c:
    com.example.zf_pad.MyApplication this$0 -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.example.zf_pad.MyPushMessageReceiver -> com.example.zf_pad.MyPushMessageReceiver:
    java.lang.String TAG -> a
    void onBind(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onBind
    void onMessage(android.content.Context,java.lang.String,java.lang.String) -> onMessage
    void onNotificationClicked(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> onNotificationClicked
    void onSetTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onSetTags
    void onDelTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onDelTags
    void onListTags(android.content.Context,int,java.util.List,java.lang.String) -> onListTags
    void onUnbind(android.content.Context,int,java.lang.String) -> onUnbind
    void updateContent(android.content.Context,java.lang.String) -> a
com.example.zf_pad.Posport -> com.example.zf_pad.d:
    int[] brands_id -> a
    int[] category -> b
    int[] pay_channel_id -> c
    int[] pay_card_id -> d
    int[] trade_type_id -> e
    int[] sale_slip_id -> f
    int[] tDate -> g
    int has_purchase -> h
    double minPrice -> i
    double maxPrice -> j
com.example.zf_pad.Utils -> com.example.zf_pad.e:
    java.lang.String logStringCache -> a
    java.lang.String getMetaValue(android.content.Context,java.lang.String) -> a
    void setBind(android.content.Context,boolean) -> a
com.example.zf_pad.aadpter.AddressManagerAdapter -> com.example.zf_pad.a.a:
    java.util.List dataadress -> b
    android.content.Context context -> c
    android.view.LayoutInflater mInflater -> d
    int pp -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void notifyDataSetChanged() -> notifyDataSetChanged
com.example.zf_pad.aadpter.AddressManagerAdapter$1 -> com.example.zf_pad.a.b:
    com.example.zf_pad.aadpter.AddressManagerAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.AddressManagerAdapter$ViewHoldel -> com.example.zf_pad.a.c:
    android.widget.TextView consignee -> a
    android.widget.TextView area -> b
    android.widget.TextView detailadress -> c
    android.widget.TextView zipcode -> d
    android.widget.TextView phone -> e
    android.widget.TextView defau -> f
    android.widget.TextView change -> g
com.example.zf_pad.aadpter.ApplySearch -> com.example.zf_pad.a.d:
    java.util.List dataser -> a
    android.content.Context context -> b
    android.view.LayoutInflater mInflater -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.zf_pad.aadpter.ApplySearch$ViewHoldel -> com.example.zf_pad.a.e:
    android.widget.TextView tv_ternumber -> a
    android.widget.TextView tv_consumption -> b
    android.widget.TextView tv_conmoney -> c
    android.widget.TextView tv_traaccounts -> d
    android.widget.TextView tv_tramoney -> e
    android.widget.TextView tv_repayment -> f
    android.widget.TextView tv_repmoney -> g
com.example.zf_pad.aadpter.ButtonGridviewAdapter -> com.example.zf_pad.a.f:
    android.content.Context context -> b
    java.util.List list -> c
    android.view.LayoutInflater inflater -> d
    com.example.zf_pad.aadpter.ButtonGridviewAdapter$ViewHolder holder -> e
    int index -> a
    void setIndex(int) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.zf_pad.aadpter.ButtonGridviewAdapter$ViewHolder -> com.example.zf_pad.a.g:
    android.widget.TextView button_gri_tv -> a
    com.example.zf_pad.aadpter.ButtonGridviewAdapter this$0 -> b
com.example.zf_pad.aadpter.ChooseAdressAdapter -> com.example.zf_pad.a.h:
    android.content.Context context -> a
    java.util.List list -> b
    android.view.LayoutInflater inflater -> c
    com.example.zf_pad.aadpter.ChooseAdressAdapter$ViewHolder holder -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void chang() -> a
com.example.zf_pad.aadpter.ChooseAdressAdapter$ViewHolder -> com.example.zf_pad.a.i:
    android.widget.TextView tv_title -> a
    android.widget.TextView tv_tel -> b
    android.widget.TextView tv_adress -> c
    android.widget.TextView tv_yb -> d
    android.widget.TextView tv_city -> e
    android.widget.TextView tv_default -> f
    android.widget.LinearLayout ll_isshow -> g
    com.example.zf_pad.aadpter.ChooseAdressAdapter this$0 -> h
com.example.zf_pad.aadpter.CommentAdapter -> com.example.zf_pad.a.j:
    android.content.Context context -> a
    java.util.List list -> b
    android.view.LayoutInflater inflater -> c
    int state -> d
    com.example.zf_pad.aadpter.CommentAdapter$ViewHolder holder -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.util.List access$0(com.example.zf_pad.aadpter.CommentAdapter) -> a
com.example.zf_pad.aadpter.CommentAdapter$1 -> com.example.zf_pad.a.k:
    com.example.zf_pad.aadpter.CommentAdapter this$0 -> a
    void onRatingChanged(android.widget.RatingBar,float,boolean) -> onRatingChanged
com.example.zf_pad.aadpter.CommentAdapter$2 -> com.example.zf_pad.a.l:
    com.example.zf_pad.aadpter.CommentAdapter this$0 -> a
    int val$position -> b
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.example.zf_pad.aadpter.CommentAdapter$ViewHolder -> com.example.zf_pad.a.m:
    android.widget.TextView content -> a
    android.widget.TextView content1 -> b
    android.widget.TextView content2 -> c
    android.widget.TextView tip -> d
    android.widget.EditText item_et -> e
    android.widget.RatingBar rb -> f
    com.example.zf_pad.aadpter.CommentAdapter this$0 -> g
com.example.zf_pad.aadpter.GoodCommentAdapter -> com.example.zf_pad.a.n:
    android.content.Context context -> a
    java.util.List list -> b
    android.view.LayoutInflater inflater -> c
    com.example.zf_pad.aadpter.GoodCommentAdapter$ViewHolder holder -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.zf_pad.aadpter.GoodCommentAdapter$ViewHolder -> com.example.zf_pad.a.o:
    android.widget.TextView tv_name -> a
    android.widget.TextView tv_ccc -> b
    android.widget.TextView tv_time -> c
    android.widget.RatingBar si_rt_msxf -> d
    com.example.zf_pad.aadpter.GoodCommentAdapter this$0 -> e
com.example.zf_pad.aadpter.GridviewAdapter -> com.example.zf_pad.a.p:
    android.content.Context context -> a
    java.util.List list -> b
    android.view.LayoutInflater inflater -> c
    com.example.zf_pad.aadpter.GridviewAdapter$ViewHolder holder -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.zf_pad.aadpter.GridviewAdapter$ViewHolder -> com.example.zf_pad.a.q:
    android.widget.TextView title -> a
    android.widget.TextView ys -> b
    android.widget.TextView tv_price -> c
    com.example.zf_pad.aadpter.GridviewAdapter this$0 -> d
com.example.zf_pad.aadpter.HuilvAdapter -> com.example.zf_pad.a.r:
    android.content.Context context -> a
    java.util.List list -> b
    java.util.List list1 -> c
    java.util.List list2 -> d
    android.view.LayoutInflater inflater -> e
    com.example.zf_pad.aadpter.HuilvAdapter$ViewHolder holder -> f
    int type -> g
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.zf_pad.aadpter.HuilvAdapter$ViewHolder -> com.example.zf_pad.a.s:
    android.widget.TextView tv_name -> a
    android.widget.TextView tv_price -> b
    android.widget.TextView tv_dec -> c
    com.example.zf_pad.aadpter.HuilvAdapter this$0 -> d
com.example.zf_pad.aadpter.MessageAdapter -> com.example.zf_pad.a.t:
    android.content.Context context -> a
    java.util.List list -> b
    android.view.LayoutInflater inflater -> c
    com.example.zf_pad.aadpter.MessageAdapter$ViewHolder holder -> d
    int type -> e
    android.widget.CheckBox cb_all -> f
    int flag -> g
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.util.List access$0(com.example.zf_pad.aadpter.MessageAdapter) -> a
    int access$1(com.example.zf_pad.aadpter.MessageAdapter) -> b
    void access$2(com.example.zf_pad.aadpter.MessageAdapter,int) -> a
    android.widget.CheckBox access$3(com.example.zf_pad.aadpter.MessageAdapter) -> c
com.example.zf_pad.aadpter.MessageAdapter$1 -> com.example.zf_pad.a.u:
    com.example.zf_pad.aadpter.MessageAdapter this$0 -> a
    int val$position -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.zf_pad.aadpter.MessageAdapter$ViewHolder -> com.example.zf_pad.a.v:
    android.widget.TextView tv_title -> a
    android.widget.TextView tv_time -> b
    android.widget.CheckBox item_cb -> c
    com.example.zf_pad.aadpter.MessageAdapter this$0 -> d
com.example.zf_pad.aadpter.OrderAdapter -> com.example.zf_pad.a.w:
    android.content.Context context -> a
    java.util.List list -> b
    android.view.LayoutInflater inflater -> c
    com.example.zf_pad.aadpter.OrderAdapter$ViewHolder holder -> d
    com.example.zf_pad.fragment.Mine_Dd dd -> e
    java.text.DecimalFormat df -> f
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    double check(java.lang.String) -> a
    android.content.Context access$0(com.example.zf_pad.aadpter.OrderAdapter) -> a
    com.example.zf_pad.fragment.Mine_Dd access$1(com.example.zf_pad.aadpter.OrderAdapter) -> b
    java.util.List access$2(com.example.zf_pad.aadpter.OrderAdapter) -> c
com.example.zf_pad.aadpter.OrderAdapter$1 -> com.example.zf_pad.a.x:
    com.example.zf_pad.aadpter.OrderAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
    com.example.zf_pad.aadpter.OrderAdapter access$0(com.example.zf_pad.aadpter.OrderAdapter$1) -> a
com.example.zf_pad.aadpter.OrderAdapter$1$1 -> com.example.zf_pad.a.y:
    com.example.zf_pad.aadpter.OrderAdapter$1 this$1 -> a
    com.example.zf_pad.util.AlertDialog val$ad -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.OrderAdapter$1$2 -> com.example.zf_pad.a.z:
    com.example.zf_pad.aadpter.OrderAdapter$1 this$1 -> a
    com.example.zf_pad.util.AlertDialog val$ad -> b
    android.view.View val$v -> c
    void onClick(android.view.View) -> onClick
    com.example.zf_pad.aadpter.OrderAdapter$1 access$0(com.example.zf_pad.aadpter.OrderAdapter$1$2) -> a
com.example.zf_pad.aadpter.OrderAdapter$1$2$1 -> com.example.zf_pad.a.aa:
    com.example.zf_pad.aadpter.OrderAdapter$1$2 this$2 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.aadpter.OrderAdapter$2 -> com.example.zf_pad.a.ab:
    com.example.zf_pad.aadpter.OrderAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.OrderAdapter$ViewHolder -> com.example.zf_pad.a.ac:
    android.widget.TextView tv_goodnum -> a
    android.widget.TextView tv_price -> b
    android.widget.TextView content -> c
    android.widget.TextView tv_ddbh -> d
    android.widget.TextView tv_time -> e
    android.widget.TextView tv_status -> f
    android.widget.TextView tv_sum -> g
    android.widget.TextView tv_psf -> h
    android.widget.TextView tv_pay -> i
    android.widget.TextView tv_gtd -> j
    android.widget.TextView content2 -> k
    android.widget.TextView content_pp -> l
    android.widget.TextView isshow -> m
    android.widget.LinearLayout ll_ishow -> r
    android.widget.Button btn_cancle -> n
    android.widget.Button btn_pay -> o
    android.widget.ImageView im -> p
    com.example.zf_pad.aadpter.OrderAdapter this$0 -> q
    void access$0(com.example.zf_pad.aadpter.OrderAdapter$ViewHolder,android.widget.LinearLayout) -> a
    android.widget.LinearLayout access$1(com.example.zf_pad.aadpter.OrderAdapter$ViewHolder) -> a
com.example.zf_pad.aadpter.OrderDetail_PosAdapter -> com.example.zf_pad.a.ad:
    android.content.Context context -> a
    java.util.List list -> b
    android.view.LayoutInflater inflater -> c
    int state -> d
    java.text.DecimalFormat df -> e
    com.example.zf_pad.aadpter.OrderDetail_PosAdapter$ViewHolder holder -> f
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.zf_pad.aadpter.OrderDetail_PosAdapter$ViewHolder -> com.example.zf_pad.a.ae:
    android.widget.TextView content -> a
    android.widget.TextView tv_price -> b
    android.widget.TextView tv_x -> c
    android.widget.TextView tv_brand -> d
    android.widget.TextView tv_td -> e
    android.widget.TextView ktfy -> f
    android.widget.Button btn_ishow -> g
    android.widget.ImageView im -> h
    com.example.zf_pad.aadpter.OrderDetail_PosAdapter this$0 -> i
com.example.zf_pad.aadpter.PosAdapter -> com.example.zf_pad.a.af:
    android.content.Context context -> b
    java.util.List list -> c
    android.view.LayoutInflater inflater -> d
    com.example.zf_pad.aadpter.PosAdapter$ViewHolder holder -> e
    int type -> a
    java.text.DecimalFormat df -> f
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.zf_pad.aadpter.PosAdapter$ViewHolder -> com.example.zf_pad.a.ag:
    android.widget.TextView title -> a
    android.widget.TextView ys -> b
    android.widget.TextView tv_price -> c
    android.widget.TextView content1 -> d
    android.widget.TextView tv_td -> e
    android.widget.ImageView img_type -> f
    android.widget.ImageView im -> g
    com.example.zf_pad.aadpter.PosAdapter this$0 -> h
com.example.zf_pad.aadpter.PosAdapter1 -> com.example.zf_pad.a.ah:
    android.content.Context context -> a
    java.util.List list -> b
    android.view.LayoutInflater inflater -> c
    com.example.zf_pad.aadpter.PosAdapter1$ViewHolder holder -> d
    int listSize -> e
    java.text.DecimalFormat df -> f
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.content.Context access$0(com.example.zf_pad.aadpter.PosAdapter1) -> a
    java.util.List access$1(com.example.zf_pad.aadpter.PosAdapter1) -> b
com.example.zf_pad.aadpter.PosAdapter1$1 -> com.example.zf_pad.a.ai:
    com.example.zf_pad.aadpter.PosAdapter1 this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.PosAdapter1$2 -> com.example.zf_pad.a.aj:
    com.example.zf_pad.aadpter.PosAdapter1 this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.PosAdapter1$3 -> com.example.zf_pad.a.ak:
    com.example.zf_pad.aadpter.PosAdapter1 this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.PosAdapter1$4 -> com.example.zf_pad.a.al:
    com.example.zf_pad.aadpter.PosAdapter1 this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.PosAdapter1$ViewHolder -> com.example.zf_pad.a.am:
    android.widget.TextView title -> a
    android.widget.TextView ys -> b
    android.widget.TextView tv_price -> c
    android.widget.TextView tv_td -> d
    android.widget.TextView title2 -> e
    android.widget.TextView ys2 -> f
    android.widget.TextView tv_price2 -> g
    android.widget.TextView tv_td2 -> h
    android.widget.TextView title3 -> i
    android.widget.TextView ys3 -> j
    android.widget.TextView tv_price3 -> k
    android.widget.TextView tv_td3 -> l
    android.widget.TextView title4 -> m
    android.widget.TextView ys4 -> n
    android.widget.TextView tv_price4 -> o
    android.widget.TextView tv_td4 -> p
    android.widget.LinearLayout ll_m1 -> q
    android.widget.LinearLayout ll_m2 -> r
    android.widget.LinearLayout ll_m3 -> s
    android.widget.LinearLayout ll_m4 -> t
    android.widget.ImageView im1 -> u
    android.widget.ImageView im2 -> v
    android.widget.ImageView im3 -> w
    android.widget.ImageView im4 -> x
    com.example.zf_pad.aadpter.PosAdapter1 this$0 -> y
com.example.zf_pad.aadpter.PosPortAdapter -> com.example.zf_pad.a.an:
    android.content.Context context -> b
    java.util.List list -> c
    java.util.List glist -> d
    android.view.LayoutInflater inflater -> e
    android.widget.ExpandableListView listView -> a
    void setListView(android.widget.ExpandableListView) -> a
    void change() -> a
    int getGroupCount() -> getGroupCount
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getGroup(int) -> getGroup
    java.lang.Object getChild(int,int) -> getChild
    long getGroupId(int) -> getGroupId
    long getChildId(int,int) -> getChildId
    boolean hasStableIds() -> hasStableIds
    boolean isChildSelectable(int,int) -> isChildSelectable
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    java.util.List access$0(com.example.zf_pad.aadpter.PosPortAdapter) -> a
    java.util.List access$1(com.example.zf_pad.aadpter.PosPortAdapter) -> b
    android.content.Context access$2(com.example.zf_pad.aadpter.PosPortAdapter) -> c
com.example.zf_pad.aadpter.PosPortAdapter$1 -> com.example.zf_pad.a.ao:
    com.example.zf_pad.aadpter.PosPortAdapter this$0 -> a
    int val$groupPosition -> b
    int val$childPosition -> c
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.PosPortAdapter$10 -> com.example.zf_pad.a.ap:
    com.example.zf_pad.aadpter.PosPortAdapter this$0 -> a
    int val$groupPosition -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.PosPortAdapter$11 -> com.example.zf_pad.a.aq:
    com.example.zf_pad.aadpter.PosPortAdapter this$0 -> a
    int val$groupPosition -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.PosPortAdapter$12 -> com.example.zf_pad.a.ar:
    com.example.zf_pad.aadpter.PosPortAdapter this$0 -> a
    int val$groupPosition -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.PosPortAdapter$13 -> com.example.zf_pad.a.as:
    com.example.zf_pad.aadpter.PosPortAdapter this$0 -> a
    int val$groupPosition -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.PosPortAdapter$14 -> com.example.zf_pad.a.at:
    com.example.zf_pad.aadpter.PosPortAdapter this$0 -> a
    int val$groupPosition -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.zf_pad.aadpter.PosPortAdapter$15 -> com.example.zf_pad.a.au:
    com.example.zf_pad.aadpter.PosPortAdapter this$0 -> a
    int val$groupPosition -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.zf_pad.aadpter.PosPortAdapter$16 -> com.example.zf_pad.a.av:
    com.example.zf_pad.aadpter.PosPortAdapter this$0 -> a
    int val$groupPosition -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.zf_pad.aadpter.PosPortAdapter$17 -> com.example.zf_pad.a.aw:
    com.example.zf_pad.aadpter.PosPortAdapter this$0 -> a
    int val$groupPosition -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.zf_pad.aadpter.PosPortAdapter$2 -> com.example.zf_pad.a.ax:
    com.example.zf_pad.aadpter.PosPortAdapter this$0 -> a
    int val$groupPosition -> b
    int val$childPosition -> c
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.PosPortAdapter$3 -> com.example.zf_pad.a.ay:
    com.example.zf_pad.aadpter.PosPortAdapter this$0 -> a
    int val$groupPosition -> b
    int val$childPosition -> c
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.PosPortAdapter$4 -> com.example.zf_pad.a.az:
    com.example.zf_pad.aadpter.PosPortAdapter this$0 -> a
    int val$groupPosition -> b
    int val$childPosition -> c
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.PosPortAdapter$5 -> com.example.zf_pad.a.ba:
    com.example.zf_pad.aadpter.PosPortAdapter this$0 -> a
    int val$groupPosition -> b
    int val$childPosition -> c
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.zf_pad.aadpter.PosPortAdapter$6 -> com.example.zf_pad.a.bb:
    com.example.zf_pad.aadpter.PosPortAdapter this$0 -> a
    int val$childPosition -> b
    int val$childSize -> c
    int val$childListSize -> d
    int val$groupPosition -> e
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.zf_pad.aadpter.PosPortAdapter$7 -> com.example.zf_pad.a.bc:
    com.example.zf_pad.aadpter.PosPortAdapter this$0 -> a
    int val$childPosition -> b
    int val$childSize -> c
    int val$childListSize -> d
    int val$groupPosition -> e
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.zf_pad.aadpter.PosPortAdapter$8 -> com.example.zf_pad.a.bd:
    com.example.zf_pad.aadpter.PosPortAdapter this$0 -> a
    int val$childPosition -> b
    int val$childSize -> c
    int val$childListSize -> d
    int val$groupPosition -> e
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.zf_pad.aadpter.PosPortAdapter$9 -> com.example.zf_pad.a.be:
    com.example.zf_pad.aadpter.PosPortAdapter this$0 -> a
    boolean val$isExpanded -> b
    int val$groupPosition -> c
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.RecordAdapter -> com.example.zf_pad.a.bf:
    android.content.Context context -> a
    java.util.List list -> b
    android.view.LayoutInflater inflater -> c
    com.example.zf_pad.aadpter.RecordAdapter$ViewHolder holder1 -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.zf_pad.aadpter.RecordAdapter$ViewHolder -> com.example.zf_pad.a.bg:
    android.widget.TextView content1 -> a
    android.widget.TextView tv_tme -> b
    android.widget.TextView tv_name -> c
    com.example.zf_pad.aadpter.RecordAdapter this$0 -> d
com.example.zf_pad.aadpter.ScoreAdapter -> com.example.zf_pad.a.bh:
    java.util.List datasco -> a
    android.content.Context context -> b
    android.view.LayoutInflater mInflater -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.zf_pad.aadpter.ScoreAdapter$ViewHoldel -> com.example.zf_pad.a.bi:
    android.widget.TextView number -> a
    android.widget.TextView time -> b
    android.widget.TextView gotscore -> c
    android.widget.TextView scoretype -> d
com.example.zf_pad.aadpter.SearchAdapter -> com.example.zf_pad.a.bj:
    android.content.Context context -> b
    java.util.List list -> c
    android.view.LayoutInflater inflater -> d
    android.widget.TextView buttonText -> a
    com.example.zf_pad.aadpter.SearchAdapter$ViewHolder holder -> e
    int selectedPosition -> f
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.zf_pad.aadpter.SearchAdapter$ViewHolder -> com.example.zf_pad.a.bk:
    android.widget.TextView search_item_tv -> a
    com.example.zf_pad.aadpter.SearchAdapter this$0 -> b
com.example.zf_pad.aadpter.SelectStateAdapter -> com.example.zf_pad.a.bl:
    java.util.List dictIndustries -> a
    android.view.LayoutInflater inflater -> b
    android.content.Context mContext -> c
    int selectPosition -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.zf_pad.aadpter.SelectStateAdapter$ViewHolder -> com.example.zf_pad.a.bm:
    android.widget.TextView nameTextView -> a
    android.widget.RelativeLayout type_pop -> b
com.example.zf_pad.aadpter.ShopAdapter -> com.example.zf_pad.a.bn:
    java.util.List datasho -> b
    android.content.Context context -> c
    android.view.LayoutInflater mInflater -> d
    android.app.Activity a -> e
    int pp -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.app.Activity access$0(com.example.zf_pad.aadpter.ShopAdapter) -> a
com.example.zf_pad.aadpter.ShopAdapter$1 -> com.example.zf_pad.a.bo:
    com.example.zf_pad.aadpter.ShopAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.ShopAdapter$1$1 -> com.example.zf_pad.a.bp:
    com.example.zf_pad.aadpter.ShopAdapter$1 this$1 -> a
    com.example.zf_pad.util.AlertDialog val$ad -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.ShopAdapter$1$2 -> com.example.zf_pad.a.bq:
    com.example.zf_pad.aadpter.ShopAdapter$1 this$1 -> a
    int val$position -> b
    com.example.zf_pad.util.AlertDialog val$ad -> c
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.ShopAdapter$2 -> com.example.zf_pad.a.br:
    com.example.zf_pad.aadpter.ShopAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.ShopAdapter$ViewHoldel -> com.example.zf_pad.a.bs:
    android.widget.TextView tv_shopname -> a
    android.widget.Button btn_delect -> b
com.example.zf_pad.aadpter.ShopcarAdapter -> com.example.zf_pad.a.bt:
    android.content.Context context -> a
    java.util.List list -> b
    android.view.LayoutInflater inflater -> c
    com.example.zf_pad.aadpter.ShopcarAdapter$ViewHolder holder -> d
    android.widget.TextView howMoney -> e
    android.widget.TextView tv_gj -> f
    android.app.Activity activity -> g
    int currentHowMoney -> h
    android.widget.CheckBox selectAll_cb -> i
    com.example.zf_pad.util.AlertDialog ad -> j
    boolean isSelectAll -> k
    android.view.View$OnClickListener onClick -> l
    android.view.View$OnClickListener onClickListenerAll -> m
    int flag -> n
    android.widget.CompoundButton$OnCheckedChangeListener onCheckedChangeListener -> o
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void del(int,int) -> a
    void changeContent(int,int) -> b
    void computeMoney() -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.util.List access$0(com.example.zf_pad.aadpter.ShopcarAdapter) -> a
    void access$1(com.example.zf_pad.aadpter.ShopcarAdapter) -> b
    boolean access$2(com.example.zf_pad.aadpter.ShopcarAdapter) -> c
    void access$3(com.example.zf_pad.aadpter.ShopcarAdapter,boolean) -> a
    android.widget.CheckBox access$4(com.example.zf_pad.aadpter.ShopcarAdapter) -> d
    int access$5(com.example.zf_pad.aadpter.ShopcarAdapter) -> e
    void access$6(com.example.zf_pad.aadpter.ShopcarAdapter,int) -> a
    android.content.Context access$7(com.example.zf_pad.aadpter.ShopcarAdapter) -> f
    void access$8(com.example.zf_pad.aadpter.ShopcarAdapter,com.example.zf_pad.util.AlertDialog) -> a
    com.example.zf_pad.util.AlertDialog access$9(com.example.zf_pad.aadpter.ShopcarAdapter) -> g
com.example.zf_pad.aadpter.ShopcarAdapter$1 -> com.example.zf_pad.a.bu:
    com.example.zf_pad.aadpter.ShopcarAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.ShopcarAdapter$2 -> com.example.zf_pad.a.bv:
    com.example.zf_pad.aadpter.ShopcarAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.ShopcarAdapter$3 -> com.example.zf_pad.a.bw:
    com.example.zf_pad.aadpter.ShopcarAdapter this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.zf_pad.aadpter.ShopcarAdapter$4 -> com.example.zf_pad.a.bx:
    com.example.zf_pad.aadpter.ShopcarAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
    com.example.zf_pad.aadpter.ShopcarAdapter access$0(com.example.zf_pad.aadpter.ShopcarAdapter$4) -> a
com.example.zf_pad.aadpter.ShopcarAdapter$4$1 -> com.example.zf_pad.a.by:
    com.example.zf_pad.aadpter.ShopcarAdapter$4 this$1 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.ShopcarAdapter$4$2 -> com.example.zf_pad.a.bz:
    com.example.zf_pad.aadpter.ShopcarAdapter$4 this$1 -> a
    int val$id -> b
    android.view.View val$v -> c
    void onClick(android.view.View) -> onClick
com.example.zf_pad.aadpter.ShopcarAdapter$5 -> com.example.zf_pad.a.ca:
    com.example.zf_pad.aadpter.ShopcarAdapter this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.example.zf_pad.aadpter.ShopcarAdapter$6 -> com.example.zf_pad.a.cb:
    com.example.zf_pad.aadpter.ShopcarAdapter this$0 -> a
    int val$position -> b
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.example.zf_pad.aadpter.ShopcarAdapter$7 -> com.example.zf_pad.a.cc:
    com.example.zf_pad.aadpter.ShopcarAdapter this$0 -> a
    int val$position -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.aadpter.ShopcarAdapter$8 -> com.example.zf_pad.a.cd:
    com.example.zf_pad.aadpter.ShopcarAdapter this$0 -> a
    int val$index -> b
    int val$cont -> c
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.aadpter.ShopcarAdapter$ViewHolder -> com.example.zf_pad.a.ce:
    int position -> h
    android.widget.CheckBox checkBox -> i
    android.widget.TextView title -> j
    android.widget.LinearLayout ll_select -> k
    android.widget.TextView retail_price -> l
    android.widget.EditText buyCountEdit -> m
    android.widget.TextView showCountText -> n
    android.widget.TextView reduce -> o
    android.widget.TextView add -> p
    android.widget.TextView Model_number -> a
    android.widget.TextView Model_numberTextView -> b
    android.widget.TextView wayName -> c
    android.widget.TextView del -> d
    android.widget.TextView wayNameTextView -> e
    android.widget.ImageView evevt_img -> f
    com.example.zf_pad.aadpter.ShopcarAdapter this$0 -> g
    int access$0(com.example.zf_pad.aadpter.ShopcarAdapter$ViewHolder) -> a
    android.widget.EditText access$1(com.example.zf_pad.aadpter.ShopcarAdapter$ViewHolder) -> b
    android.widget.TextView access$2(com.example.zf_pad.aadpter.ShopcarAdapter$ViewHolder) -> c
    void access$3(com.example.zf_pad.aadpter.ShopcarAdapter$ViewHolder,int) -> a
    void access$4(com.example.zf_pad.aadpter.ShopcarAdapter$ViewHolder,android.widget.CheckBox) -> a
    android.widget.CheckBox access$5(com.example.zf_pad.aadpter.ShopcarAdapter$ViewHolder) -> d
    void access$6(com.example.zf_pad.aadpter.ShopcarAdapter$ViewHolder,android.widget.TextView) -> a
    void access$7(com.example.zf_pad.aadpter.ShopcarAdapter$ViewHolder,android.widget.LinearLayout) -> a
    void access$8(com.example.zf_pad.aadpter.ShopcarAdapter$ViewHolder,android.widget.TextView) -> b
    void access$9(com.example.zf_pad.aadpter.ShopcarAdapter$ViewHolder,android.widget.EditText) -> a
    void access$10(com.example.zf_pad.aadpter.ShopcarAdapter$ViewHolder,android.widget.TextView) -> c
    void access$11(com.example.zf_pad.aadpter.ShopcarAdapter$ViewHolder,android.widget.TextView) -> d
    android.widget.TextView access$12(com.example.zf_pad.aadpter.ShopcarAdapter$ViewHolder) -> e
    android.widget.TextView access$13(com.example.zf_pad.aadpter.ShopcarAdapter$ViewHolder) -> f
    void access$14(com.example.zf_pad.aadpter.ShopcarAdapter$ViewHolder,android.widget.TextView) -> e
    android.widget.TextView access$15(com.example.zf_pad.aadpter.ShopcarAdapter$ViewHolder) -> g
    android.widget.TextView access$16(com.example.zf_pad.aadpter.ShopcarAdapter$ViewHolder) -> h
com.example.zf_pad.aadpter.ShopcarOrderAdapter -> com.example.zf_pad.a.cf:
    android.content.Context context -> a
    java.util.List list -> b
    android.view.LayoutInflater inflater -> c
    com.example.zf_pad.aadpter.ShopcarOrderAdapter$ViewHolder holder -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.zf_pad.aadpter.ShopcarOrderAdapter$ViewHolder -> com.example.zf_pad.a.cg:
    android.widget.TextView title -> h
    android.widget.TextView retail_price -> i
    android.widget.TextView Model_number -> a
    android.widget.TextView showCountText -> b
    android.widget.TextView wayName -> c
    android.widget.TextView content2 -> d
    android.widget.TextView wayNameTextView -> e
    android.widget.ImageView evevt_img -> f
    com.example.zf_pad.aadpter.ShopcarOrderAdapter this$0 -> g
    void access$0(com.example.zf_pad.aadpter.ShopcarOrderAdapter$ViewHolder,android.widget.TextView) -> a
    void access$1(com.example.zf_pad.aadpter.ShopcarOrderAdapter$ViewHolder,android.widget.TextView) -> b
    android.widget.TextView access$2(com.example.zf_pad.aadpter.ShopcarOrderAdapter$ViewHolder) -> a
    android.widget.TextView access$3(com.example.zf_pad.aadpter.ShopcarOrderAdapter$ViewHolder) -> b
com.example.zf_pad.activity.AdressEdit -> com.example.zf_pad.activity.AdressEdit:
    android.widget.Button adresslist -> b
    android.widget.EditText tv1 -> c
    android.widget.EditText tv2 -> d
    android.widget.EditText tv3 -> e
    android.widget.EditText tv5 -> f
    int Cityid -> g
    java.lang.String name -> h
    java.lang.String tel -> i
    java.lang.String stringcode -> j
    java.lang.String address -> k
    int isDefault -> l
    android.widget.TextView tv4 -> m
    android.widget.CheckBox item_cb -> n
    android.widget.LinearLayout mi_r4 -> o
    int id -> p
    int pp -> q
    android.widget.TextView search -> r
    int[] ids -> s
    android.widget.TextView tv_title -> t
    android.widget.Button close -> u
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    java.lang.Boolean check() -> b
    void getData() -> c
    void initView() -> d
    void changeData() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.lang.Boolean access$0(com.example.zf_pad.activity.AdressEdit) -> a
    void access$1(com.example.zf_pad.activity.AdressEdit) -> b
    int[] access$2(com.example.zf_pad.activity.AdressEdit) -> c
    int access$3(com.example.zf_pad.activity.AdressEdit) -> d
    void access$4(com.example.zf_pad.activity.AdressEdit,int) -> a
com.example.zf_pad.activity.AdressEdit$1 -> com.example.zf_pad.activity.a:
    com.example.zf_pad.activity.AdressEdit this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.AdressEdit$2 -> com.example.zf_pad.activity.b:
    com.example.zf_pad.activity.AdressEdit this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.AdressEdit$3 -> com.example.zf_pad.activity.c:
    com.example.zf_pad.activity.AdressEdit this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.AdressEdit$4 -> com.example.zf_pad.activity.d:
    com.example.zf_pad.activity.AdressEdit this$0 -> a
    void onClick(android.view.View) -> onClick
    com.example.zf_pad.activity.AdressEdit access$0(com.example.zf_pad.activity.AdressEdit$4) -> a
com.example.zf_pad.activity.AdressEdit$4$1 -> com.example.zf_pad.activity.e:
    com.example.zf_pad.activity.AdressEdit$4 this$1 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.AdressEdit$5 -> com.example.zf_pad.activity.f:
    com.example.zf_pad.activity.AdressEdit this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.zf_pad.activity.AdressEdit$6 -> com.example.zf_pad.activity.g:
    com.example.zf_pad.activity.AdressEdit this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.AdressEdit$7 -> com.example.zf_pad.activity.h:
    com.example.zf_pad.activity.AdressEdit this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.ChangeEmail -> com.example.zf_pad.activity.ChangeEmail:
    android.widget.EditText login_edit_name -> g
    android.widget.EditText login_edit_name1 -> h
    android.widget.EditText login_edit_name2 -> i
    android.widget.Button btn_exit -> j
    android.widget.TextView tv_msg -> k
    android.widget.TextView desTextView -> l
    android.widget.TextView tv_TextView -> m
    java.lang.String phoneOld -> b
    java.lang.String phoneCode -> c
    java.lang.String phone2 -> d
    java.lang.String getPhoneCode -> e
    android.widget.LinearLayout login_Layout_name2 -> n
    int Countmun -> o
    java.lang.Boolean isRun -> p
    int index -> q
    java.lang.String name -> r
    java.lang.Runnable runnable -> s
    android.os.Handler handler -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    boolean check() -> a
    int access$0(com.example.zf_pad.activity.ChangeEmail) -> a
    void access$1(com.example.zf_pad.activity.ChangeEmail,java.lang.Boolean) -> a
    android.widget.TextView access$2(com.example.zf_pad.activity.ChangeEmail) -> b
    void access$3(com.example.zf_pad.activity.ChangeEmail,int) -> a
    java.lang.Runnable access$4(com.example.zf_pad.activity.ChangeEmail) -> c
com.example.zf_pad.activity.ChangeEmail$1 -> com.example.zf_pad.activity.i:
    com.example.zf_pad.activity.ChangeEmail this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.activity.ChangeEmail$2 -> com.example.zf_pad.activity.j:
    com.example.zf_pad.activity.ChangeEmail this$0 -> a
    void run() -> run
com.example.zf_pad.activity.ChangeEmail$3 -> com.example.zf_pad.activity.k:
    com.example.zf_pad.activity.ChangeEmail this$0 -> a
    void onSuccess(com.example.zf_pad.entity.ChangeEmailEntity) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.activity.ChangeEmail$3$1 -> com.example.zf_pad.activity.l:
    com.example.zf_pad.activity.ChangeEmail$3 this$1 -> a
com.example.zf_pad.activity.ChangeEmailTwo -> com.example.zf_pad.activity.ChangeEmailTwo:
    android.widget.EditText login_edit_name -> g
    android.widget.EditText login_edit_name1 -> h
    android.widget.EditText login_edit_name2 -> i
    android.widget.Button btn_exit -> j
    android.widget.TextView tv_msg -> k
    java.lang.String phoneOld -> b
    java.lang.String phoneCode -> c
    java.lang.String phone2 -> d
    java.lang.String getPhoneCode -> e
    android.widget.LinearLayout login_Layout_name2 -> l
    int Countmun -> m
    java.lang.Boolean isRun -> n
    java.lang.Runnable runnable -> o
    android.os.Handler handler -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    boolean check() -> a
    int access$0(com.example.zf_pad.activity.ChangeEmailTwo) -> a
    void access$1(com.example.zf_pad.activity.ChangeEmailTwo,java.lang.Boolean) -> a
    android.widget.TextView access$2(com.example.zf_pad.activity.ChangeEmailTwo) -> b
    void access$3(com.example.zf_pad.activity.ChangeEmailTwo,int) -> a
    java.lang.Runnable access$4(com.example.zf_pad.activity.ChangeEmailTwo) -> c
com.example.zf_pad.activity.ChangeEmailTwo$1 -> com.example.zf_pad.activity.m:
    com.example.zf_pad.activity.ChangeEmailTwo this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.activity.ChangeEmailTwo$2 -> com.example.zf_pad.activity.n:
    com.example.zf_pad.activity.ChangeEmailTwo this$0 -> a
    void run() -> run
com.example.zf_pad.activity.ChangeEmailTwo$3 -> com.example.zf_pad.activity.o:
    com.example.zf_pad.activity.ChangeEmailTwo this$0 -> a
    void onSuccess(com.example.zf_pad.entity.ChangeEmailEntity) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.activity.ChangeEmailTwo$3$1 -> com.example.zf_pad.activity.p:
    com.example.zf_pad.activity.ChangeEmailTwo$3 this$1 -> a
com.example.zf_pad.activity.ChangePhone -> com.example.zf_pad.activity.ChangePhone:
    android.widget.EditText login_edit_name -> g
    android.widget.EditText login_edit_name1 -> h
    android.widget.EditText login_edit_name2 -> i
    android.widget.Button btn_exit -> j
    android.widget.TextView tv_msg -> k
    android.widget.TextView desTextView -> l
    android.widget.TextView tv_TextView -> m
    java.lang.String phoneOld -> b
    java.lang.String phoneCode -> c
    java.lang.String phone2 -> d
    java.lang.String getPhoneCode -> e
    android.widget.LinearLayout login_Layout_name2 -> n
    int Countmun -> o
    java.lang.Boolean isRun -> p
    int index -> q
    java.lang.String name -> r
    java.lang.Runnable runnable -> s
    android.os.Handler handler -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    boolean check() -> a
    int access$0(com.example.zf_pad.activity.ChangePhone) -> a
    void access$1(com.example.zf_pad.activity.ChangePhone,java.lang.Boolean) -> a
    android.widget.TextView access$2(com.example.zf_pad.activity.ChangePhone) -> b
    void access$3(com.example.zf_pad.activity.ChangePhone,int) -> a
    java.lang.Runnable access$4(com.example.zf_pad.activity.ChangePhone) -> c
com.example.zf_pad.activity.ChangePhone$1 -> com.example.zf_pad.activity.q:
    com.example.zf_pad.activity.ChangePhone this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.activity.ChangePhone$2 -> com.example.zf_pad.activity.r:
    com.example.zf_pad.activity.ChangePhone this$0 -> a
    void run() -> run
com.example.zf_pad.activity.ChangePhone$3 -> com.example.zf_pad.activity.s:
    com.example.zf_pad.activity.ChangePhone this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.ChangePhoneTwo -> com.example.zf_pad.activity.ChangePhoneTwo:
    android.widget.EditText login_edit_name -> g
    android.widget.EditText login_edit_name1 -> h
    android.widget.EditText login_edit_name2 -> i
    android.widget.Button btn_exit -> j
    android.widget.TextView tv_msg -> k
    java.lang.String phoneOld -> b
    java.lang.String phoneCode -> c
    java.lang.String phone2 -> d
    java.lang.String getPhoneCode -> e
    android.widget.LinearLayout login_Layout_name2 -> l
    int Countmun -> m
    java.lang.Boolean isRun -> n
    java.lang.Runnable runnable -> o
    android.os.Handler handler -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    boolean check() -> a
    int access$0(com.example.zf_pad.activity.ChangePhoneTwo) -> a
    void access$1(com.example.zf_pad.activity.ChangePhoneTwo,java.lang.Boolean) -> a
    android.widget.TextView access$2(com.example.zf_pad.activity.ChangePhoneTwo) -> b
    void access$3(com.example.zf_pad.activity.ChangePhoneTwo,int) -> a
    java.lang.Runnable access$4(com.example.zf_pad.activity.ChangePhoneTwo) -> c
com.example.zf_pad.activity.ChangePhoneTwo$1 -> com.example.zf_pad.activity.t:
    com.example.zf_pad.activity.ChangePhoneTwo this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.activity.ChangePhoneTwo$2 -> com.example.zf_pad.activity.u:
    com.example.zf_pad.activity.ChangePhoneTwo this$0 -> a
    void run() -> run
com.example.zf_pad.activity.ChangePhoneTwo$3 -> com.example.zf_pad.activity.v:
    com.example.zf_pad.activity.ChangePhoneTwo this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.Comment -> com.example.zf_pad.activity.Comment:
    com.example.zf_pad.util.ScrollViewWithListView lv -> d
    android.widget.Button btn_pay -> e
    java.util.List as -> b
    com.example.zf_pad.aadpter.CommentAdapter posAdapter -> f
    java.util.List goodlist -> c
    int id -> g
    android.widget.Button bt_close -> h
    void onCreate(android.os.Bundle) -> onCreate
    void submit() -> a
com.example.zf_pad.activity.Comment$1 -> com.example.zf_pad.activity.w:
    com.example.zf_pad.activity.Comment this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.Comment$2 -> com.example.zf_pad.activity.x:
    com.example.zf_pad.activity.Comment this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.Comment$3 -> com.example.zf_pad.activity.y:
    com.example.zf_pad.activity.Comment this$0 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.activity.ConfirmOrder -> com.example.zf_pad.activity.ConfirmOrder:
    java.util.List myList -> b
    java.util.List moreList -> c
    com.example.zf_pad.util.ScrollViewWithListView pos_lv -> f
    java.util.List poslist -> d
    android.widget.Button btn_pay -> g
    java.util.List comfirmList -> h
    java.lang.String comment -> i
    java.lang.String invoice_info -> j
    int addressId -> k
    int is_need_invoice -> l
    int invoice_type -> m
    int hj -> e
    android.os.Handler handler -> n
    android.widget.EditText ed_fp -> o
    android.widget.CheckBox ck -> p
    com.example.zf_pad.aadpter.ChooseAdressAdapter myAdapter -> q
    com.example.zf_pad.util.ScrollViewWithListView sclist -> r
    com.example.zf_pad.util.ScrollViewWithListView shop_lsit -> s
    com.example.zf_pad.aadpter.ShopcarOrderAdapter shopadapter -> t
    android.widget.TextView tv_count -> u
    int index -> v
    android.widget.TextView tv_hj -> w
    android.widget.TextView tv_totle -> x
    android.widget.EditText et_comment -> y
    android.widget.Button bt_add -> z
    android.widget.Button bt_mange -> A
    android.widget.LinearLayout order_isshow -> B
    android.widget.TextView ktf -> C
    android.widget.TextView hktf -> D
    java.text.DecimalFormat df -> E
    void onCreate(android.os.Bundle) -> onCreate
    void getData() -> b
    void initView() -> c
    void getpay() -> a
    void onClick(android.view.View) -> onClick
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void access$0(com.example.zf_pad.activity.ConfirmOrder,int) -> a
    int access$1(com.example.zf_pad.activity.ConfirmOrder) -> a
    com.example.zf_pad.aadpter.ChooseAdressAdapter access$2(com.example.zf_pad.activity.ConfirmOrder) -> b
    void access$3(com.example.zf_pad.activity.ConfirmOrder,int) -> b
    android.widget.LinearLayout access$4(com.example.zf_pad.activity.ConfirmOrder) -> c
    void access$5(com.example.zf_pad.activity.ConfirmOrder,int) -> c
com.example.zf_pad.activity.ConfirmOrder$1 -> com.example.zf_pad.activity.z:
    com.example.zf_pad.activity.ConfirmOrder this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.activity.ConfirmOrder$2 -> com.example.zf_pad.activity.aa:
    com.example.zf_pad.activity.ConfirmOrder this$0 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.activity.ConfirmOrder$2$1 -> com.example.zf_pad.activity.ab:
    com.example.zf_pad.activity.ConfirmOrder$2 this$1 -> a
com.example.zf_pad.activity.ConfirmOrder$3 -> com.example.zf_pad.activity.ac:
    com.example.zf_pad.activity.ConfirmOrder this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.activity.ConfirmOrder$4 -> com.example.zf_pad.activity.ad:
    com.example.zf_pad.activity.ConfirmOrder this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.zf_pad.activity.ConfirmOrder$5 -> com.example.zf_pad.activity.ae:
    com.example.zf_pad.activity.ConfirmOrder this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.example.zf_pad.activity.ConfirmOrder$6 -> com.example.zf_pad.activity.af:
    com.example.zf_pad.activity.ConfirmOrder this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.ContactUs -> com.example.zf_pad.activity.ContactUs:
    android.widget.EditText login_edit_name1 -> b
    android.widget.EditText login_edit_name -> c
    android.widget.EditText et_contetn -> d
    android.widget.Button btn_exit -> e
    java.lang.String name -> f
    java.lang.String phone -> g
    java.lang.String content -> h
    android.widget.TextView maxCountTextView -> i
    void onCreate(android.os.Bundle) -> onCreate
    boolean check() -> b
    void ggg() -> a
    android.widget.TextView access$0(com.example.zf_pad.activity.ContactUs) -> a
    android.widget.EditText access$1(com.example.zf_pad.activity.ContactUs) -> b
    void access$2(com.example.zf_pad.activity.ContactUs,java.lang.String) -> a
    android.widget.EditText access$3(com.example.zf_pad.activity.ContactUs) -> c
    void access$4(com.example.zf_pad.activity.ContactUs,java.lang.String) -> b
    android.widget.EditText access$5(com.example.zf_pad.activity.ContactUs) -> d
    void access$6(com.example.zf_pad.activity.ContactUs,java.lang.String) -> c
    boolean access$7(com.example.zf_pad.activity.ContactUs) -> e
com.example.zf_pad.activity.ContactUs$1 -> com.example.zf_pad.activity.ag:
    com.example.zf_pad.activity.ContactUs this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.example.zf_pad.activity.ContactUs$2 -> com.example.zf_pad.activity.ah:
    com.example.zf_pad.activity.ContactUs this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.ContactUs$3 -> com.example.zf_pad.activity.ai:
    com.example.zf_pad.activity.ContactUs this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.CreatMerchant -> com.example.zf_pad.activity.CreatMerchant:
    android.widget.TextView tv_adress -> c
    int cityId -> d
    android.widget.EditText et_shopname -> e
    android.widget.EditText et_name -> f
    android.widget.EditText et_id_number -> g
    android.widget.EditText et_license_code -> h
    android.widget.EditText et_tax_id_number -> i
    android.widget.EditText et_certificate_no -> j
    android.widget.EditText et_bank -> k
    android.widget.EditText et_licencenum_bank -> l
    android.widget.Button btn_creat -> m
    android.widget.Button btn_legal_photo -> n
    android.widget.Button btn_license_photos -> o
    android.widget.Button btn_legal_back_photos -> p
    android.widget.Button btn_tax_regist -> q
    android.widget.Button btn_person_photograph -> r
    android.widget.Button btn_organization_code_photos -> s
    android.widget.Button btn_bank_license_photos -> t
    boolean iscamera -> u
    java.io.File file -> v
    java.lang.String localCameraPath -> w
    java.lang.String localSelectPath -> x
    int tag -> y
    java.lang.String[] imgPath -> z
    java.util.List mCities -> A
    int id -> B
    java.lang.String[] imgLocalPath -> C
    boolean isdown -> b
    java.lang.String title -> D
    java.lang.String legal_person_name -> E
    java.lang.String legal_person_card_id -> F
    java.lang.String business_license_no -> G
    java.lang.String tax_registered_no -> H
    java.lang.String organization_code_no -> I
    java.lang.String account_bank_name -> J
    java.lang.String bank_open_account -> K
    java.lang.String cardIdFrontPhotoPath -> L
    java.lang.String cardIdBackPhotoPath -> M
    java.lang.String bodyPhotoPath -> N
    java.lang.String licenseNoPicPath -> O
    java.lang.String taxNoPicPath -> P
    java.lang.String orgCodeNoPicPath -> Q
    java.lang.String accountPicPath -> R
    android.os.Handler handler -> S
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    void getmerchantInfo() -> c
    void init() -> d
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void uploadFile(java.lang.String,int,android.widget.Button) -> a
    void onClick(android.view.View) -> onClick
    void changeMerchantInfo() -> e
    void showchooseDialog(android.widget.Button,int) -> a
    void openimg(int) -> a
    void openAlbum() -> a
    void opencamera() -> b
    void sumbitMerchantInfo() -> f
    java.lang.String[] access$0(com.example.zf_pad.activity.CreatMerchant) -> a
    java.lang.String[] access$1(com.example.zf_pad.activity.CreatMerchant) -> b
    void access$2(com.example.zf_pad.activity.CreatMerchant,boolean) -> a
    boolean access$3(com.example.zf_pad.activity.CreatMerchant) -> c
    android.os.Handler access$4(com.example.zf_pad.activity.CreatMerchant) -> d
com.example.zf_pad.activity.CreatMerchant$1 -> com.example.zf_pad.activity.aj:
    com.example.zf_pad.activity.CreatMerchant this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.activity.CreatMerchant$2 -> com.example.zf_pad.activity.ak:
    android.app.Dialog loadingDialog -> b
    com.example.zf_pad.activity.CreatMerchant this$0 -> a
    android.widget.Button val$btn -> c
    int val$tag -> d
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onRetry(int) -> onRetry
com.example.zf_pad.activity.CreatMerchant$3 -> com.example.zf_pad.activity.al:
    com.example.zf_pad.activity.CreatMerchant this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.CreatMerchant$4 -> com.example.zf_pad.activity.am:
    com.example.zf_pad.activity.CreatMerchant this$0 -> a
    int val$tag -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.CreatMerchant$5 -> com.example.zf_pad.activity.an:
    com.example.zf_pad.activity.CreatMerchant this$0 -> a
    android.widget.Button val$choosealbum -> b
    android.widget.Button val$choosecamera -> c
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.CreatMerchant$6 -> com.example.zf_pad.activity.ao:
    com.example.zf_pad.activity.CreatMerchant this$0 -> a
    android.widget.Button val$choosecamera -> b
    android.widget.Button val$choosealbum -> c
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.CreatMerchant$7 -> com.example.zf_pad.activity.ap:
    com.example.zf_pad.activity.CreatMerchant this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.zf_pad.activity.CreatMerchant$8 -> com.example.zf_pad.activity.aq:
    com.example.zf_pad.activity.CreatMerchant this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.zf_pad.activity.CreatMerchant$9 -> com.example.zf_pad.activity.ar:
    com.example.zf_pad.activity.CreatMerchant this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.EditMerchant -> com.example.zf_pad.activity.EditMerchant:
    android.widget.TextView tv_shopname -> c
    android.widget.TextView tv_name -> d
    android.widget.TextView tv_id_number -> e
    android.widget.TextView tv_license_code -> f
    android.widget.TextView tv_tax_id_number -> g
    android.widget.TextView tv_certificate_no -> h
    android.widget.TextView tv_bank -> i
    android.widget.TextView tv_licencenum_bank -> j
    android.widget.TextView tv_adress -> k
    int id -> l
    java.util.List mCities -> m
    java.lang.String[] imgPath -> n
    android.widget.Button btn_legal_photo -> o
    android.widget.Button btn_license_photos -> p
    android.widget.Button btn_legal_back_photos -> q
    android.widget.Button btn_tax_regist -> r
    android.widget.Button btn_person_photograph -> s
    android.widget.Button btn_organization_code_photos -> t
    android.widget.Button btn_bank_license_photos -> u
    android.widget.Button btn_edit -> v
    int tag -> w
    boolean isEdit -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void getData() -> a
    java.lang.String findcity(int) -> a
    void init() -> b
    void onClick(android.view.View) -> onClick
    void openimg(int) -> b
    android.widget.TextView access$0(com.example.zf_pad.activity.EditMerchant) -> a
    android.widget.TextView access$1(com.example.zf_pad.activity.EditMerchant) -> b
    android.widget.TextView access$2(com.example.zf_pad.activity.EditMerchant) -> c
    android.widget.TextView access$3(com.example.zf_pad.activity.EditMerchant) -> d
    android.widget.TextView access$4(com.example.zf_pad.activity.EditMerchant) -> e
    android.widget.TextView access$5(com.example.zf_pad.activity.EditMerchant) -> f
    android.widget.TextView access$6(com.example.zf_pad.activity.EditMerchant) -> g
    android.widget.TextView access$7(com.example.zf_pad.activity.EditMerchant) -> h
    android.widget.TextView access$8(com.example.zf_pad.activity.EditMerchant) -> i
    java.lang.String[] access$9(com.example.zf_pad.activity.EditMerchant) -> j
com.example.zf_pad.activity.EditMerchant$1 -> com.example.zf_pad.activity.as:
    android.app.Dialog loadingDialog -> b
    com.example.zf_pad.activity.EditMerchant this$0 -> a
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.activity.Exchange -> com.example.zf_pad.activity.Exchange:
    android.widget.TextView next_sure -> b
    android.widget.TextView tv_xyjf -> c
    android.widget.TextView tv_sxf -> d
    android.widget.EditText et_name -> e
    android.widget.EditText et_tel -> f
    android.widget.EditText t_y -> g
    java.lang.String name -> h
    java.lang.String phone -> i
    java.lang.String prices -> j
    android.widget.Button btn_exit -> k
    int price1 -> l
    int sxfmoney -> m
    int customerId -> n
    android.os.Handler myHandler -> o
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void getscore() -> a
    void initView() -> b
    void getData() -> c
    void onClick(android.view.View) -> onClick
    android.widget.TextView access$0(com.example.zf_pad.activity.Exchange) -> a
    int access$1(com.example.zf_pad.activity.Exchange) -> b
    android.widget.TextView access$2(com.example.zf_pad.activity.Exchange) -> c
    int access$3(com.example.zf_pad.activity.Exchange) -> d
    void access$4(com.example.zf_pad.activity.Exchange,int) -> a
    void access$5(com.example.zf_pad.activity.Exchange,int) -> b
    android.os.Handler access$6(com.example.zf_pad.activity.Exchange) -> e
com.example.zf_pad.activity.Exchange$1 -> com.example.zf_pad.activity.at:
    com.example.zf_pad.activity.Exchange this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.activity.Exchange$2 -> com.example.zf_pad.activity.au:
    android.app.Dialog loadingDialog -> b
    com.example.zf_pad.activity.Exchange this$0 -> a
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.activity.Exchange$3 -> com.example.zf_pad.activity.av:
    com.example.zf_pad.activity.Exchange this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.FianceActivity -> com.example.zf_pad.activity.FianceActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.example.zf_pad.activity.FindPass -> com.example.zf_pad.activity.FindPass:
    android.widget.TextView tv_code -> e
    android.widget.TextView tv_check -> f
    android.widget.EditText login_edit_email -> g
    android.widget.EditText login_edit_code -> h
    android.widget.EditText login_edit_pass -> i
    android.widget.EditText login_edit_pass2 -> j
    android.widget.LinearLayout login_linear_deletemali -> k
    android.widget.LinearLayout login_linear_deletpass -> l
    android.widget.LinearLayout login_linear_deletpass2 -> m
    android.widget.LinearLayout login_linear_signin -> n
    int Countmun -> o
    java.lang.Boolean isRun -> p
    android.widget.ImageView img_check -> q
    android.widget.ImageView img_check_n -> r
    java.lang.String vcode -> b
    int cityid -> c
    java.lang.String email -> s
    java.lang.String pass -> t
    java.lang.Boolean chenckcode -> u
    java.lang.Runnable runnable -> v
    boolean ismail -> w
    android.os.Handler handler -> d
    android.widget.LinearLayout ll_isshow -> x
    android.widget.LinearLayout ll_isshow1 -> y
    android.widget.TextView tv_mmcz -> z
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    boolean check() -> b
    void getCode() -> c
    void onClick(android.view.View) -> onClick
    void sendMail() -> d
    void sure() -> e
    int access$0(com.example.zf_pad.activity.FindPass) -> a
    void access$1(com.example.zf_pad.activity.FindPass,java.lang.Boolean) -> a
    android.widget.TextView access$2(com.example.zf_pad.activity.FindPass) -> b
    void access$3(com.example.zf_pad.activity.FindPass,int) -> a
    android.widget.LinearLayout access$5(com.example.zf_pad.activity.FindPass) -> c
    android.widget.LinearLayout access$6(com.example.zf_pad.activity.FindPass) -> d
    android.widget.TextView access$7(com.example.zf_pad.activity.FindPass) -> e
    android.widget.LinearLayout access$8(com.example.zf_pad.activity.FindPass) -> f
    void access$9(com.example.zf_pad.activity.FindPass,boolean) -> a
    android.widget.LinearLayout access$10(com.example.zf_pad.activity.FindPass) -> g
    android.widget.EditText access$11(com.example.zf_pad.activity.FindPass) -> h
    boolean access$12(com.example.zf_pad.activity.FindPass) -> i
com.example.zf_pad.activity.FindPass$1 -> com.example.zf_pad.activity.aw:
    com.example.zf_pad.activity.FindPass this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.activity.FindPass$2 -> com.example.zf_pad.activity.ax:
    com.example.zf_pad.activity.FindPass this$0 -> a
    void run() -> run
com.example.zf_pad.activity.FindPass$3 -> com.example.zf_pad.activity.ay:
    com.example.zf_pad.activity.FindPass this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.example.zf_pad.activity.FindPass$4 -> com.example.zf_pad.activity.az:
    com.example.zf_pad.activity.FindPass this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.example.zf_pad.activity.FindPass$5 -> com.example.zf_pad.activity.ba:
    com.example.zf_pad.activity.FindPass this$0 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.activity.FindPass$6 -> com.example.zf_pad.activity.bb:
    com.example.zf_pad.activity.FindPass this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.FindPass$7 -> com.example.zf_pad.activity.bc:
    com.example.zf_pad.activity.FindPass this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.FindpassmailSucces -> com.example.zf_pad.activity.FindpassmailSucces:
    java.lang.String type -> b
    java.lang.String value -> c
    android.widget.LinearLayout ll_mail -> d
    android.widget.LinearLayout ll_tel -> e
    android.widget.TextView tv_tel -> f
    android.widget.TextView tv_mail -> g
    android.widget.LinearLayout ll_land -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
com.example.zf_pad.activity.FindpassmailSucces$1 -> com.example.zf_pad.activity.bd:
    com.example.zf_pad.activity.FindpassmailSucces this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.GoodConfirm -> com.example.zf_pad.activity.GoodConfirm:
    java.util.List myList -> b
    java.util.List moreList -> c
    java.lang.String Url -> d
    android.widget.TextView tv_tel -> e
    android.widget.TextView tv_adress -> f
    android.widget.TextView tv_totle -> g
    android.widget.TextView title2 -> h
    android.widget.TextView retail_price -> i
    android.widget.TextView tv_pay -> j
    android.widget.TextView tv_count -> k
    android.widget.Button btn_pay -> l
    android.widget.ImageView reduce -> m
    android.widget.ImageView add -> n
    int pirce -> o
    int goodId -> p
    int paychannelId -> q
    int quantity -> r
    int addressId -> s
    int is_need_invoice -> t
    android.widget.EditText buyCountEdit -> u
    android.widget.EditText et_titel -> v
    android.widget.CheckBox item_cb -> w
    int invoice_type -> x
    java.lang.String comment -> y
    java.lang.String invoice_info -> z
    com.example.zf_pad.util.ScrollViewWithListView sclist -> A
    com.example.zf_pad.aadpter.ChooseAdressAdapter myAdapter -> B
    android.widget.EditText et_comment -> C
    android.widget.Button bt_add -> D
    android.widget.ImageView event_img -> E
    android.widget.TextView tv_brand -> F
    android.widget.TextView tv_chanel -> G
    android.widget.LinearLayout ll_fp -> H
    java.text.DecimalFormat df -> I
    android.widget.TextView hpsf -> J
    android.widget.TextView hktf -> K
    android.widget.TextView ktf -> L
    double ktfstr -> M
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void getData1() -> b
    void onClick(android.view.View) -> onClick
    void confirmGood() -> c
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void access$0(com.example.zf_pad.activity.GoodConfirm,int) -> a
    com.example.zf_pad.aadpter.ChooseAdressAdapter access$1(com.example.zf_pad.activity.GoodConfirm) -> a
    void access$2(com.example.zf_pad.activity.GoodConfirm,int) -> b
    android.widget.EditText access$3(com.example.zf_pad.activity.GoodConfirm) -> b
    android.widget.LinearLayout access$4(com.example.zf_pad.activity.GoodConfirm) -> c
    android.widget.EditText access$5(com.example.zf_pad.activity.GoodConfirm) -> d
    android.widget.TextView access$6(com.example.zf_pad.activity.GoodConfirm) -> e
    void access$7(com.example.zf_pad.activity.GoodConfirm,int) -> c
    android.widget.TextView access$8(com.example.zf_pad.activity.GoodConfirm) -> f
    java.text.DecimalFormat access$9(com.example.zf_pad.activity.GoodConfirm) -> g
    double access$10(com.example.zf_pad.activity.GoodConfirm) -> h
    int access$11(com.example.zf_pad.activity.GoodConfirm) -> i
    android.widget.TextView access$12(com.example.zf_pad.activity.GoodConfirm) -> j
    android.widget.TextView access$13(com.example.zf_pad.activity.GoodConfirm) -> k
    int access$14(com.example.zf_pad.activity.GoodConfirm) -> l
    android.widget.TextView access$15(com.example.zf_pad.activity.GoodConfirm) -> m
    void access$16(com.example.zf_pad.activity.GoodConfirm,int) -> d
    int access$17(com.example.zf_pad.activity.GoodConfirm) -> n
com.example.zf_pad.activity.GoodConfirm$1 -> com.example.zf_pad.activity.be:
    com.example.zf_pad.activity.GoodConfirm this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.activity.GoodConfirm$2 -> com.example.zf_pad.activity.bf:
    com.example.zf_pad.activity.GoodConfirm this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.zf_pad.activity.GoodConfirm$3 -> com.example.zf_pad.activity.bg:
    com.example.zf_pad.activity.GoodConfirm this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.example.zf_pad.activity.GoodConfirm$4 -> com.example.zf_pad.activity.bh:
    com.example.zf_pad.activity.GoodConfirm this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.example.zf_pad.activity.GoodConfirm$5 -> com.example.zf_pad.activity.bi:
    com.example.zf_pad.activity.GoodConfirm this$0 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.activity.GoodConfirm$5$1 -> com.example.zf_pad.activity.bj:
    com.example.zf_pad.activity.GoodConfirm$5 this$1 -> a
com.example.zf_pad.activity.GoodConfirm$6 -> com.example.zf_pad.activity.bk:
    com.example.zf_pad.activity.GoodConfirm this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.GoodDeatail -> com.example.zf_pad.activity.GoodDeatail:
    android.widget.Button setting_btn_clear1 -> d
    android.widget.Button setting_btn_clear -> e
    int id -> f
    android.widget.LinearLayout titleback_linear_back -> g
    android.widget.ImageView image -> h
    android.widget.ImageView search2 -> i
    android.widget.ImageView fac_img -> j
    java.util.ArrayList ma -> k
    java.util.ArrayList mal -> l
    android.support.v4.view.ViewPager view_pager -> m
    com.example.zf_pad.activity.GoodDeatail$MyAdapter adapter -> n
    android.widget.ImageView[] indicator_imgs -> o
    android.view.View item -> p
    android.view.LayoutInflater inflater -> q
    android.widget.RelativeLayout rl_imgs -> r
    int index_ima -> s
    com.example.zf_pad.entity.GoodinfoEntity gfe -> t
    java.lang.String chanel -> u
    java.util.ArrayList arelist -> v
    int commentsCount -> w
    com.example.zf_pad.entity.FactoryEntity factoryEntity -> a
    android.widget.TextView tv_bug -> x
    android.widget.TextView tv_lea -> y
    android.widget.TextView tv_title -> z
    android.widget.TextView content1 -> A
    android.widget.TextView tv_pp -> B
    android.widget.TextView tv_price -> C
    android.widget.TextView tv_lx -> D
    android.widget.TextView tv_sjhttp -> E
    android.widget.TextView fac_detai -> F
    android.widget.TextView countShopCar -> G
    com.example.zf_pad.util.ScrollViewWithListView pos_lv1 -> H
    com.example.zf_pad.aadpter.HuilvAdapter lvAdapter -> I
    java.util.ArrayList celist -> J
    java.util.ArrayList celist2 -> K
    int paychannelId -> L
    java.util.List list -> b
    com.example.zf_pad.util.ScrollViewWithGView gview1 -> M
    com.example.zf_pad.aadpter.ButtonGridviewAdapter buttonAdapter -> N
    java.util.List User_button -> c
    java.lang.Boolean islea -> O
    java.util.List piclist -> P
    int opening_cost -> Q
    int all_price -> R
    java.lang.String tdname -> S
    android.os.Handler handler -> T
    android.content.Intent i -> U
    android.widget.LinearLayout ll_Factory -> V
    android.widget.TextView tv_pl -> W
    android.widget.TextView tv_zd -> X
    android.widget.TextView jjxj -> Y
    android.widget.TextView jjyj -> Z
    android.widget.TextView ktfy -> aa
    java.text.DecimalFormat df -> ab
    android.widget.TextView tv_jj -> ac
    void onCreate(android.os.Bundle) -> onCreate
    void innitView() -> a
    void onClick(android.view.View) -> onClick
    void onResume() -> onResume
    void getdata() -> b
    void addGood() -> c
    void initIndicator() -> d
    void getdataByChanel(int) -> a
    java.util.ArrayList access$0(com.example.zf_pad.activity.GoodDeatail) -> a
    android.view.LayoutInflater access$1(com.example.zf_pad.activity.GoodDeatail) -> b
    void access$2(com.example.zf_pad.activity.GoodDeatail,android.view.View) -> a
    android.view.View access$3(com.example.zf_pad.activity.GoodDeatail) -> c
    void access$4(com.example.zf_pad.activity.GoodDeatail,android.widget.ImageView[]) -> a
    void access$5(com.example.zf_pad.activity.GoodDeatail) -> d
    com.example.zf_pad.activity.GoodDeatail$MyAdapter access$6(com.example.zf_pad.activity.GoodDeatail) -> e
    com.example.zf_pad.entity.GoodinfoEntity access$7(com.example.zf_pad.activity.GoodDeatail) -> f
    android.widget.TextView access$8(com.example.zf_pad.activity.GoodDeatail) -> g
    android.widget.TextView access$9(com.example.zf_pad.activity.GoodDeatail) -> h
    android.widget.TextView access$10(com.example.zf_pad.activity.GoodDeatail) -> i
    android.widget.TextView access$11(com.example.zf_pad.activity.GoodDeatail) -> j
    android.widget.TextView access$12(com.example.zf_pad.activity.GoodDeatail) -> k
    android.widget.TextView access$13(com.example.zf_pad.activity.GoodDeatail) -> l
    android.widget.TextView access$14(com.example.zf_pad.activity.GoodDeatail) -> m
    int access$15(com.example.zf_pad.activity.GoodDeatail) -> n
    java.lang.Boolean access$16(com.example.zf_pad.activity.GoodDeatail) -> o
    int access$17(com.example.zf_pad.activity.GoodDeatail) -> p
    void access$18(com.example.zf_pad.activity.GoodDeatail,int) -> a
    android.widget.TextView access$19(com.example.zf_pad.activity.GoodDeatail) -> q
    android.widget.TextView access$20(com.example.zf_pad.activity.GoodDeatail) -> r
    java.text.DecimalFormat access$21(com.example.zf_pad.activity.GoodDeatail) -> s
    android.widget.TextView access$22(com.example.zf_pad.activity.GoodDeatail) -> t
    android.widget.TextView access$23(com.example.zf_pad.activity.GoodDeatail) -> u
    android.widget.TextView access$24(com.example.zf_pad.activity.GoodDeatail) -> v
    android.widget.Button access$25(com.example.zf_pad.activity.GoodDeatail) -> w
    android.widget.Button access$26(com.example.zf_pad.activity.GoodDeatail) -> x
    void access$27(com.example.zf_pad.activity.GoodDeatail,android.widget.ImageView) -> a
    android.widget.ImageView access$28(com.example.zf_pad.activity.GoodDeatail) -> y
    android.widget.ImageView[] access$29(com.example.zf_pad.activity.GoodDeatail) -> z
    void access$30(com.example.zf_pad.activity.GoodDeatail,int) -> b
    void access$31(com.example.zf_pad.activity.GoodDeatail,java.util.List) -> a
    void access$32(com.example.zf_pad.activity.GoodDeatail,com.example.zf_pad.aadpter.ButtonGridviewAdapter) -> a
    com.example.zf_pad.util.ScrollViewWithGView access$33(com.example.zf_pad.activity.GoodDeatail) -> A
    com.example.zf_pad.aadpter.ButtonGridviewAdapter access$34(com.example.zf_pad.activity.GoodDeatail) -> B
    void access$35(com.example.zf_pad.activity.GoodDeatail,int) -> c
    void access$36(com.example.zf_pad.activity.GoodDeatail,com.example.zf_pad.entity.GoodinfoEntity) -> a
    void access$37(com.example.zf_pad.activity.GoodDeatail,int) -> d
    void access$38(com.example.zf_pad.activity.GoodDeatail,int) -> e
    android.widget.ImageView access$39(com.example.zf_pad.activity.GoodDeatail) -> C
    java.util.ArrayList access$40(com.example.zf_pad.activity.GoodDeatail) -> D
    void access$41(com.example.zf_pad.activity.GoodDeatail,com.example.zf_pad.aadpter.HuilvAdapter) -> a
    java.util.List access$42(com.example.zf_pad.activity.GoodDeatail) -> E
    void access$43(com.example.zf_pad.activity.GoodDeatail,java.util.ArrayList) -> a
    java.util.ArrayList access$44(com.example.zf_pad.activity.GoodDeatail) -> F
    void access$45(com.example.zf_pad.activity.GoodDeatail,int) -> f
    void access$46(com.example.zf_pad.activity.GoodDeatail,java.lang.String) -> a
    void access$47(com.example.zf_pad.activity.GoodDeatail,java.util.ArrayList) -> b
    java.util.ArrayList access$48(com.example.zf_pad.activity.GoodDeatail) -> G
    void access$49(com.example.zf_pad.activity.GoodDeatail,android.widget.LinearLayout) -> a
    android.widget.LinearLayout access$50(com.example.zf_pad.activity.GoodDeatail) -> H
    android.os.Handler access$51(com.example.zf_pad.activity.GoodDeatail) -> I
    android.widget.TextView access$52(com.example.zf_pad.activity.GoodDeatail) -> J
com.example.zf_pad.activity.GoodDeatail$1 -> com.example.zf_pad.activity.bl:
    com.example.zf_pad.activity.GoodDeatail this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.activity.GoodDeatail$2 -> com.example.zf_pad.activity.bm:
    android.app.Dialog loadingDialog -> b
    com.example.zf_pad.activity.GoodDeatail this$0 -> a
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    com.example.zf_pad.activity.GoodDeatail access$0(com.example.zf_pad.activity.GoodDeatail$2) -> a
com.example.zf_pad.activity.GoodDeatail$2$1 -> com.example.zf_pad.activity.bn:
    com.example.zf_pad.activity.GoodDeatail$2 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$2$10 -> com.example.zf_pad.activity.bo:
    com.example.zf_pad.activity.GoodDeatail$2 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$2$11 -> com.example.zf_pad.activity.bp:
    com.example.zf_pad.activity.GoodDeatail$2 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$2$12 -> com.example.zf_pad.activity.bq:
    com.example.zf_pad.activity.GoodDeatail$2 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$2$13 -> com.example.zf_pad.activity.br:
    com.example.zf_pad.activity.GoodDeatail$2 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$2$14 -> com.example.zf_pad.activity.bs:
    com.example.zf_pad.activity.GoodDeatail$2 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$2$2 -> com.example.zf_pad.activity.bt:
    com.example.zf_pad.activity.GoodDeatail$2 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$2$3 -> com.example.zf_pad.activity.bu:
    com.example.zf_pad.activity.GoodDeatail$2 this$1 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.activity.GoodDeatail$2$4 -> com.example.zf_pad.activity.bv:
    com.example.zf_pad.activity.GoodDeatail$2 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$2$5 -> com.example.zf_pad.activity.bw:
    com.example.zf_pad.activity.GoodDeatail$2 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$2$6 -> com.example.zf_pad.activity.bx:
    com.example.zf_pad.activity.GoodDeatail$2 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$2$7 -> com.example.zf_pad.activity.by:
    com.example.zf_pad.activity.GoodDeatail$2 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$2$8 -> com.example.zf_pad.activity.bz:
    com.example.zf_pad.activity.GoodDeatail$2 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$2$9 -> com.example.zf_pad.activity.ca:
    com.example.zf_pad.activity.GoodDeatail$2 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$3 -> com.example.zf_pad.activity.cb:
    com.example.zf_pad.activity.GoodDeatail this$0 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.activity.GoodDeatail$4 -> com.example.zf_pad.activity.cc:
    com.example.zf_pad.activity.GoodDeatail this$0 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.activity.GoodDeatail$4$1 -> com.example.zf_pad.activity.cd:
    com.example.zf_pad.activity.GoodDeatail$4 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$4$2 -> com.example.zf_pad.activity.ce:
    com.example.zf_pad.activity.GoodDeatail$4 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$4$3 -> com.example.zf_pad.activity.cf:
    com.example.zf_pad.activity.GoodDeatail$4 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$4$4 -> com.example.zf_pad.activity.cg:
    com.example.zf_pad.activity.GoodDeatail$4 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$4$5 -> com.example.zf_pad.activity.ch:
    com.example.zf_pad.activity.GoodDeatail$4 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$4$6 -> com.example.zf_pad.activity.ci:
    com.example.zf_pad.activity.GoodDeatail$4 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$4$7 -> com.example.zf_pad.activity.cj:
    com.example.zf_pad.activity.GoodDeatail$4 this$1 -> a
com.example.zf_pad.activity.GoodDeatail$MyAdapter -> com.example.zf_pad.activity.ck:
    java.util.List mList -> b
    int index -> c
    com.example.zf_pad.activity.GoodDeatail this$0 -> a
    void setIndex(int) -> a
    int getCount() -> getCount
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    com.example.zf_pad.activity.GoodDeatail access$0(com.example.zf_pad.activity.GoodDeatail$MyAdapter) -> a
com.example.zf_pad.activity.GoodDeatail$MyAdapter$1 -> com.example.zf_pad.activity.cl:
    com.example.zf_pad.activity.GoodDeatail$MyAdapter this$1 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.GoodDeatail$MyListener -> com.example.zf_pad.activity.cm:
    com.example.zf_pad.activity.GoodDeatail this$0 -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.example.zf_pad.activity.GoodDeatilMore -> com.example.zf_pad.activity.GoodDeatilMore:
    com.example.zf_pad.fragment.F_good_detail detail -> a
    com.example.zf_pad.fragment.Good_detail_apply apply -> b
    com.example.zf_pad.fragment.Good_detail_commet commet -> c
    com.example.zf_pad.fragment.Good_detail_zd zd -> d
    com.example.zf_pad.fragment.Good_detail_trade jy -> e
    int type -> f
    android.widget.TextView tv_ms -> g
    android.widget.TextView tv_kt -> h
    android.widget.TextView tv_pl -> i
    android.widget.TextView tv_zd -> j
    android.widget.TextView tv_jy -> k
    com.example.zf_pad.fragment.Good_detail_pic pic -> l
    android.widget.ImageView search2 -> m
    android.widget.LinearLayout ll_back -> n
    int comments -> o
    android.widget.LinearLayout ll_isshow -> p
    android.widget.TextView tv_pic -> q
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void changColor() -> b
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
com.example.zf_pad.activity.GoodDetailImgs -> com.example.zf_pad.activity.GoodDetailImgs:
    android.support.v4.view.ViewPager view_pager -> d
    com.example.zf_pad.activity.GoodDetailImgs$MyAdapter adapter -> e
    android.widget.ImageView image -> f
    android.view.LayoutInflater inflater -> g
    java.util.List list -> b
    java.util.List ma -> h
    int position_detail -> i
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> c
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void access$0(com.example.zf_pad.activity.GoodDetailImgs,android.widget.ImageView) -> a
    java.util.List access$1(com.example.zf_pad.activity.GoodDetailImgs) -> a
    android.widget.ImageView access$2(com.example.zf_pad.activity.GoodDetailImgs) -> b
com.example.zf_pad.activity.GoodDetailImgs$MyAdapter -> com.example.zf_pad.activity.cn:
    java.util.List mList -> b
    int index -> c
    com.example.zf_pad.activity.GoodDetailImgs this$0 -> a
    void setIndex(int) -> a
    int getCount() -> getCount
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    com.example.zf_pad.activity.GoodDetailImgs access$0(com.example.zf_pad.activity.GoodDetailImgs$MyAdapter) -> a
com.example.zf_pad.activity.GoodDetailImgs$MyAdapter$1 -> com.example.zf_pad.activity.co:
    com.example.zf_pad.activity.GoodDetailImgs$MyAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.GoodDetailImgs$MyListener -> com.example.zf_pad.activity.cp:
    com.example.zf_pad.activity.GoodDetailImgs this$0 -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.example.zf_pad.activity.LeaseConfirm -> com.example.zf_pad.activity.LeaseConfirm:
    java.util.List myList -> b
    java.util.List moreList -> c
    java.lang.String Url -> d
    android.widget.TextView tv_tel -> e
    android.widget.TextView tv_adress -> f
    android.widget.TextView tv_totle -> g
    android.widget.TextView title2 -> h
    android.widget.TextView retail_price -> i
    android.widget.TextView tv_pay -> j
    android.widget.TextView tv_count -> k
    android.widget.Button btn_pay -> l
    android.widget.ImageView reduce -> m
    android.widget.ImageView add -> n
    int pirce -> o
    int goodId -> p
    int paychannelId -> q
    int quantity -> r
    int addressId -> s
    int is_need_invoice -> t
    android.widget.EditText buyCountEdit -> u
    android.widget.EditText et_titel -> v
    android.widget.CheckBox item_cb -> w
    int invoice_type -> x
    java.lang.String comment -> y
    java.lang.String invoice_info -> z
    com.example.zf_pad.util.ScrollViewWithListView sclist -> A
    com.example.zf_pad.aadpter.ChooseAdressAdapter myAdapter -> B
    android.widget.TextView tv_zc -> C
    android.widget.TextView tv_zd -> D
    boolean flag -> E
    android.widget.EditText et_comment -> F
    android.widget.TextView tv_zl -> G
    int comments -> H
    android.widget.Button bt_add -> I
    android.widget.ImageView event_img -> J
    android.widget.TextView tv_brand -> K
    android.widget.TextView tv_chanel -> L
    android.widget.LinearLayout ll_fp -> M
    java.text.DecimalFormat df -> N
    android.widget.TextView hpsf -> O
    android.widget.TextView ktf -> P
    android.widget.TextView hktf -> Q
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void getData1() -> b
    void onClick(android.view.View) -> onClick
    void confirmGood() -> c
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void access$0(com.example.zf_pad.activity.LeaseConfirm,int) -> a
    com.example.zf_pad.aadpter.ChooseAdressAdapter access$1(com.example.zf_pad.activity.LeaseConfirm) -> a
    void access$2(com.example.zf_pad.activity.LeaseConfirm,boolean) -> a
    android.widget.EditText access$3(com.example.zf_pad.activity.LeaseConfirm) -> b
    android.widget.TextView access$4(com.example.zf_pad.activity.LeaseConfirm) -> c
    void access$5(com.example.zf_pad.activity.LeaseConfirm,int) -> b
    android.widget.TextView access$6(com.example.zf_pad.activity.LeaseConfirm) -> d
    java.text.DecimalFormat access$7(com.example.zf_pad.activity.LeaseConfirm) -> e
    int access$8(com.example.zf_pad.activity.LeaseConfirm) -> f
    android.widget.TextView access$9(com.example.zf_pad.activity.LeaseConfirm) -> g
    android.widget.TextView access$10(com.example.zf_pad.activity.LeaseConfirm) -> h
    int access$11(com.example.zf_pad.activity.LeaseConfirm) -> i
    android.widget.TextView access$12(com.example.zf_pad.activity.LeaseConfirm) -> j
    void access$13(com.example.zf_pad.activity.LeaseConfirm,int) -> c
    int access$14(com.example.zf_pad.activity.LeaseConfirm) -> k
com.example.zf_pad.activity.LeaseConfirm$1 -> com.example.zf_pad.activity.cq:
    com.example.zf_pad.activity.LeaseConfirm this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.activity.LeaseConfirm$2 -> com.example.zf_pad.activity.cr:
    com.example.zf_pad.activity.LeaseConfirm this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.zf_pad.activity.LeaseConfirm$3 -> com.example.zf_pad.activity.cs:
    com.example.zf_pad.activity.LeaseConfirm this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.example.zf_pad.activity.LeaseConfirm$4 -> com.example.zf_pad.activity.ct:
    com.example.zf_pad.activity.LeaseConfirm this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.example.zf_pad.activity.LeaseConfirm$5 -> com.example.zf_pad.activity.cu:
    com.example.zf_pad.activity.LeaseConfirm this$0 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.activity.LeaseConfirm$5$1 -> com.example.zf_pad.activity.cv:
    com.example.zf_pad.activity.LeaseConfirm$5 this$1 -> a
com.example.zf_pad.activity.LeaseConfirm$6 -> com.example.zf_pad.activity.cw:
    com.example.zf_pad.activity.LeaseConfirm this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.LoanActivity -> com.example.zf_pad.activity.LoanActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.example.zf_pad.activity.LoginActivity -> com.example.zf_pad.activity.LoginActivity:
    java.lang.Boolean isRemeber -> d
    android.widget.TextView login_text_forget -> e
    android.widget.TextView login_info -> f
    android.widget.EditText login_edit_name -> g
    android.widget.EditText login_edit_pass -> h
    android.widget.LinearLayout login_linear_deletename -> i
    android.widget.LinearLayout login_linear_deletepass -> j
    android.widget.LinearLayout zhuche_ll -> k
    android.widget.LinearLayout login_linear_login -> l
    android.widget.LinearLayout msg -> m
    java.lang.String usename -> n
    java.lang.String passsword -> o
    android.content.SharedPreferences mySharedPreferences -> b
    android.content.SharedPreferences$Editor editor -> p
    java.lang.Boolean isFirst -> q
    boolean islogin -> c
    android.os.Handler handler -> r
    android.widget.Button close -> s
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> b
    void onClick(android.view.View) -> onClick
    void login() -> c
    void registerBaidu() -> a
    boolean check() -> d
    android.widget.LinearLayout access$0(com.example.zf_pad.activity.LoginActivity) -> a
    android.widget.LinearLayout access$1(com.example.zf_pad.activity.LoginActivity) -> b
    android.widget.LinearLayout access$2(com.example.zf_pad.activity.LoginActivity) -> c
    android.content.SharedPreferences$Editor access$3(com.example.zf_pad.activity.LoginActivity) -> d
com.example.zf_pad.activity.LoginActivity$1 -> com.example.zf_pad.activity.cx:
    com.example.zf_pad.activity.LoginActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.activity.LoginActivity$2 -> com.example.zf_pad.activity.cy:
    com.example.zf_pad.activity.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.LoginActivity$3 -> com.example.zf_pad.activity.cz:
    com.example.zf_pad.activity.LoginActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.example.zf_pad.activity.LoginActivity$4 -> com.example.zf_pad.activity.da:
    com.example.zf_pad.activity.LoginActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.example.zf_pad.activity.LoginActivity$5 -> com.example.zf_pad.activity.db:
    com.example.zf_pad.activity.LoginActivity this$0 -> a
    void onSuccess(com.example.zf_pad.entity.UserEntity) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.activity.LoginActivity$5$1 -> com.example.zf_pad.activity.dc:
    com.example.zf_pad.activity.LoginActivity$5 this$1 -> a
com.example.zf_pad.activity.LoginActivity$6 -> com.example.zf_pad.activity.dd:
    com.example.zf_pad.activity.LoginActivity this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.MainActivity -> com.example.zf_pad.activity.MainActivity:
    android.widget.RelativeLayout re_shopcar -> a
    android.widget.RelativeLayout re_myinfo -> b
    android.widget.RelativeLayout re_mine -> c
    android.widget.RelativeLayout re_sy -> d
    com.example.zf_pad.fragment.M_MianFragment f_sy -> e
    com.example.zf_pad.fragment.M_my M_my -> f
    android.widget.LinearLayout set -> g
    android.widget.ImageView im_sy -> h
    android.widget.ImageView im_ghc -> i
    android.widget.ImageView im_mess -> j
    android.widget.ImageView im_wd -> k
    com.example.zf_pad.fragment.M_shopcar f_gwc -> l
    com.example.zf_pad.fragment.M_wdxx f_wdxx -> m
    android.widget.TextView textsy -> n
    android.widget.TextView textghc -> o
    android.widget.TextView textmes -> p
    android.widget.TextView textwd -> q
    android.widget.TextView countShopCar -> r
    java.lang.String cityName -> s
    int cityId -> t
    android.widget.TextView cityTextView -> u
    com.example.zf_pad.trade.entity.Province province -> v
    com.example.zf_pad.trade.entity.City city -> w
    int flag -> x
    android.content.SharedPreferences mySharedPreferences -> y
    long exitTime -> z
    void onCreate(android.os.Bundle) -> onCreate
    void changTabBg() -> a
    void initView() -> b
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void showSet() -> c
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onStop() -> onStop
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onPause() -> onPause
com.example.zf_pad.activity.MyWebView -> com.example.zf_pad.activity.MyWebView:
    java.lang.String Url -> b
    java.lang.String Title -> c
    android.webkit.WebView webview -> d
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.example.zf_pad.activity.MymsgDetail -> com.example.zf_pad.activity.MymsgDetail:
    android.widget.TextView tv_titel -> b
    android.widget.TextView tv_time -> c
    android.widget.TextView tv_content -> d
    int id -> e
    java.lang.String url -> f
    android.widget.ImageView search -> g
    com.loopj.android.http.RequestParams params -> h
    java.lang.String type -> i
    void onCreate(android.os.Bundle) -> onCreate
    void getData() -> a
    void delOne() -> b
    void initView() -> c
    android.widget.TextView access$0(com.example.zf_pad.activity.MymsgDetail) -> a
    android.widget.TextView access$1(com.example.zf_pad.activity.MymsgDetail) -> b
    android.widget.TextView access$2(com.example.zf_pad.activity.MymsgDetail) -> c
    void access$3(com.example.zf_pad.activity.MymsgDetail) -> d
com.example.zf_pad.activity.MymsgDetail$1 -> com.example.zf_pad.activity.de:
    com.example.zf_pad.activity.MymsgDetail this$0 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.activity.MymsgDetail$1$1 -> com.example.zf_pad.activity.df:
    com.example.zf_pad.activity.MymsgDetail$1 this$1 -> a
com.example.zf_pad.activity.MymsgDetail$2 -> com.example.zf_pad.activity.dg:
    com.example.zf_pad.activity.MymsgDetail this$0 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.activity.MymsgDetail$3 -> com.example.zf_pad.activity.dh:
    com.example.zf_pad.activity.MymsgDetail this$0 -> a
    void onClick(android.view.View) -> onClick
    com.example.zf_pad.activity.MymsgDetail access$0(com.example.zf_pad.activity.MymsgDetail$3) -> a
com.example.zf_pad.activity.MymsgDetail$3$1 -> com.example.zf_pad.activity.di:
    com.example.zf_pad.activity.MymsgDetail$3 this$1 -> a
    void change() -> a
com.example.zf_pad.activity.OrderDetail -> com.example.zf_pad.activity.OrderDetail:
    com.example.zf_pad.util.ScrollViewWithListView pos_lv -> d
    com.example.zf_pad.util.ScrollViewWithListView his_lv -> e
    java.util.List goodlist -> b
    java.util.List relist -> c
    com.example.zf_pad.aadpter.OrderDetail_PosAdapter posAdapter -> f
    com.example.zf_pad.aadpter.RecordAdapter reAdapter -> g
    android.widget.LinearLayout ll_ishow -> h
    android.widget.Button btn_ishow -> i
    java.util.List ode -> j
    android.widget.TextView tv_status -> k
    android.widget.TextView tv_sjps -> l
    android.widget.TextView tv_psf -> m
    android.widget.TextView tv_reperson -> n
    android.widget.TextView tv_tel -> o
    android.widget.TextView tv_adress -> p
    android.widget.TextView tv_ly -> q
    android.widget.TextView tv_fplx -> r
    android.widget.TextView fptt -> s
    android.widget.TextView tv_ddbh -> t
    android.widget.TextView tv_pay -> u
    android.widget.TextView tv_time -> v
    android.widget.TextView tv_gj -> w
    android.widget.TextView tv_money -> x
    int status -> y
    int id -> z
    android.os.Handler handler -> A
    android.widget.Button bt_pj -> B
    android.widget.TextView tv_price -> C
    android.widget.TextView tv_sl -> D
    android.widget.TextView tv_comment -> E
    com.example.zf_pad.util.AlertMessDialog amd -> F
    java.lang.String type -> G
    android.widget.Button bt_pay -> H
    android.widget.Button bt_cancel -> I
    java.text.DecimalFormat df -> J
    android.widget.Button btn_ishow_wl -> K
    void onCreate(android.os.Bundle) -> onCreate
    void getData() -> a
    void initView() -> b
    void onClick(android.view.View) -> onClick
    double check(java.lang.String) -> a
    void onResume() -> onResume
    java.util.List access$0(com.example.zf_pad.activity.OrderDetail) -> a
    android.widget.TextView access$1(com.example.zf_pad.activity.OrderDetail) -> b
    java.text.DecimalFormat access$2(com.example.zf_pad.activity.OrderDetail) -> c
    android.widget.TextView access$3(com.example.zf_pad.activity.OrderDetail) -> d
    android.widget.TextView access$4(com.example.zf_pad.activity.OrderDetail) -> e
    android.widget.TextView access$5(com.example.zf_pad.activity.OrderDetail) -> f
    android.widget.TextView access$6(com.example.zf_pad.activity.OrderDetail) -> g
    android.widget.TextView access$7(com.example.zf_pad.activity.OrderDetail) -> h
    android.widget.TextView access$8(com.example.zf_pad.activity.OrderDetail) -> i
    android.widget.TextView access$9(com.example.zf_pad.activity.OrderDetail) -> j
    android.widget.TextView access$10(com.example.zf_pad.activity.OrderDetail) -> k
    android.widget.TextView access$11(com.example.zf_pad.activity.OrderDetail) -> l
    android.widget.TextView access$12(com.example.zf_pad.activity.OrderDetail) -> m
    android.widget.TextView access$13(com.example.zf_pad.activity.OrderDetail) -> n
    android.widget.TextView access$14(com.example.zf_pad.activity.OrderDetail) -> o
    android.widget.TextView access$15(com.example.zf_pad.activity.OrderDetail) -> p
    android.widget.Button access$16(com.example.zf_pad.activity.OrderDetail) -> q
    android.widget.Button access$17(com.example.zf_pad.activity.OrderDetail) -> r
    android.widget.Button access$18(com.example.zf_pad.activity.OrderDetail) -> s
    void access$19(com.example.zf_pad.activity.OrderDetail) -> t
    void access$20(com.example.zf_pad.activity.OrderDetail,java.util.List) -> a
    int access$21(com.example.zf_pad.activity.OrderDetail) -> u
    void access$22(com.example.zf_pad.activity.OrderDetail,com.example.zf_pad.aadpter.OrderDetail_PosAdapter) -> a
    com.example.zf_pad.util.ScrollViewWithListView access$23(com.example.zf_pad.activity.OrderDetail) -> v
    com.example.zf_pad.aadpter.OrderDetail_PosAdapter access$24(com.example.zf_pad.activity.OrderDetail) -> w
    android.widget.TextView access$25(com.example.zf_pad.activity.OrderDetail) -> x
    void access$26(com.example.zf_pad.activity.OrderDetail,com.example.zf_pad.aadpter.RecordAdapter) -> a
    com.example.zf_pad.util.ScrollViewWithListView access$27(com.example.zf_pad.activity.OrderDetail) -> y
    com.example.zf_pad.aadpter.RecordAdapter access$28(com.example.zf_pad.activity.OrderDetail) -> z
    android.os.Handler access$29(com.example.zf_pad.activity.OrderDetail) -> A
    com.example.zf_pad.util.AlertMessDialog access$30(com.example.zf_pad.activity.OrderDetail) -> B
    int access$31(com.example.zf_pad.activity.OrderDetail) -> C
    android.widget.LinearLayout access$32(com.example.zf_pad.activity.OrderDetail) -> D
com.example.zf_pad.activity.OrderDetail$1 -> com.example.zf_pad.activity.dj:
    com.example.zf_pad.activity.OrderDetail this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.activity.OrderDetail$2 -> com.example.zf_pad.activity.dk:
    com.example.zf_pad.activity.OrderDetail this$0 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.activity.OrderDetail$2$1 -> com.example.zf_pad.activity.dl:
    com.example.zf_pad.activity.OrderDetail$2 this$1 -> a
com.example.zf_pad.activity.OrderDetail$3 -> com.example.zf_pad.activity.dm:
    com.example.zf_pad.activity.OrderDetail this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.OrderDetail$4 -> com.example.zf_pad.activity.dn:
    com.example.zf_pad.activity.OrderDetail this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.OrderDetail$5 -> com.example.zf_pad.activity.do:
    com.example.zf_pad.activity.OrderDetail this$0 -> a
    com.example.zf_pad.util.AlertDialog val$ad -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.OrderDetail$6 -> com.example.zf_pad.activity.dp:
    com.example.zf_pad.activity.OrderDetail this$0 -> a
    com.example.zf_pad.util.AlertDialog val$ad -> b
    void onClick(android.view.View) -> onClick
    com.example.zf_pad.activity.OrderDetail access$0(com.example.zf_pad.activity.OrderDetail$6) -> a
com.example.zf_pad.activity.OrderDetail$6$1 -> com.example.zf_pad.activity.dq:
    com.example.zf_pad.activity.OrderDetail$6 this$1 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.activity.PayFromCar -> com.example.zf_pad.activity.PayFromCar:
    android.widget.TextView tv_pay -> b
    android.widget.LinearLayout titleback_linear_back -> c
    android.widget.LinearLayout ll_request -> d
    android.widget.LinearLayout ll_sh -> e
    int orderId -> f
    java.lang.String outTradeNo -> g
    java.lang.String subject -> h
    java.lang.String body -> i
    java.lang.String price -> j
    int type -> k
    java.lang.String unionprice -> l
    android.os.Handler handler -> m
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void dialogIntent() -> d
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void getData() -> e
    void success() -> a
    void handling() -> b
    void fail() -> c
    android.widget.TextView access$0(com.example.zf_pad.activity.PayFromCar) -> a
    java.lang.String access$1(com.example.zf_pad.activity.PayFromCar) -> b
    int access$2(com.example.zf_pad.activity.PayFromCar) -> c
    int access$3(com.example.zf_pad.activity.PayFromCar) -> d
    void access$4(com.example.zf_pad.activity.PayFromCar,java.lang.String) -> a
    java.lang.String access$5(com.example.zf_pad.activity.PayFromCar) -> e
    void access$6(com.example.zf_pad.activity.PayFromCar,java.lang.String) -> b
    void access$7(com.example.zf_pad.activity.PayFromCar,java.lang.String) -> c
    void access$8(com.example.zf_pad.activity.PayFromCar,java.lang.String) -> d
    void access$9(com.example.zf_pad.activity.PayFromCar,java.lang.String) -> e
    android.os.Handler access$10(com.example.zf_pad.activity.PayFromCar) -> f
com.example.zf_pad.activity.PayFromCar$1 -> com.example.zf_pad.activity.dr:
    com.example.zf_pad.activity.PayFromCar this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.activity.PayFromCar$2 -> com.example.zf_pad.activity.ds:
    com.example.zf_pad.activity.PayFromCar this$0 -> a
    void change() -> a
com.example.zf_pad.activity.PayFromCar$3 -> com.example.zf_pad.activity.dt:
    com.example.zf_pad.activity.PayFromCar this$0 -> a
    void onSuccess(java.util.List) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.activity.PayFromCar$3$1 -> com.example.zf_pad.activity.du:
    com.example.zf_pad.activity.PayFromCar$3 this$1 -> a
com.example.zf_pad.activity.PosListActivity -> com.example.zf_pad.activity.PosListActivity:
    android.widget.ImageView pos_select -> d
    android.widget.ImageView search2 -> e
    android.widget.ImageView img3 -> f
    android.os.Parcelable listState -> g
    com.example.zf_pad.util.XListView Xlistview -> h
    int page -> i
    int page1 -> j
    int rows -> k
    android.widget.LinearLayout eva_nodata -> l
    android.widget.LinearLayout ll_xxyx -> m
    android.widget.LinearLayout ll_mr -> n
    android.widget.LinearLayout ll_updown -> o
    android.widget.LinearLayout ll_pj -> p
    boolean onRefresh_number -> q
    com.example.zf_pad.aadpter.PosAdapter myAdapter -> r
    java.lang.String keys -> s
    android.widget.TextView tv_mr -> t
    android.widget.TextView tv_2 -> u
    android.widget.TextView tv_3 -> v
    android.widget.TextView tv_4 -> w
    android.widget.TextView countShopCar -> x
    java.lang.Boolean isDown -> y
    int orderType -> z
    android.widget.EditText et_search -> A
    int list_port -> B
    double maxPrice -> C
    double minPrice -> D
    boolean isSearch -> E
    java.lang.String keyword -> F
    java.util.List myList -> b
    java.util.List moreList -> c
    int shoptype -> G
    android.os.Handler handler -> H
    android.widget.ImageView port1 -> I
    android.widget.ImageView port2 -> J
    com.example.zf_pad.aadpter.PosAdapter1 myAdapter1 -> K
    android.content.Intent i -> L
    android.widget.LinearLayout ll_listflag -> M
    android.widget.LinearLayout ll_back -> N
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> c
    void onResume() -> onResume
    void changList() -> d
    void onClick(android.view.View) -> onClick
    void onRefresh() -> a
    void onLoadMore() -> b
    void onLoad() -> e
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void Search() -> f
    void onDestroy() -> onDestroy
    void access$0(com.example.zf_pad.activity.PosListActivity) -> a
    com.example.zf_pad.util.XListView access$1(com.example.zf_pad.activity.PosListActivity) -> b
    android.widget.LinearLayout access$2(com.example.zf_pad.activity.PosListActivity) -> c
    void access$3(com.example.zf_pad.activity.PosListActivity,boolean) -> a
    com.example.zf_pad.aadpter.PosAdapter access$4(com.example.zf_pad.activity.PosListActivity) -> d
    com.example.zf_pad.aadpter.PosAdapter1 access$5(com.example.zf_pad.activity.PosListActivity) -> e
    int access$6(com.example.zf_pad.activity.PosListActivity) -> f
    void access$7(com.example.zf_pad.activity.PosListActivity,android.os.Parcelable) -> a
    android.widget.ImageView access$8(com.example.zf_pad.activity.PosListActivity) -> g
    android.widget.ImageView access$9(com.example.zf_pad.activity.PosListActivity) -> h
    android.os.Parcelable access$10(com.example.zf_pad.activity.PosListActivity) -> i
    void access$11(com.example.zf_pad.activity.PosListActivity,int) -> a
    android.widget.LinearLayout access$12(com.example.zf_pad.activity.PosListActivity) -> j
    void access$13(com.example.zf_pad.activity.PosListActivity,com.example.zf_pad.aadpter.PosAdapter1) -> a
    android.os.Handler access$14(com.example.zf_pad.activity.PosListActivity) -> k
com.example.zf_pad.activity.PosListActivity$1 -> com.example.zf_pad.activity.dv:
    com.example.zf_pad.activity.PosListActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.activity.PosListActivity$2 -> com.example.zf_pad.activity.dw:
    com.example.zf_pad.activity.PosListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.activity.PosListActivity$3 -> com.example.zf_pad.activity.dx:
    com.example.zf_pad.activity.PosListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.PosListActivity$4 -> com.example.zf_pad.activity.dy:
    com.example.zf_pad.activity.PosListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.PosListActivity$6 -> com.example.zf_pad.activity.dz:
    com.example.zf_pad.activity.PosListActivity this$0 -> a
    void onSuccess(com.example.zf_pad.trade.common.Page) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.activity.PosListActivity$6$1 -> com.example.zf_pad.activity.ea:
    com.example.zf_pad.activity.PosListActivity$6 this$1 -> a
com.example.zf_pad.activity.PosPortActivity -> com.example.zf_pad.activity.PosPortActivity:
    android.widget.ExpandableListView listView -> b
    java.util.List portlist -> c
    java.util.List glist -> d
    com.example.zf_pad.entity.PosSelectEntity pse -> e
    com.example.zf_pad.entity.PosSelectEntity pse1 -> f
    com.example.zf_pad.aadpter.PosPortAdapter myadapter -> g
    android.widget.Button bt_cancel -> h
    android.widget.Button bt_confirm -> i
    com.example.zf_pad.entity.PostPortEntity pe -> j
    com.example.zf_pad.entity.PostPortEntity pe1 -> k
    com.example.zf_pad.entity.PostPortEntity pe2 -> l
    com.example.zf_pad.entity.PostPortEntity pe3 -> m
    com.example.zf_pad.entity.PostPortEntity pe4 -> n
    com.example.zf_pad.entity.PostPortEntity pe5 -> o
    com.example.zf_pad.entity.PostPortEntity pe6 -> p
    com.example.zf_pad.entity.PostPortEntity pe0 -> q
    com.example.zf_pad.entity.PostPortEntity pe7 -> r
    com.example.zf_pad.entity.PostPortEntity pe8 -> s
    com.example.zf_pad.entity.PostPortEntity pe9 -> t
    com.example.zf_pad.entity.PostPortEntity pe10 -> u
    com.example.zf_pad.entity.PostPortEntity pe11 -> v
    com.example.zf_pad.entity.PostPortEntity pe12 -> w
    android.widget.CheckBox has_purchase -> x
    boolean isload -> y
    android.widget.EditText ed_min -> z
    android.widget.EditText ed_max -> A
    android.app.Dialog loadingDialog -> B
    boolean isClick -> C
    void onCreate(android.os.Bundle) -> onCreate
    void getData() -> b
    void initData() -> a
    void initView() -> c
    void onClick(android.view.View) -> onClick
    void initport() -> d
    boolean check(java.lang.String) -> a
    void onResume() -> onResume
    android.app.Dialog access$0(com.example.zf_pad.activity.PosPortActivity) -> a
    void access$1(com.example.zf_pad.activity.PosPortActivity,com.example.zf_pad.entity.PosSelectEntity) -> a
    void access$2(com.example.zf_pad.activity.PosPortActivity,com.example.zf_pad.entity.PosSelectEntity) -> b
    void access$3(com.example.zf_pad.activity.PosPortActivity,boolean) -> a
com.example.zf_pad.activity.PosPortActivity$1 -> com.example.zf_pad.activity.eb:
    com.example.zf_pad.activity.PosPortActivity this$0 -> a
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.activity.PosPortActivity$1$1 -> com.example.zf_pad.activity.ec:
    com.example.zf_pad.activity.PosPortActivity$1 this$1 -> a
com.example.zf_pad.activity.PosPortActivity$1$2 -> com.example.zf_pad.activity.ed:
    com.example.zf_pad.activity.PosPortActivity$1 this$1 -> a
com.example.zf_pad.activity.PosPortActivity$2 -> com.example.zf_pad.activity.ee:
    com.example.zf_pad.activity.PosPortActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.zf_pad.activity.PosSearch -> com.example.zf_pad.activity.PosSearch:
    java.lang.String CName -> f
    android.widget.EditText et -> g
    android.widget.ListView lv -> h
    int REQUEST_CODE -> i
    android.content.SharedPreferences mySharedPreferences -> j
    android.content.SharedPreferences$Editor editor -> k
    int a -> l
    android.widget.TextView ml_maplocation -> m
    java.lang.String poiStr -> b
    java.util.List data -> c
    java.util.List key -> d
    java.util.List city -> e
    java.lang.String sss -> n
    com.example.zf_pad.aadpter.SearchAdapter searchAdapter -> o
    int currentPage -> p
    java.lang.String name -> q
    boolean onRefresh_number -> r
    android.os.Handler mHandler -> s
    void onCreate(android.os.Bundle) -> onCreate
    void addData(java.lang.String) -> a
    void DeletaData() -> a
    void getData(java.lang.String) -> b
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
    com.example.zf_pad.aadpter.SearchAdapter access$0(com.example.zf_pad.activity.PosSearch) -> a
    android.widget.ListView access$1(com.example.zf_pad.activity.PosSearch) -> b
    void access$2(com.example.zf_pad.activity.PosSearch,java.lang.String) -> a
    void access$3(com.example.zf_pad.activity.PosSearch,java.lang.String) -> b
    java.lang.String access$4(com.example.zf_pad.activity.PosSearch) -> c
    android.content.SharedPreferences$Editor access$5(com.example.zf_pad.activity.PosSearch) -> d
    void access$6(com.example.zf_pad.activity.PosSearch,java.lang.String) -> c
    java.lang.String access$7(com.example.zf_pad.activity.PosSearch) -> e
    android.widget.EditText access$8(com.example.zf_pad.activity.PosSearch) -> f
com.example.zf_pad.activity.PosSearch$1 -> com.example.zf_pad.activity.ef:
    com.example.zf_pad.activity.PosSearch this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.example.zf_pad.activity.PosSearch access$0(com.example.zf_pad.activity.PosSearch$1) -> a
com.example.zf_pad.activity.PosSearch$1$1 -> com.example.zf_pad.activity.eg:
    com.example.zf_pad.activity.PosSearch$1 this$1 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.activity.PosSearch$2 -> com.example.zf_pad.activity.eh:
    com.example.zf_pad.activity.PosSearch this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.activity.PosSearch$3 -> com.example.zf_pad.activity.ei:
    com.example.zf_pad.activity.PosSearch this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.PosSearch1 -> com.example.zf_pad.activity.PosSearch1:
    java.lang.String CName -> g
    android.widget.EditText et -> h
    int REQUEST_CODE -> i
    android.content.SharedPreferences mySharedPreferences -> j
    android.content.SharedPreferences$Editor editor -> k
    int a -> l
    android.widget.TextView ml_maplocation -> m
    java.lang.String poiStr -> b
    java.util.List data -> c
    java.util.List key -> d
    java.util.List mhot -> e
    java.util.List hotlist -> f
    java.lang.String sss -> n
    com.example.zf_pad.aadpter.SearchAdapter searchAdapter -> o
    int currentPage -> p
    java.lang.String name -> q
    boolean onRefresh_number -> r
    android.widget.GridView gr_search -> s
    android.widget.TextView clear -> t
    android.widget.GridView gr_hot -> u
    com.example.zf_pad.aadpter.SearchAdapter hotAdapter -> v
    android.widget.LinearLayout ll_close -> w
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> b
    void getData() -> c
    void addData(java.lang.String) -> a
    void DeletaData() -> a
    void getData(java.lang.String) -> b
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
    void access$0(com.example.zf_pad.activity.PosSearch1,java.lang.String) -> a
    android.widget.EditText access$1(com.example.zf_pad.activity.PosSearch1) -> a
    java.lang.String access$2(com.example.zf_pad.activity.PosSearch1) -> b
    void access$3(com.example.zf_pad.activity.PosSearch1,java.lang.String) -> b
    com.example.zf_pad.aadpter.SearchAdapter access$4(com.example.zf_pad.activity.PosSearch1) -> c
com.example.zf_pad.activity.PosSearch1$1 -> com.example.zf_pad.activity.ej:
    com.example.zf_pad.activity.PosSearch1 this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.PosSearch1$2 -> com.example.zf_pad.activity.ek:
    com.example.zf_pad.activity.PosSearch1 this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.PosSearch1$3 -> com.example.zf_pad.activity.el:
    com.example.zf_pad.activity.PosSearch1 this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.PosSearch1$4 -> com.example.zf_pad.activity.em:
    com.example.zf_pad.activity.PosSearch1 this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.activity.PosSearch1$5 -> com.example.zf_pad.activity.en:
    com.example.zf_pad.activity.PosSearch1 this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.activity.PosSearch1$6 -> com.example.zf_pad.activity.eo:
    com.example.zf_pad.activity.PosSearch1 this$0 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.activity.PosSearch1$6$1 -> com.example.zf_pad.activity.ep:
    com.example.zf_pad.activity.PosSearch1$6 this$1 -> a
com.example.zf_pad.activity.PostSonList -> com.example.zf_pad.activity.PostSonList:
    android.widget.ListView list -> b
    com.example.zf_pad.activity.PostSonList$MyAdapter adapter -> c
    android.widget.Button bt_close -> d
    void onCreate(android.os.Bundle) -> onCreate
com.example.zf_pad.activity.PostSonList$1 -> com.example.zf_pad.activity.eq:
    com.example.zf_pad.activity.PostSonList this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.PostSonList$MyAdapter -> com.example.zf_pad.activity.er:
    android.view.LayoutInflater inflater -> b
    android.widget.TextView text -> c
    android.widget.CheckBox cb -> d
    com.example.zf_pad.activity.PostSonList this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.example.zf_pad.activity.PostSonList access$0(com.example.zf_pad.activity.PostSonList$MyAdapter) -> a
com.example.zf_pad.activity.PostSonList$MyAdapter$1 -> com.example.zf_pad.activity.es:
    com.example.zf_pad.activity.PostSonList$MyAdapter this$1 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.zf_pad.activity.RegSucceed -> com.example.zf_pad.activity.RegSucceed:
    java.lang.String type -> b
    java.lang.String value -> c
    android.widget.LinearLayout ll_mail -> d
    android.widget.LinearLayout ll_tel -> e
    android.widget.TextView tv_tel -> f
    android.widget.TextView tv_mail -> g
    android.widget.LinearLayout ll_land -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
com.example.zf_pad.activity.RegSucceed$1 -> com.example.zf_pad.activity.et:
    com.example.zf_pad.activity.RegSucceed this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.Register -> com.example.zf_pad.activity.Register:
    android.widget.TextView tv_code -> d
    android.widget.TextView tv_check -> e
    android.widget.TextView tv_jy_type -> f
    android.widget.EditText login_edit_email -> g
    android.widget.EditText login_edit_code -> h
    android.widget.EditText login_edit_pass -> i
    android.widget.EditText login_edit_pass2 -> j
    android.widget.LinearLayout login_linear_deletemali -> k
    android.widget.LinearLayout login_linear_deletpass -> l
    android.widget.LinearLayout login_linear_deletpass2 -> m
    android.widget.LinearLayout login_linear_signin -> n
    android.widget.LinearLayout ll_jy_type -> o
    int Countmun -> p
    java.lang.Boolean isRun -> q
    android.widget.ImageView img_check -> r
    android.widget.ImageView img_check_n -> s
    java.lang.String vcode -> b
    java.lang.String email -> t
    java.lang.String pass -> u
    java.lang.Boolean chenckcode -> v
    java.lang.Runnable runnable -> w
    boolean ismail -> x
    android.os.Handler handler -> c
    android.widget.LinearLayout ll_isshow -> y
    int cityid -> z
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> b
    boolean check() -> c
    void getCode() -> d
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void zhuche() -> a
    void ggg(java.lang.String) -> a
    int access$0(com.example.zf_pad.activity.Register) -> a
    void access$1(com.example.zf_pad.activity.Register,java.lang.Boolean) -> a
    android.widget.TextView access$2(com.example.zf_pad.activity.Register) -> b
    void access$3(com.example.zf_pad.activity.Register,int) -> a
    android.widget.LinearLayout access$5(com.example.zf_pad.activity.Register) -> c
    android.widget.LinearLayout access$6(com.example.zf_pad.activity.Register) -> d
    void access$7(com.example.zf_pad.activity.Register,boolean) -> a
    android.widget.LinearLayout access$8(com.example.zf_pad.activity.Register) -> e
    android.widget.LinearLayout access$9(com.example.zf_pad.activity.Register) -> f
    java.lang.String access$10(com.example.zf_pad.activity.Register) -> g
    boolean access$11(com.example.zf_pad.activity.Register) -> h
com.example.zf_pad.activity.Register$1 -> com.example.zf_pad.activity.eu:
    com.example.zf_pad.activity.Register this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.activity.Register$2 -> com.example.zf_pad.activity.ev:
    com.example.zf_pad.activity.Register this$0 -> a
    void run() -> run
com.example.zf_pad.activity.Register$3 -> com.example.zf_pad.activity.ew:
    com.example.zf_pad.activity.Register this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.example.zf_pad.activity.Register$4 -> com.example.zf_pad.activity.ex:
    com.example.zf_pad.activity.Register this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.example.zf_pad.activity.Register$5 -> com.example.zf_pad.activity.ey:
    com.example.zf_pad.activity.Register this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.example.zf_pad.activity.Register$6 -> com.example.zf_pad.activity.ez:
    com.example.zf_pad.activity.Register this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.Register$7 -> com.example.zf_pad.activity.fa:
    com.example.zf_pad.activity.Register this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.SystemMessage -> com.example.zf_pad.activity.SystemMessage:
    com.example.zf_pad.util.XListView Xlistview -> d
    int page -> e
    int rows -> f
    android.widget.LinearLayout eva_nodata -> g
    boolean onRefresh_number -> h
    com.example.zf_pad.aadpter.MessageAdapter myAdapter -> i
    java.util.List myList -> b
    java.util.List moreList -> c
    android.os.Handler handler -> j
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> c
    void onRefresh() -> a
    void onLoadMore() -> b
    void onLoad() -> d
    void getData() -> e
    void access$0(com.example.zf_pad.activity.SystemMessage) -> a
    com.example.zf_pad.util.XListView access$1(com.example.zf_pad.activity.SystemMessage) -> b
    android.widget.LinearLayout access$2(com.example.zf_pad.activity.SystemMessage) -> c
    void access$3(com.example.zf_pad.activity.SystemMessage,boolean) -> a
    com.example.zf_pad.aadpter.MessageAdapter access$4(com.example.zf_pad.activity.SystemMessage) -> d
    android.os.Handler access$5(com.example.zf_pad.activity.SystemMessage) -> e
com.example.zf_pad.activity.SystemMessage$1 -> com.example.zf_pad.activity.fb:
    com.example.zf_pad.activity.SystemMessage this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.activity.SystemMessage$2 -> com.example.zf_pad.activity.fc:
    boolean flag -> b
    com.example.zf_pad.activity.SystemMessage this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.activity.SystemMessage$3 -> com.example.zf_pad.activity.fd:
    android.app.Dialog loadingDialog -> b
    com.example.zf_pad.activity.SystemMessage this$0 -> a
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.activity.SystemMessage$3$1 -> com.example.zf_pad.activity.fe:
    com.example.zf_pad.activity.SystemMessage$3 this$1 -> a
com.example.zf_pad.activity.TerminalAddActivity -> com.example.zf_pad.activity.TerminalAddActivity:
    int mChannelId -> c
    android.widget.EditText mTerminalNumber -> d
    android.widget.EditText mShopName -> e
    android.widget.Button mSubmitBtn -> f
    android.widget.ArrayAdapter adapter -> g
    android.widget.Spinner spinner -> h
    android.widget.Button close -> i
    java.util.List items -> j
    java.util.List list -> b
    android.os.Handler myHandler -> k
    android.text.TextWatcher mTextWatcher -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void updateUIWithValidation() -> a
    void onClick(android.view.View) -> onClick
    android.widget.ArrayAdapter access$0(com.example.zf_pad.activity.TerminalAddActivity) -> a
    void access$1(com.example.zf_pad.activity.TerminalAddActivity) -> b
    java.util.List access$2(com.example.zf_pad.activity.TerminalAddActivity) -> c
    android.os.Handler access$3(com.example.zf_pad.activity.TerminalAddActivity) -> d
    void access$4(com.example.zf_pad.activity.TerminalAddActivity,int) -> a
com.example.zf_pad.activity.TerminalAddActivity$1 -> com.example.zf_pad.activity.ff:
    com.example.zf_pad.activity.TerminalAddActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.activity.TerminalAddActivity$2 -> com.example.zf_pad.activity.fg:
    com.example.zf_pad.activity.TerminalAddActivity this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.example.zf_pad.activity.TerminalAddActivity$3 -> com.example.zf_pad.activity.fh:
    com.example.zf_pad.activity.TerminalAddActivity this$0 -> a
    void onSuccess(java.util.List) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.activity.TerminalAddActivity$3$1 -> com.example.zf_pad.activity.fi:
    com.example.zf_pad.activity.TerminalAddActivity$3 this$1 -> a
com.example.zf_pad.activity.TerminalAddActivity$4 -> com.example.zf_pad.activity.fj:
    com.example.zf_pad.activity.TerminalAddActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.example.zf_pad.activity.TerminalAddActivity$5 -> com.example.zf_pad.activity.fk:
    com.example.zf_pad.activity.TerminalAddActivity this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.TerminalManagerActivity -> com.example.zf_pad.activity.TerminalManagerActivity:
    android.widget.LinearLayout titleback_linear_back -> b
    android.widget.TextView titleback_text_title -> c
    android.widget.ImageView titleback_image_back -> d
    android.widget.ImageView addTerminal -> e
    android.view.LayoutInflater mInflater -> f
    com.example.zf_pad.util.XListView mTerminalList -> g
    java.util.List mTerminalItems -> h
    com.example.zf_pad.activity.TerminalManagerActivity$TerminalListAdapter mAdapter -> i
    int page -> j
    int total -> k
    int rows -> l
    android.view.View$OnClickListener mSyncListener -> m
    android.view.View$OnClickListener mOpenListener -> n
    android.view.View$OnClickListener mPosListener -> o
    android.view.View$OnClickListener mVideoListener -> p
    void onCreate(android.os.Bundle) -> onCreate
    void initViews() -> c
    void initBtnListeners() -> d
    void loadData() -> e
    void openDialog(com.example.zf_pad.entity.TerminalManagerEntity) -> a
    void loadFinished() -> f
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onRefresh() -> a
    void onLoadMore() -> b
    java.util.List access$0(com.example.zf_pad.activity.TerminalManagerActivity) -> a
    android.view.LayoutInflater access$1(com.example.zf_pad.activity.TerminalManagerActivity) -> b
    android.view.View$OnClickListener access$2(com.example.zf_pad.activity.TerminalManagerActivity) -> c
    android.view.View$OnClickListener access$3(com.example.zf_pad.activity.TerminalManagerActivity) -> d
    android.view.View$OnClickListener access$4(com.example.zf_pad.activity.TerminalManagerActivity) -> e
    android.view.View$OnClickListener access$5(com.example.zf_pad.activity.TerminalManagerActivity) -> f
    void access$6(com.example.zf_pad.activity.TerminalManagerActivity,com.example.zf_pad.entity.TerminalManagerEntity) -> a
    void access$7(com.example.zf_pad.activity.TerminalManagerActivity,int) -> a
    int access$8(com.example.zf_pad.activity.TerminalManagerActivity) -> g
    void access$9(com.example.zf_pad.activity.TerminalManagerActivity,int) -> b
    com.example.zf_pad.activity.TerminalManagerActivity$TerminalListAdapter access$10(com.example.zf_pad.activity.TerminalManagerActivity) -> h
    void access$11(com.example.zf_pad.activity.TerminalManagerActivity) -> i
com.example.zf_pad.activity.TerminalManagerActivity$1 -> com.example.zf_pad.activity.fl:
    com.example.zf_pad.activity.TerminalManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.TerminalManagerActivity$10 -> com.example.zf_pad.activity.fm:
    com.example.zf_pad.activity.TerminalManagerActivity this$0 -> a
    android.widget.CheckBox val$cb -> b
    android.app.AlertDialog val$dialog -> c
    com.example.zf_pad.entity.TerminalManagerEntity val$item -> d
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.TerminalManagerActivity$2 -> com.example.zf_pad.activity.fn:
    com.example.zf_pad.activity.TerminalManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.TerminalManagerActivity$3 -> com.example.zf_pad.activity.fo:
    com.example.zf_pad.activity.TerminalManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.TerminalManagerActivity$4 -> com.example.zf_pad.activity.fp:
    com.example.zf_pad.activity.TerminalManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.example.zf_pad.activity.TerminalManagerActivity access$0(com.example.zf_pad.activity.TerminalManagerActivity$4) -> a
com.example.zf_pad.activity.TerminalManagerActivity$4$1 -> com.example.zf_pad.activity.fq:
    com.example.zf_pad.activity.TerminalManagerActivity$4 this$1 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.TerminalManagerActivity$5 -> com.example.zf_pad.activity.fr:
    com.example.zf_pad.activity.TerminalManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.TerminalManagerActivity$6 -> com.example.zf_pad.activity.fs:
    com.example.zf_pad.activity.TerminalManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.example.zf_pad.activity.TerminalManagerActivity access$0(com.example.zf_pad.activity.TerminalManagerActivity$6) -> a
com.example.zf_pad.activity.TerminalManagerActivity$6$1 -> com.example.zf_pad.activity.ft:
    com.example.zf_pad.activity.TerminalManagerActivity$6 this$1 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    com.example.zf_pad.activity.TerminalManagerActivity$6 access$0(com.example.zf_pad.activity.TerminalManagerActivity$6$1) -> a
com.example.zf_pad.activity.TerminalManagerActivity$6$1$1 -> com.example.zf_pad.activity.fu:
    com.example.zf_pad.activity.TerminalManagerActivity$6$1 this$2 -> a
    java.lang.String val$password -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.zf_pad.activity.TerminalManagerActivity$6$1$2 -> com.example.zf_pad.activity.fv:
    com.example.zf_pad.activity.TerminalManagerActivity$6$1 this$2 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.zf_pad.activity.TerminalManagerActivity$7 -> com.example.zf_pad.activity.fw:
    com.example.zf_pad.activity.TerminalManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.TerminalManagerActivity$8 -> com.example.zf_pad.activity.fx:
    com.example.zf_pad.activity.TerminalManagerActivity this$0 -> a
    void onSuccess(com.example.zf_pad.trade.common.Page) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.activity.TerminalManagerActivity$8$1 -> com.example.zf_pad.activity.fy:
    com.example.zf_pad.activity.TerminalManagerActivity$8 this$1 -> a
com.example.zf_pad.activity.TerminalManagerActivity$9 -> com.example.zf_pad.activity.fz:
    com.example.zf_pad.activity.TerminalManagerActivity this$0 -> a
    android.app.AlertDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.TerminalManagerActivity$TerminalListAdapter -> com.example.zf_pad.activity.ga:
    com.example.zf_pad.activity.TerminalManagerActivity this$0 -> a
    int getCount() -> getCount
    com.example.zf_pad.entity.TerminalManagerEntity getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void addButton(android.widget.LinearLayout,int,java.lang.Object,android.view.View$OnClickListener) -> a
    void addButton(android.widget.LinearLayout) -> a
    java.lang.Object getItem(int) -> getItem
    com.example.zf_pad.activity.TerminalManagerActivity access$1(com.example.zf_pad.activity.TerminalManagerActivity$TerminalListAdapter) -> a
com.example.zf_pad.activity.TerminalManagerActivity$TerminalListAdapter$1 -> com.example.zf_pad.activity.gb:
    com.example.zf_pad.activity.TerminalManagerActivity$TerminalListAdapter this$1 -> a
    com.example.zf_pad.entity.TerminalManagerEntity val$item -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.TerminalManagerActivity$ViewHolder -> com.example.zf_pad.activity.gc:
    android.widget.TextView tv_terminal_id -> a
    android.widget.TextView tv_postype -> b
    android.widget.TextView tv_paychannel -> c
    android.widget.TextView tv_openstate -> d
    android.widget.LinearLayout llButtonContainer -> e
    android.widget.LinearLayout llButtons -> f
com.example.zf_pad.activity.TerminalManagerDetailActivity -> com.example.zf_pad.activity.TerminalManagerDetailActivity:
    int mTerminalStatus -> c
    int mTerminalId -> d
    android.view.LayoutInflater mInflater -> e
    android.widget.TextView mStatus -> f
    android.widget.Button mBtnLeftTop -> g
    android.widget.Button mBtnLeftBottom -> h
    android.widget.Button mBtnRightTop -> i
    android.widget.Button mBtnRightBottom -> j
    android.widget.LinearLayout mCategoryContainer -> k
    android.widget.LinearLayout mCommentContainer -> l
    android.widget.LinearLayout mTerminalContainer -> m
    android.view.View$OnClickListener mSyncListener -> n
    android.view.View$OnClickListener mOpenListener -> o
    android.view.View$OnClickListener mReOpenListener -> p
    android.view.View$OnClickListener mPosListener -> q
    android.view.View$OnClickListener mVideoListener -> r
    int isVideo -> s
    int status -> t
    java.lang.Boolean appidBoolean -> u
    java.lang.Boolean videoBoolean -> v
    java.lang.String xieyiString -> w
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initViews() -> a
    void initBtnListeners() -> b
    void openDialog() -> c
    void loadData() -> d
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setStatusAndButtons(com.example.zf_pad.entity.TerminalApply) -> a
    android.widget.LinearLayout setTerminalInfo(com.example.zf_pad.entity.TerminalApply) -> b
    void addRatesTable(android.widget.LinearLayout,java.util.List) -> a
    void setOpenInfo(java.util.List) -> a
    void addComments(java.util.List) -> b
    android.widget.TextView createCategoryText() -> e
    android.widget.LinearLayout renderCategoryTemplate(java.util.LinkedHashMap,java.lang.Boolean) -> a
    int access$0(com.example.zf_pad.activity.TerminalManagerDetailActivity) -> a
    void access$1(com.example.zf_pad.activity.TerminalManagerDetailActivity) -> b
    int access$2(com.example.zf_pad.activity.TerminalManagerDetailActivity) -> c
    java.lang.Boolean access$3(com.example.zf_pad.activity.TerminalManagerDetailActivity) -> d
    void access$4(com.example.zf_pad.activity.TerminalManagerDetailActivity,com.example.zf_pad.entity.TerminalApply) -> a
    android.widget.LinearLayout access$5(com.example.zf_pad.activity.TerminalManagerDetailActivity,com.example.zf_pad.entity.TerminalApply) -> b
    void access$6(com.example.zf_pad.activity.TerminalManagerDetailActivity,android.widget.LinearLayout,java.util.List) -> a
    void access$7(com.example.zf_pad.activity.TerminalManagerDetailActivity,java.util.List) -> a
    void access$8(com.example.zf_pad.activity.TerminalManagerDetailActivity,java.util.List) -> b
com.example.zf_pad.activity.TerminalManagerDetailActivity$1 -> com.example.zf_pad.activity.gd:
    com.example.zf_pad.activity.TerminalManagerDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.TerminalManagerDetailActivity$1$1 -> com.example.zf_pad.activity.ge:
    com.example.zf_pad.activity.TerminalManagerDetailActivity$1 this$1 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.TerminalManagerDetailActivity$2 -> com.example.zf_pad.activity.gf:
    com.example.zf_pad.activity.TerminalManagerDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.TerminalManagerDetailActivity$3 -> com.example.zf_pad.activity.gg:
    com.example.zf_pad.activity.TerminalManagerDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.TerminalManagerDetailActivity$4 -> com.example.zf_pad.activity.gh:
    com.example.zf_pad.activity.TerminalManagerDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.TerminalManagerDetailActivity$4$1 -> com.example.zf_pad.activity.gi:
    com.example.zf_pad.activity.TerminalManagerDetailActivity$4 this$1 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.activity.TerminalManagerDetailActivity$5 -> com.example.zf_pad.activity.gj:
    com.example.zf_pad.activity.TerminalManagerDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.TerminalManagerDetailActivity$6 -> com.example.zf_pad.activity.gk:
    com.example.zf_pad.activity.TerminalManagerDetailActivity this$0 -> a
    android.app.AlertDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.TerminalManagerDetailActivity$7 -> com.example.zf_pad.activity.gl:
    com.example.zf_pad.activity.TerminalManagerDetailActivity this$0 -> a
    android.widget.CheckBox val$cb -> b
    android.app.AlertDialog val$dialog -> c
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.TerminalManagerDetailActivity$8 -> com.example.zf_pad.activity.gm:
    com.example.zf_pad.activity.TerminalManagerDetailActivity this$0 -> a
    void onSuccess(com.example.zf_pad.entity.TerminalDetail) -> a
    void onFailure(java.lang.String) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.activity.TerminalManagerDetailActivity$8$1 -> com.example.zf_pad.activity.gn:
    com.example.zf_pad.activity.TerminalManagerDetailActivity$8 this$1 -> a
com.example.zf_pad.activity.TerminalManagerDetailActivity$9 -> com.example.zf_pad.activity.go:
    com.example.zf_pad.activity.TerminalManagerDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.activity.WelcomeActivity -> com.example.zf_pad.activity.WelcomeActivity:
    android.widget.ImageView img -> b
    android.support.v4.view.ViewPager view_pager -> c
    int[] imgs -> d
    java.util.ArrayList views -> e
    android.view.ViewGroup scrollDot -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initViewPager() -> a
    java.util.ArrayList loadViews(int[]) -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onClick(android.view.View) -> onClick
    android.widget.ImageView access$0(com.example.zf_pad.activity.WelcomeActivity) -> a
    void access$1(com.example.zf_pad.activity.WelcomeActivity) -> b
    java.util.ArrayList access$2(com.example.zf_pad.activity.WelcomeActivity) -> c
com.example.zf_pad.activity.WelcomeActivity$1 -> com.example.zf_pad.activity.gp:
    com.example.zf_pad.activity.WelcomeActivity this$0 -> a
    void run() -> run
com.example.zf_pad.activity.WelcomeActivity$2 -> com.example.zf_pad.activity.gq:
    com.example.zf_pad.activity.WelcomeActivity this$0 -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    int getCount() -> getCount
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
com.example.zf_pad.activity.WelcomeActivity$3 -> com.example.zf_pad.activity.gr:
    com.example.zf_pad.activity.WelcomeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.alipay.Base64 -> com.example.zf_pad.b.a:
    char PAD -> a
    byte[] base64Alphabet -> b
    char[] lookUpBase64Alphabet -> c
    boolean isWhiteSpace(char) -> a
    boolean isPad(char) -> b
    boolean isData(char) -> c
    java.lang.String encode(byte[]) -> a
    byte[] decode(java.lang.String) -> a
    int removeWhiteSpace(char[]) -> a
com.example.zf_pad.alipay.PayActivity -> com.example.zf_pad.b.b:
    android.os.Handler mHandler -> b
    void pay(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void check(android.view.View) -> check
    java.lang.String getOrderInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    java.lang.String sign(java.lang.String) -> a
    java.lang.String getSignType() -> d
    void success() -> a
    void handling() -> b
    void fail() -> c
    android.os.Handler access$0(com.example.zf_pad.alipay.PayActivity) -> a
com.example.zf_pad.alipay.PayActivity$1 -> com.example.zf_pad.b.c:
    com.example.zf_pad.alipay.PayActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.alipay.PayActivity$2 -> com.example.zf_pad.b.d:
    com.example.zf_pad.alipay.PayActivity this$0 -> a
    java.lang.String val$payInfo -> b
    void run() -> run
com.example.zf_pad.alipay.PayActivity$3 -> com.example.zf_pad.b.e:
    com.example.zf_pad.alipay.PayActivity this$0 -> a
    void run() -> run
com.example.zf_pad.alipay.PayResult -> com.example.zf_pad.b.f:
    java.lang.String resultStatus -> a
    java.lang.String result -> b
    java.lang.String memo -> c
    java.lang.String toString() -> toString
    java.lang.String gatValue(java.lang.String,java.lang.String) -> a
    java.lang.String getResultStatus() -> a
com.example.zf_pad.alipay.RepairPayActivity -> com.example.zf_pad.b.g:
    android.os.Handler mHandler -> b
    void pay(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void check(android.view.View) -> check
    java.lang.String getOrderInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    java.lang.String sign(java.lang.String) -> a
    java.lang.String getSignType() -> d
    void success() -> a
    void handling() -> b
    void fail() -> c
    android.os.Handler access$0(com.example.zf_pad.alipay.RepairPayActivity) -> a
com.example.zf_pad.alipay.RepairPayActivity$1 -> com.example.zf_pad.b.h:
    com.example.zf_pad.alipay.RepairPayActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.alipay.RepairPayActivity$2 -> com.example.zf_pad.b.i:
    com.example.zf_pad.alipay.RepairPayActivity this$0 -> a
    java.lang.String val$payInfo -> b
    void run() -> run
com.example.zf_pad.alipay.RepairPayActivity$3 -> com.example.zf_pad.b.j:
    com.example.zf_pad.alipay.RepairPayActivity this$0 -> a
    void run() -> run
com.example.zf_pad.alipay.SignUtils -> com.example.zf_pad.b.k:
    java.lang.String sign(java.lang.String,java.lang.String) -> a
com.example.zf_pad.entity.AddressManager -> com.example.zf_pad.c.a:
    long id -> a
    java.lang.String consignee -> b
    java.lang.String area -> c
    java.lang.String detailadress -> d
    java.lang.String zipcode -> e
    java.lang.String phone -> f
    java.lang.String isdefau -> g
    java.lang.String cityId -> h
    java.lang.String city_parent_id -> i
    java.lang.String getCityId() -> a
    long getId() -> b
    java.lang.String getConsignee() -> c
    java.lang.String getArea() -> d
    java.lang.String getDetailadress() -> e
    java.lang.String getZipcode() -> f
    java.lang.String getPhone() -> g
    java.lang.String getIsdefau() -> h
    java.lang.String toString() -> toString
com.example.zf_pad.entity.AdressEntity -> com.example.zf_pad.c.b:
    java.lang.Boolean Ischeck -> a
    int id -> b
    java.lang.String receiver -> c
    java.lang.String isDefault -> d
    java.lang.String address -> e
    java.lang.String zipCode -> f
    java.lang.String moblephone -> g
    java.lang.String city -> h
    java.lang.Boolean getIscheck() -> a
    void setIscheck(java.lang.Boolean) -> a
    int getId() -> b
    java.lang.String getReceiver() -> c
    java.lang.String getIsDefault() -> d
    void setIsDefault(java.lang.String) -> a
    java.lang.String getAddress() -> e
    java.lang.String getZipCode() -> f
    java.lang.String getMoblephone() -> g
    java.lang.String getCity() -> h
com.example.zf_pad.entity.Answer -> com.example.zf_pad.c.c:
    int good_id -> a
    int customer_id -> b
    int score -> c
    java.lang.String content -> d
    void setGood_id(int) -> a
    void setCustomer_id(int) -> b
    void setScore(int) -> c
    void setContent(java.lang.String) -> a
com.example.zf_pad.entity.ApplySerch -> com.example.zf_pad.c.d:
    long id -> a
    java.lang.String ternumber -> b
    java.lang.String consumption -> c
    java.lang.String conmoney -> d
    java.lang.String traaccounts -> e
    java.lang.String tramoney -> f
    java.lang.String repayment -> g
    java.lang.String repmoney -> h
    long getId() -> a
    java.lang.String getTernumber() -> b
    java.lang.String getConsumption() -> c
    java.lang.String getConmoney() -> d
    java.lang.String getTraaccounts() -> e
    java.lang.String getTramoney() -> f
    java.lang.String getRepayment() -> g
    java.lang.String getRepmoney() -> h
    java.lang.String toString() -> toString
com.example.zf_pad.entity.Bank -> com.example.zf_pad.c.e:
    java.lang.String no -> a
    java.lang.String name -> b
    java.lang.String getNo() -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> a
com.example.zf_pad.entity.ChanelEntitiy -> com.example.zf_pad.c.f:
    java.lang.String description -> a
    java.lang.String name -> b
    int standard_rate -> c
    int getStandard_rate() -> a
    java.lang.String getDescription() -> b
    java.lang.String getName() -> c
com.example.zf_pad.entity.ChangeEmailEntity -> com.example.zf_pad.c.g:
    java.lang.String dentcode -> a
    java.lang.String getDentcode() -> a
com.example.zf_pad.entity.FactoryEntity -> com.example.zf_pad.c.h:
    java.lang.String description -> a
    java.lang.String name -> b
    java.lang.String website_url -> c
    java.lang.String logo_file_path -> d
    java.lang.String getDescription() -> a
    java.lang.String getName() -> b
    java.lang.String getWebsite_url() -> c
    java.lang.String getLogo_file_path() -> d
com.example.zf_pad.entity.GoodCommentEntity -> com.example.zf_pad.c.i:
    java.lang.String content -> a
    java.lang.String name -> b
    int score -> c
    java.lang.String created_at -> d
    java.lang.String getContent() -> a
    java.lang.String getName() -> b
    int getScore() -> c
    java.lang.String getCreated_at() -> d
com.example.zf_pad.entity.GoodPic -> com.example.zf_pad.c.j:
    java.lang.String urlPath -> a
    java.lang.String getUrlPath() -> a
com.example.zf_pad.entity.GoodinfoEntity -> com.example.zf_pad.c.k:
    java.lang.String lease_agreement -> a
    java.lang.String encrypt_card_way -> b
    java.lang.String sign_order_way -> c
    int retail_price -> d
    java.lang.String battery_info -> e
    int lease_price -> f
    java.lang.String Title -> g
    int id -> h
    java.lang.String shell_material -> i
    int lease_deposit -> j
    java.lang.String good_brand -> k
    java.lang.String category -> l
    int lease_time -> m
    int price -> n
    java.lang.String lease_description -> o
    java.lang.String description -> p
    int quantity -> q
    int return_time -> r
    java.lang.String second_title -> s
    boolean has_lease -> t
    java.lang.String Model_number -> u
    java.lang.String getLease_agreement() -> a
    java.lang.String getEncrypt_card_way() -> b
    java.lang.String getSign_order_way() -> c
    int getRetail_price() -> d
    java.lang.String getBattery_info() -> e
    int getLease_price() -> f
    java.lang.String getTitle() -> g
    int getId() -> h
    java.lang.String getShell_material() -> i
    int getLease_deposit() -> j
    java.lang.String getGood_brand() -> k
    java.lang.String getCategory() -> l
    int getLease_time() -> m
    int getPrice() -> n
    java.lang.String getLease_description() -> o
    java.lang.String getDescription() -> p
    int getQuantity() -> q
    int getReturn_time() -> r
    java.lang.String getSecond_title() -> s
    boolean isHas_lease() -> t
    java.lang.String getModel_number() -> u
com.example.zf_pad.entity.Goodlist -> com.example.zf_pad.c.l:
    java.lang.String score -> a
    java.lang.String content -> b
    int good_opening_cost -> c
    java.lang.String good_actualprice -> d
    java.lang.String good_name -> e
    java.lang.String good_logo -> f
    java.lang.String good_brand -> g
    java.lang.String good_price -> h
    java.lang.String good_num -> i
    java.lang.String good_channel -> j
    java.lang.String good_id -> k
    int getGood_opening_cost() -> a
    java.lang.String getScore() -> b
    void setScore(java.lang.String) -> a
    java.lang.String getContent() -> c
    void setContent(java.lang.String) -> b
    java.lang.String getGood_actualprice() -> d
    java.lang.String getGood_name() -> e
    java.lang.String getGood_logo() -> f
    java.lang.String getGood_brand() -> g
    java.lang.String getGood_price() -> h
    java.lang.String getGood_num() -> i
    java.lang.String getGood_channel() -> j
    java.lang.String getGood_id() -> k
com.example.zf_pad.entity.HotEntity -> com.example.zf_pad.c.m:
    java.lang.String title -> a
    java.lang.String id -> b
    java.lang.String getTitle() -> a
    java.lang.String getId() -> b
com.example.zf_pad.entity.MarkEntity -> com.example.zf_pad.c.n:
    java.lang.String marks_person -> a
    java.lang.String marks_time -> b
    java.lang.String marks_content -> c
    java.lang.String getMarks_person() -> a
    java.lang.String getMarks_time() -> b
    java.lang.String getMarks_content() -> c
com.example.zf_pad.entity.MessageEntity -> com.example.zf_pad.c.o:
    java.lang.String content -> a
    java.lang.String id -> b
    java.lang.String title -> c
    java.lang.String create_at -> d
    java.lang.Boolean ischeck -> e
    java.lang.Boolean status -> f
    java.lang.Boolean getStatus() -> a
    java.lang.Boolean getIscheck() -> b
    void setIscheck(java.lang.Boolean) -> a
    java.lang.String getContent() -> c
    java.lang.String getId() -> d
    java.lang.String getTitle() -> e
    java.lang.String getCreate_at() -> f
com.example.zf_pad.entity.MyShopCar -> com.example.zf_pad.c.p:
    java.util.List result -> a
    com.example.zf_pad.entity.MyShopCar getShopCar(java.lang.String) -> a
    boolean isGoodJson(java.lang.String) -> b
    java.util.List getResult() -> a
com.example.zf_pad.entity.MyShopCar$Good -> com.example.zf_pad.c.q:
    boolean isChecked -> a
    int id -> b
    java.lang.String title -> c
    java.lang.String url_path -> d
    java.lang.String name -> e
    int quantity -> f
    int retail_price -> g
    java.lang.String Model_number -> h
    java.lang.String good_brands -> i
    int opening_cost -> j
    java.lang.String getGood_brands() -> a
    int getOpening_cost() -> b
    int getId() -> c
    java.lang.String getTitle() -> d
    java.lang.String getUrl_path() -> e
    java.lang.String getName() -> f
    int getQuantity() -> g
    void setQuantity(int) -> a
    int getRetail_price() -> h
    java.lang.String getModel_number() -> i
    boolean isChecked() -> j
    void setChecked(boolean) -> a
com.example.zf_pad.entity.OrderDetailEntity -> com.example.zf_pad.c.r:
    java.lang.String order_number -> a
    java.lang.String order_receiver_phone -> b
    int need_invoice -> c
    java.lang.String order_payment_type -> d
    java.lang.String terminals -> e
    java.lang.String logistics_name -> f
    java.lang.String logistics_number -> g
    int bd_cost -> h
    java.lang.String order_comment -> i
    java.lang.String order_address -> j
    java.lang.String order_invoce_type -> k
    java.lang.String order_totalNum -> l
    int order_status -> m
    java.lang.String order_receiver -> n
    java.lang.String order_createTime -> o
    java.lang.String order_invoce_info -> p
    java.lang.String order_totalprice -> q
    com.example.zf_pad.entity.OrderDetailEntity$CommentG comments -> r
    java.util.List order_goodsList -> s
    int getNeed_invoice() -> a
    int getBd_cost() -> b
    java.lang.String getLogistics_name() -> c
    java.lang.String getLogistics_number() -> d
    java.lang.String getTerminals() -> e
    java.lang.String getOrder_number() -> f
    java.lang.String getOrder_receiver_phone() -> g
    java.lang.String getOrder_payment_type() -> h
    java.lang.String getOrder_comment() -> i
    java.lang.String getOrder_address() -> j
    java.lang.String getOrder_invoce_type() -> k
    java.lang.String getOrder_totalNum() -> l
    int getOrder_status() -> m
    java.lang.String getOrder_receiver() -> n
    java.lang.String getOrder_createTime() -> o
    java.lang.String getOrder_invoce_info() -> p
    java.lang.String getOrder_totalprice() -> q
    com.example.zf_pad.entity.OrderDetailEntity$CommentG getComments() -> r
    java.util.List getOrder_goodsList() -> s
com.example.zf_pad.entity.OrderDetailEntity$CommentG -> com.example.zf_pad.c.s:
    java.util.List content -> a
    java.util.List getContent() -> a
com.example.zf_pad.entity.OrderEntity -> com.example.zf_pad.c.t:
    java.lang.String order_number -> a
    java.lang.String order_type -> b
    int order_psf -> c
    java.lang.String order_createTime -> d
    java.lang.String order_totalNum -> e
    java.lang.String order_id -> f
    int order_totalPrice -> g
    int order_status -> h
    java.util.List order_goodsList -> i
    java.lang.String getOrder_type() -> a
    java.lang.String getOrder_totalNum() -> b
    java.lang.String getOrder_number() -> c
    int getOrder_psf() -> d
    java.lang.String getOrder_createTime() -> e
    java.lang.String getOrder_id() -> f
    int getOrder_totalPrice() -> g
    int getOrder_status() -> h
    java.util.List getOrder_goodsList() -> i
com.example.zf_pad.entity.PicEntity -> com.example.zf_pad.c.u:
    java.lang.String picture_url -> a
    java.lang.String goodid -> b
    java.lang.String getGoodid() -> a
    java.lang.String getPicture_url() -> b
com.example.zf_pad.entity.PortSon -> com.example.zf_pad.c.v:
    int id -> a
    java.lang.String value -> b
    int getId() -> a
    void setId(int) -> a
    java.lang.String getValue() -> b
    void setValue(java.lang.String) -> a
com.example.zf_pad.entity.PosEntity -> com.example.zf_pad.c.w:
    java.lang.Boolean has_lease -> a
    int volume_number -> b
    int id -> c
    int retail_price -> d
    java.lang.String pay_channe -> e
    java.lang.String Title -> f
    java.lang.String Model_number -> g
    java.lang.String url_path -> h
    java.lang.Boolean getHas_lease() -> a
    java.lang.String getUrl_path() -> b
    int getVolume_number() -> c
    int getId() -> d
    int getRetail_price() -> e
    java.lang.String getPay_channe() -> f
    java.lang.String getTitle() -> g
    java.lang.String getModel_number() -> h
com.example.zf_pad.entity.PosItem -> com.example.zf_pad.c.x:
    java.lang.Boolean isCheck -> a
    int id -> b
    java.lang.String value -> c
    java.util.List son -> d
    java.lang.Boolean getIsCheck() -> a
    void setIsCheck(java.lang.Boolean) -> a
    int getId() -> b
    java.lang.String getValue() -> c
    void setValue(java.lang.String) -> a
    java.util.List getSon() -> d
com.example.zf_pad.entity.PosSelectEntity -> com.example.zf_pad.c.y:
    java.util.List brands -> a
    java.util.List category -> b
    java.util.List sale_slip -> c
    java.util.List pay_card -> d
    java.util.List pay_channel -> e
    java.util.List trade_type -> f
    java.util.List tDate -> g
    java.util.List getCategory() -> a
    java.util.List getBrands() -> b
    java.util.List getSale_slip() -> c
    java.util.List getPay_card() -> d
    java.util.List getPay_channel() -> e
    java.util.List getTrade_type() -> f
    java.util.List gettDate() -> g
com.example.zf_pad.entity.PostPortEntity -> com.example.zf_pad.c.z:
    java.lang.String Title -> a
    java.util.List childlist -> b
    boolean isSeleck -> c
    boolean isMore -> d
    java.lang.String getTitle() -> a
    void setTitle(java.lang.String) -> a
    java.util.List getChildlist() -> b
    void setChildlist(java.util.List) -> a
    boolean isSeleck() -> c
    boolean isMore() -> d
    void setMore(boolean) -> a
com.example.zf_pad.entity.Score -> com.example.zf_pad.c.aa:
    long id -> a
    java.lang.String number -> b
    java.lang.String time -> c
    java.lang.String money -> d
    java.lang.String gotscore -> e
    java.lang.String scoretype -> f
    long getId() -> a
    java.lang.String getNumber() -> b
    java.lang.String getTime() -> c
    java.lang.String getMoney() -> d
    java.lang.String getGotscore() -> e
    java.lang.String getScoretype() -> f
    java.lang.String toString() -> toString
com.example.zf_pad.entity.Shopname -> com.example.zf_pad.c.ab:
    long id -> a
    java.lang.String shopname -> b
    java.lang.String title -> c
    java.lang.String getTitle() -> a
    long getId() -> b
    java.lang.String toString() -> toString
com.example.zf_pad.entity.TerminalApply -> com.example.zf_pad.c.ac:
    java.lang.String terminalNum -> a
    java.lang.String brandName -> b
    java.lang.String modelNumber -> c
    java.lang.String factorName -> d
    java.lang.String title -> e
    java.lang.String phone -> f
    java.lang.String orderNumber -> g
    java.lang.String createdAt -> h
    int status -> i
    int appId -> j
    int getAppId() -> a
    java.lang.String getTerminalNum() -> b
    java.lang.String getBrandName() -> c
    java.lang.String getModelNumber() -> d
    java.lang.String getFactorName() -> e
    java.lang.String getTitle() -> f
    java.lang.String getPhone() -> g
    java.lang.String getOrderNumber() -> h
    java.lang.String getCreatedAt() -> i
    int getStatus() -> j
com.example.zf_pad.entity.TerminalChannel -> com.example.zf_pad.c.ad:
    int id -> a
    java.lang.String name -> b
    int getId() -> a
    java.lang.String getName() -> b
com.example.zf_pad.entity.TerminalComment -> com.example.zf_pad.c.ae:
    java.lang.String content -> a
    java.lang.String name -> b
    java.lang.String createAt -> c
    java.lang.String getContent() -> a
    java.lang.String getName() -> b
    java.lang.String getCreateAt() -> c
com.example.zf_pad.entity.TerminalDetail -> com.example.zf_pad.c.af:
    com.example.zf_pad.entity.TerminalApply applyDetails -> a
    java.util.List openingDetails -> b
    java.util.List trackRecord -> c
    java.util.List rates -> d
    com.example.zf_pad.entity.TerminalApply getApplyDetails() -> a
    java.util.List getOpeningDetails() -> b
    java.util.List getTrackRecord() -> c
    java.util.List getRates() -> d
com.example.zf_pad.entity.TerminalManagerEntity -> com.example.zf_pad.c.ag:
    int id -> a
    java.lang.String posPortID -> b
    java.lang.String pos -> c
    java.lang.String posname -> d
    java.lang.String payChannel -> e
    int openState -> f
    java.lang.String type -> g
    java.lang.String appid -> h
    java.lang.String openingProtocol -> i
    int hasVideoVerify -> j
    java.lang.String openstatus -> k
    int getId() -> a
    java.lang.String getPosname() -> b
    java.lang.String getPosPortID() -> c
    java.lang.String getPos() -> d
    java.lang.String getPayChannel() -> e
    int getOpenState() -> f
    java.lang.String getType() -> g
    java.lang.String getAppid() -> h
    java.lang.String getOpeningProtocol() -> i
    int getHasVideoVerify() -> j
    java.lang.String getOpenstatus() -> k
com.example.zf_pad.entity.TerminalOpen -> com.example.zf_pad.c.ah:
    java.lang.String key -> a
    java.lang.String value -> b
    int types -> c
    java.lang.String getKey() -> a
    java.lang.String getValue() -> b
    int getTypes() -> c
com.example.zf_pad.entity.TerminalRate -> com.example.zf_pad.c.ai:
    java.lang.String type -> a
    float terminalRate -> b
    float serviceRate -> c
    float baseRate -> d
    int status -> e
    int trade_type -> f
    int getTrade_type() -> a
    java.lang.String getType() -> b
    float getTerminalRate() -> c
    float getServiceRate() -> d
    float getBaseRate() -> e
    int getStatus() -> f
com.example.zf_pad.entity.UserEntity -> com.example.zf_pad.c.aj:
    int id -> a
    java.lang.String username -> b
    int cityId -> c
    int getId() -> a
    void setId(int) -> a
    java.lang.String getUsername() -> b
    int getCityId() -> c
com.example.zf_pad.entity.VersionEntity -> com.example.zf_pad.c.ak:
    java.lang.String versions -> a
    java.lang.String down_url -> b
    java.lang.String getVersions() -> a
    java.lang.String getDown_url() -> b
com.example.zf_pad.entity.other_rate -> com.example.zf_pad.c.al:
    java.lang.String trade_value -> a
    java.lang.String description -> b
    int terminal_rate -> c
    java.lang.String getTrade_value() -> a
    java.lang.String getDescription() -> b
    int getTerminal_rate() -> c
com.example.zf_pad.entity.tDates -> com.example.zf_pad.c.am:
    int service_rate -> a
    java.lang.String description -> b
    java.lang.String name -> c
    int getService_rate() -> a
    java.lang.String getDescription() -> b
    java.lang.String getName() -> c
com.example.zf_pad.fragment.Constants -> com.example.zf_pad.fragment.a:
    int TEST_CUSTOMER -> a
    int CITY_ID_SEARCH -> b
    java.lang.String CITY_NAME_SEARCH -> c
com.example.zf_pad.fragment.F_good_detail -> com.example.zf_pad.fragment.F_good_detail:
    android.view.View view -> a
    android.widget.TextView ppxx -> b
    android.widget.TextView wkxx -> c
    android.widget.TextView tv_qgd -> d
    android.widget.TextView tv_jm -> e
    android.widget.TextView tvc_zx -> f
    android.widget.TextView tvc_qy -> g
    android.widget.TextView tv_spxx -> h
    android.widget.TextView tv_sqkt -> i
    com.example.zf_pad.util.ScrollViewWithGView gview -> j
    com.example.zf_pad.aadpter.GridviewAdapter gadapter -> k
    android.widget.TextView is_zc -> l
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.fragment.F_good_detail$1 -> com.example.zf_pad.fragment.b:
    com.example.zf_pad.fragment.F_good_detail this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.fragment.Good_detail_apply -> com.example.zf_pad.fragment.Good_detail_apply:
    android.view.View view -> c
    java.util.List pubList -> a
    java.util.List singleList -> b
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.fragment.Good_detail_commet -> com.example.zf_pad.fragment.Good_detail_commet:
    android.view.View view -> c
    com.example.zf_pad.util.XListView Xlistview -> d
    int page -> e
    int rows -> f
    android.widget.LinearLayout eva_nodata -> g
    boolean onRefresh_number -> h
    com.example.zf_pad.aadpter.GoodCommentAdapter myAdapter -> i
    java.util.List myList -> a
    java.util.List moreList -> b
    android.os.Handler handler -> j
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> c
    void onRefresh() -> a
    void onLoadMore() -> b
    void onLoad() -> d
    void getData() -> e
    void access$0(com.example.zf_pad.fragment.Good_detail_commet) -> a
    com.example.zf_pad.util.XListView access$1(com.example.zf_pad.fragment.Good_detail_commet) -> b
    android.widget.LinearLayout access$2(com.example.zf_pad.fragment.Good_detail_commet) -> c
    void access$3(com.example.zf_pad.fragment.Good_detail_commet,boolean) -> a
    com.example.zf_pad.aadpter.GoodCommentAdapter access$4(com.example.zf_pad.fragment.Good_detail_commet) -> d
    android.os.Handler access$5(com.example.zf_pad.fragment.Good_detail_commet) -> e
com.example.zf_pad.fragment.Good_detail_commet$1 -> com.example.zf_pad.fragment.c:
    com.example.zf_pad.fragment.Good_detail_commet this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.fragment.Good_detail_commet$2 -> com.example.zf_pad.fragment.d:
    com.example.zf_pad.fragment.Good_detail_commet this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.fragment.Good_detail_commet$3 -> com.example.zf_pad.fragment.e:
    com.example.zf_pad.fragment.Good_detail_commet this$0 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.fragment.Good_detail_commet$3$1 -> com.example.zf_pad.fragment.f:
    com.example.zf_pad.fragment.Good_detail_commet$3 this$1 -> a
com.example.zf_pad.fragment.Good_detail_main -> com.example.zf_pad.fragment.Good_detail_main:
    android.view.View view -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
com.example.zf_pad.fragment.Good_detail_pic -> com.example.zf_pad.fragment.Good_detail_pic:
    android.view.View view -> b
    java.util.List piclist -> a
    android.widget.ListView list -> c
    com.example.zf_pad.fragment.Good_detail_pic$MyAdapter adapter -> d
    int GoodId -> e
    void onCreate(android.os.Bundle) -> onCreate
    void getdata() -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    com.example.zf_pad.fragment.Good_detail_pic$MyAdapter access$0(com.example.zf_pad.fragment.Good_detail_pic) -> a
com.example.zf_pad.fragment.Good_detail_pic$1 -> com.example.zf_pad.fragment.g:
    com.example.zf_pad.fragment.Good_detail_pic this$0 -> a
    void onSuccess(java.util.List) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.fragment.Good_detail_pic$1$1 -> com.example.zf_pad.fragment.h:
    com.example.zf_pad.fragment.Good_detail_pic$1 this$1 -> a
com.example.zf_pad.fragment.Good_detail_pic$MyAdapter -> com.example.zf_pad.fragment.i:
    android.view.LayoutInflater inflater -> b
    android.widget.ImageView im -> c
    com.example.zf_pad.fragment.Good_detail_pic this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.zf_pad.fragment.Good_detail_trade -> com.example.zf_pad.fragment.Good_detail_trade:
    android.view.View view -> a
    com.example.zf_pad.aadpter.HuilvAdapter lvAdapter1 -> b
    com.example.zf_pad.aadpter.HuilvAdapter lvAdapter2 -> c
    com.example.zf_pad.aadpter.HuilvAdapter lvAdapter3 -> d
    com.example.zf_pad.util.ScrollViewWithListView pos_lv1 -> e
    com.example.zf_pad.util.ScrollViewWithListView pos_lv2 -> f
    com.example.zf_pad.util.ScrollViewWithListView pos_lv3 -> g
    java.util.List celist -> h
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.fragment.Good_detail_zd -> com.example.zf_pad.fragment.Good_detail_zd:
    android.view.View view -> b
    com.example.zf_pad.entity.GoodinfoEntity gfe -> a
    android.widget.TextView tv1 -> c
    android.widget.TextView tv2 -> d
    android.widget.TextView tv3 -> e
    android.widget.TextView tv4 -> f
    android.widget.TextView tv5 -> g
    java.text.DecimalFormat df -> h
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.fragment.M_MianFragment -> com.example.zf_pad.fragment.M_MianFragment:
    android.view.View view -> b
    android.widget.RelativeLayout main_rl_pos -> c
    android.widget.RelativeLayout main_rl_renzhen -> d
    android.widget.RelativeLayout main_rl_zdgl -> e
    android.widget.RelativeLayout main_rl_jyls -> f
    android.widget.RelativeLayout main_rl_Forum -> g
    android.widget.RelativeLayout main_rl_wylc -> h
    android.widget.RelativeLayout main_rl_xtgg -> i
    android.widget.RelativeLayout main_rl_lxwm -> j
    java.lang.String cityName -> k
    int cityId -> l
    android.widget.TextView cityTextView -> m
    com.example.zf_pad.trade.entity.Province province -> n
    com.example.zf_pad.trade.entity.City city -> o
    android.view.View citySelect -> p
    com.baidu.location.LocationClient mLocationClient -> q
    android.widget.TextView LocationResult -> r
    java.util.ArrayList mal -> s
    java.util.ArrayList myList -> t
    android.support.v4.view.ViewPager view_pager -> u
    com.example.zf_pad.fragment.M_MianFragment$MyAdapter adapter -> v
    android.widget.ImageView[] indicator_imgs -> w
    android.view.View item -> x
    android.view.LayoutInflater inflater -> y
    android.widget.ImageView image -> z
    int index_ima -> A
    java.util.ArrayList ma -> B
    java.util.List mCities -> C
    java.util.List list -> a
    android.os.Handler handler -> D
    java.util.Timer timer -> E
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void onClick(android.view.View) -> onClick
    void InitLocation() -> a
    void initView() -> b
    void getdata() -> c
    void initIndicator() -> d
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onStop() -> onStop
    void onPause() -> onPause
    java.util.ArrayList access$0(com.example.zf_pad.fragment.M_MianFragment) -> a
    android.view.LayoutInflater access$1(com.example.zf_pad.fragment.M_MianFragment) -> b
    void access$2(com.example.zf_pad.fragment.M_MianFragment,android.view.View) -> a
    android.view.View access$3(com.example.zf_pad.fragment.M_MianFragment) -> c
    java.util.ArrayList access$4(com.example.zf_pad.fragment.M_MianFragment) -> d
    void access$5(com.example.zf_pad.fragment.M_MianFragment,android.widget.ImageView[]) -> a
    void access$6(com.example.zf_pad.fragment.M_MianFragment) -> e
    com.example.zf_pad.fragment.M_MianFragment$MyAdapter access$7(com.example.zf_pad.fragment.M_MianFragment) -> f
    int access$8(com.example.zf_pad.fragment.M_MianFragment) -> g
    void access$9(com.example.zf_pad.fragment.M_MianFragment,int) -> a
    android.support.v4.view.ViewPager access$10(com.example.zf_pad.fragment.M_MianFragment) -> h
    void access$11(com.example.zf_pad.fragment.M_MianFragment,android.widget.ImageView) -> a
    android.widget.ImageView access$12(com.example.zf_pad.fragment.M_MianFragment) -> i
    android.widget.ImageView[] access$13(com.example.zf_pad.fragment.M_MianFragment) -> j
    void access$14(com.example.zf_pad.fragment.M_MianFragment,java.util.ArrayList) -> a
    android.os.Handler access$15(com.example.zf_pad.fragment.M_MianFragment) -> k
com.example.zf_pad.fragment.M_MianFragment$1 -> com.example.zf_pad.fragment.j:
    com.example.zf_pad.fragment.M_MianFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.fragment.M_MianFragment$2 -> com.example.zf_pad.fragment.k:
    com.example.zf_pad.fragment.M_MianFragment this$0 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.fragment.M_MianFragment$2$1 -> com.example.zf_pad.fragment.l:
    com.example.zf_pad.fragment.M_MianFragment$2 this$1 -> a
com.example.zf_pad.fragment.M_MianFragment$3 -> com.example.zf_pad.fragment.m:
    com.example.zf_pad.fragment.M_MianFragment this$0 -> a
    void run() -> run
com.example.zf_pad.fragment.M_MianFragment$MyAdapter -> com.example.zf_pad.fragment.n:
    java.util.List mList -> c
    int index -> d
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> a
    com.example.zf_pad.fragment.M_MianFragment this$0 -> b
    void setIndex(int) -> a
    int getCount() -> getCount
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    com.example.zf_pad.fragment.M_MianFragment access$0(com.example.zf_pad.fragment.M_MianFragment$MyAdapter) -> a
com.example.zf_pad.fragment.M_MianFragment$MyAdapter$1 -> com.example.zf_pad.fragment.o:
    com.example.zf_pad.fragment.M_MianFragment$MyAdapter this$1 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.fragment.M_MianFragment$MyListener -> com.example.zf_pad.fragment.p:
    com.example.zf_pad.fragment.M_MianFragment this$0 -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.example.zf_pad.fragment.M_my -> com.example.zf_pad.fragment.M_my:
    android.view.View view -> b
    android.widget.RelativeLayout ll_dd -> c
    android.widget.RelativeLayout ll_shjl -> d
    android.widget.RelativeLayout ll_myinfo -> e
    android.widget.RelativeLayout ll_mysh -> f
    android.widget.RelativeLayout ll_plan -> g
    com.example.zf_pad.fragment.Mine_Dd m_dd -> h
    com.example.zf_pad.fragment.Mine_Shjl m_shjl -> i
    com.example.zf_pad.fragment.Mine_MyInfo_nofrag m_info_nofrag -> j
    com.example.zf_pad.fragment.Mine_MyMerChant m_sh -> k
    com.example.zf_pad.fragment.Mine_Plan m_plan -> l
    android.widget.ImageView im1 -> m
    android.widget.ImageView im2 -> n
    android.widget.ImageView im3 -> o
    android.widget.ImageView im4 -> p
    android.widget.ImageView im5 -> q
    android.widget.TextView tvdd -> r
    android.widget.TextView tvshjv -> s
    android.widget.TextView tvwdxx -> t
    android.widget.TextView tvwdsh -> u
    android.widget.TextView tvsq -> v
    android.os.Message msg -> w
    boolean isHidden -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void initView() -> a
    void setback() -> b
    void onClick(android.view.View) -> onClick
    void onDestroyView() -> onDestroyView
    void onAttach(android.app.Activity) -> onAttach
    void onResume() -> onResume
    void onPause() -> onPause
com.example.zf_pad.fragment.M_shopcar -> com.example.zf_pad.fragment.M_shopcar:
    android.view.View view -> a
    com.example.zf_pad.util.XListView Xlistview -> b
    int page -> c
    int rows -> d
    android.widget.LinearLayout eva_nodata -> e
    boolean onRefresh_number -> f
    com.example.zf_pad.aadpter.ShopcarAdapter myAdapter -> g
    java.util.List myShopList -> h
    android.app.Dialog loadingDialog -> i
    android.os.Handler handler -> j
    android.widget.CheckBox cb -> k
    android.widget.TextView tv_gj -> l
    android.widget.TextView howMoney -> m
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void initView() -> c
    void onClick(android.view.View) -> onClick
    void onLoad() -> d
    void getData() -> e
    void onRefresh() -> a
    void onLoadMore() -> b
    void onResume() -> onResume
    void onPause() -> onPause
    void access$0(com.example.zf_pad.fragment.M_shopcar) -> a
    java.util.List access$1(com.example.zf_pad.fragment.M_shopcar) -> b
    void access$2(com.example.zf_pad.fragment.M_shopcar,android.app.Dialog) -> a
    android.app.Dialog access$3(com.example.zf_pad.fragment.M_shopcar) -> c
    void access$4(com.example.zf_pad.fragment.M_shopcar,java.util.List) -> a
    void access$5(com.example.zf_pad.fragment.M_shopcar,boolean) -> a
    void access$6(com.example.zf_pad.fragment.M_shopcar,com.example.zf_pad.aadpter.ShopcarAdapter) -> a
    com.example.zf_pad.util.XListView access$7(com.example.zf_pad.fragment.M_shopcar) -> d
    com.example.zf_pad.aadpter.ShopcarAdapter access$8(com.example.zf_pad.fragment.M_shopcar) -> e
    android.widget.LinearLayout access$9(com.example.zf_pad.fragment.M_shopcar) -> f
com.example.zf_pad.fragment.M_shopcar$1 -> com.example.zf_pad.fragment.q:
    com.example.zf_pad.fragment.M_shopcar this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.fragment.M_shopcar$2 -> com.example.zf_pad.fragment.r:
    com.example.zf_pad.fragment.M_shopcar this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.fragment.M_shopcar$3 -> com.example.zf_pad.fragment.s:
    com.example.zf_pad.fragment.M_shopcar this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.fragment.M_shopcar$4 -> com.example.zf_pad.fragment.t:
    com.example.zf_pad.fragment.M_shopcar this$0 -> a
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.fragment.M_wdxx -> com.example.zf_pad.fragment.M_wdxx:
    android.view.View view -> a
    com.example.zf_pad.util.XListView Xlistview -> b
    int page -> c
    int rows -> d
    java.lang.String Url -> e
    android.app.Dialog loadingDialog -> f
    android.widget.LinearLayout eva_nodata -> g
    boolean onRefresh_number -> h
    com.example.zf_pad.aadpter.MessageAdapter myAdapter -> i
    com.example.zf_pad.activity.MainActivity mActivity -> j
    java.util.List myList -> k
    java.util.List moreList -> l
    java.util.List selList -> m
    java.lang.String[] ids -> n
    boolean isFrist -> o
    android.os.Handler handler -> p
    android.widget.Button bt_bj -> q
    android.widget.Button bt_del -> r
    android.widget.CheckBox ckall -> s
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> c
    void onAttach(android.app.Activity) -> onAttach
    void onLoad() -> d
    void onClick(android.view.View) -> onClick
    void del_msg() -> e
    void read_bj() -> f
    void onRefresh() -> a
    void onLoadMore() -> b
    void getData(int) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void access$0(com.example.zf_pad.fragment.M_wdxx) -> a
    java.util.List access$1(com.example.zf_pad.fragment.M_wdxx) -> b
    com.example.zf_pad.util.XListView access$2(com.example.zf_pad.fragment.M_wdxx) -> c
    android.widget.LinearLayout access$3(com.example.zf_pad.fragment.M_wdxx) -> d
    void access$4(com.example.zf_pad.fragment.M_wdxx,boolean) -> a
    com.example.zf_pad.aadpter.MessageAdapter access$5(com.example.zf_pad.fragment.M_wdxx) -> e
    com.example.zf_pad.activity.MainActivity access$6(com.example.zf_pad.fragment.M_wdxx) -> f
    void access$7(com.example.zf_pad.fragment.M_wdxx,int) -> a
    android.app.Dialog access$8(com.example.zf_pad.fragment.M_wdxx) -> g
    java.util.List access$9(com.example.zf_pad.fragment.M_wdxx) -> h
    void access$10(com.example.zf_pad.fragment.M_wdxx,java.util.List) -> a
    android.os.Handler access$11(com.example.zf_pad.fragment.M_wdxx) -> i
    void access$12(com.example.zf_pad.fragment.M_wdxx,int) -> b
com.example.zf_pad.fragment.M_wdxx$1 -> com.example.zf_pad.fragment.u:
    com.example.zf_pad.fragment.M_wdxx this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.fragment.M_wdxx$2 -> com.example.zf_pad.fragment.v:
    com.example.zf_pad.fragment.M_wdxx this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.zf_pad.fragment.M_wdxx$3 -> com.example.zf_pad.fragment.w:
    com.example.zf_pad.fragment.M_wdxx this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.fragment.M_wdxx$4 -> com.example.zf_pad.fragment.x:
    com.example.zf_pad.fragment.M_wdxx this$0 -> a
    com.example.zf_pad.util.AlertDialog val$ad -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.fragment.M_wdxx$5 -> com.example.zf_pad.fragment.y:
    com.example.zf_pad.fragment.M_wdxx this$0 -> a
    com.example.zf_pad.util.AlertDialog val$ad -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.fragment.M_wdxx$6 -> com.example.zf_pad.fragment.z:
    com.example.zf_pad.fragment.M_wdxx this$0 -> a
    int val$type -> b
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.fragment.M_wdxx$6$1 -> com.example.zf_pad.fragment.aa:
    com.example.zf_pad.fragment.M_wdxx$6 this$1 -> a
com.example.zf_pad.fragment.MianFragment -> com.example.zf_pad.fragment.MianFragment:
    android.view.View view -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onAttach(android.app.Activity) -> onAttach
    void onClick(android.view.View) -> onClick
com.example.zf_pad.fragment.Mine_Address -> com.example.zf_pad.fragment.Mine_Address:
    android.view.View view -> g
    java.util.List dataadress -> a
    android.widget.BaseAdapter addressadapter -> h
    com.example.zf_pad.util.ScrollViewWithListView list -> i
    android.widget.Button btn_add -> j
    boolean isclickitem -> b
    android.widget.LinearLayout ll_address -> c
    android.os.Handler myHandler -> d
    int j -> k
    int id -> l
    int[] idd -> e
    int type -> f
    android.app.Activity mActivity -> m
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void onAttach(android.app.Activity) -> onAttach
    void getData() -> a
    void init() -> b
    void onClick(android.view.View) -> onClick
    void onStop() -> onStop
    android.app.Activity access$0(com.example.zf_pad.fragment.Mine_Address) -> a
    com.example.zf_pad.util.ScrollViewWithListView access$1(com.example.zf_pad.fragment.Mine_Address) -> b
    android.widget.BaseAdapter access$2(com.example.zf_pad.fragment.Mine_Address) -> c
    int access$3(com.example.zf_pad.fragment.Mine_Address) -> d
com.example.zf_pad.fragment.Mine_Address$1 -> com.example.zf_pad.fragment.ab:
    com.example.zf_pad.fragment.Mine_Address this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.fragment.Mine_Address$2 -> com.example.zf_pad.fragment.ac:
    android.app.Dialog loadingDialog -> b
    com.example.zf_pad.fragment.Mine_Address this$0 -> a
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.fragment.Mine_Dd -> com.example.zf_pad.fragment.Mine_Dd:
    android.view.View view -> e
    com.example.zf_pad.util.XListView Xlistview -> f
    int page -> g
    int rows -> h
    android.widget.LinearLayout eva_nodata -> i
    boolean onRefresh_number -> j
    com.example.zf_pad.aadpter.OrderAdapter myAdapter -> k
    java.lang.String type -> a
    java.util.List myList -> b
    java.util.List moreList -> c
    android.widget.LinearLayout ll_DD -> l
    android.os.Handler myHandler -> d
    android.os.Handler handler -> m
    android.widget.TextView tv_gm -> n
    android.widget.TextView tv_zl -> o
    android.app.Activity mactivity -> p
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void initView() -> d
    void onRefresh() -> a
    void onLoadMore() -> b
    void onLoad() -> e
    void DataChange() -> c
    void getData() -> f
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onAttach(android.app.Activity) -> onAttach
    void access$0(com.example.zf_pad.fragment.Mine_Dd) -> a
    com.example.zf_pad.util.XListView access$1(com.example.zf_pad.fragment.Mine_Dd) -> b
    void access$2(com.example.zf_pad.fragment.Mine_Dd,boolean) -> a
    com.example.zf_pad.aadpter.OrderAdapter access$3(com.example.zf_pad.fragment.Mine_Dd) -> c
    android.widget.LinearLayout access$4(com.example.zf_pad.fragment.Mine_Dd) -> d
    android.app.Activity access$5(com.example.zf_pad.fragment.Mine_Dd) -> e
    android.os.Handler access$6(com.example.zf_pad.fragment.Mine_Dd) -> f
com.example.zf_pad.fragment.Mine_Dd$1 -> com.example.zf_pad.fragment.ad:
    com.example.zf_pad.fragment.Mine_Dd this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.fragment.Mine_Dd$2 -> com.example.zf_pad.fragment.ae:
    com.example.zf_pad.fragment.Mine_Dd this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.fragment.Mine_Dd$3 -> com.example.zf_pad.fragment.af:
    com.example.zf_pad.fragment.Mine_Dd this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.fragment.Mine_Dd$4 -> com.example.zf_pad.fragment.ag:
    android.app.Dialog loadingDialog -> b
    com.example.zf_pad.fragment.Mine_Dd this$0 -> a
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.fragment.Mine_Dd$4$1 -> com.example.zf_pad.fragment.ah:
    com.example.zf_pad.fragment.Mine_Dd$4 this$1 -> a
com.example.zf_pad.fragment.Mine_MyInfo_nofrag -> com.example.zf_pad.fragment.Mine_MyInfo_nofrag:
    android.view.View view -> j
    int mRecordType -> a
    com.example.zf_pad.trade.widget.MTabWidget mTabWidget -> k
    boolean isHiddenn -> b
    android.widget.LinearLayout baseinfo_Layout -> l
    android.widget.LinearLayout changepaw_Layout -> m
    android.widget.LinearLayout manageradress_Layout -> n
    android.widget.LinearLayout score_Layout -> o
    android.widget.TextView tv_city_select -> p
    android.widget.TextView changephone -> q
    android.widget.TextView changeemail -> r
    int cityId -> s
    org.json.JSONObject result -> t
    android.os.Handler myHandler -> c
    android.widget.EditText et_name -> u
    android.widget.EditText et_phone -> v
    android.widget.EditText et_email -> w
    java.util.List provinces -> x
    java.util.List mCities -> y
    android.widget.Button btn_save -> z
    android.widget.Button btn_exit -> A
    java.lang.String pawwword -> d
    int id -> B
    android.widget.ScrollView sLV -> C
    android.content.SharedPreferences mySharedPreferences -> D
    android.app.Activity mActivity -> E
    android.widget.EditText et_oldpaw -> F
    android.widget.EditText et_newpaw -> G
    android.widget.EditText et_confirmpaw -> H
    android.widget.Button btn_save_chgpaw -> I
    java.util.List dataadress -> e
    android.widget.BaseAdapter addressadapter -> J
    com.example.zf_pad.util.ScrollViewWithListView list -> K
    android.widget.Button btn_add -> L
    boolean isclickitem -> f
    android.widget.LinearLayout ll_address -> g
    int j -> M
    int[] idd -> h
    int type -> i
    boolean isAddress -> N
    boolean isBaseinfo -> O
    boolean isChangepaw -> P
    java.util.List datasco -> Q
    java.util.List moreList -> R
    com.example.zf_pad.util.XListView xxlistview -> S
    android.widget.BaseAdapter scoreadapter -> T
    int customerId -> U
    int page -> V
    int rows -> W
    boolean isrefersh -> X
    boolean isLoadMore -> Y
    android.widget.Button btn_exchange -> Z
    android.widget.TextView tv_total -> aa
    int totalscore -> ab
    boolean isStop -> ac
    int price1 -> ad
    int sxfmoney -> ae
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void onResume() -> onResume
    void onAttach(android.app.Activity) -> onAttach
    void onPause() -> onPause
    void init() -> e
    void onDestroyView() -> onDestroyView
    void chang(int) -> a
    void onClick(android.view.View) -> onClick
    void Mine_baseinfo() -> f
    void getUserInfo() -> g
    java.lang.String findcity(int) -> b
    void changeUserinfo() -> h
    void Mine_chgpaw() -> i
    void changepaw() -> c
    boolean check() -> j
    void Mine_Address() -> k
    void getAddressData() -> l
    void Mine_score() -> m
    void getData() -> n
    void getscore() -> o
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onRefresh() -> a
    void onLoadMore() -> b
    void onLoad() -> d
    java.util.List access$0(com.example.zf_pad.fragment.Mine_MyInfo_nofrag) -> a
    com.example.zf_pad.util.XListView access$1(com.example.zf_pad.fragment.Mine_MyInfo_nofrag) -> b
    android.widget.BaseAdapter access$2(com.example.zf_pad.fragment.Mine_MyInfo_nofrag) -> c
    android.app.Activity access$3(com.example.zf_pad.fragment.Mine_MyInfo_nofrag) -> d
    void access$4(com.example.zf_pad.fragment.Mine_MyInfo_nofrag,org.json.JSONObject) -> a
    org.json.JSONObject access$5(com.example.zf_pad.fragment.Mine_MyInfo_nofrag) -> e
    android.widget.EditText access$6(com.example.zf_pad.fragment.Mine_MyInfo_nofrag) -> f
    android.widget.TextView access$7(com.example.zf_pad.fragment.Mine_MyInfo_nofrag) -> g
    android.widget.EditText access$8(com.example.zf_pad.fragment.Mine_MyInfo_nofrag) -> h
    android.widget.EditText access$9(com.example.zf_pad.fragment.Mine_MyInfo_nofrag) -> i
    android.widget.TextView access$10(com.example.zf_pad.fragment.Mine_MyInfo_nofrag) -> j
    android.widget.TextView access$11(com.example.zf_pad.fragment.Mine_MyInfo_nofrag) -> k
    com.example.zf_pad.util.ScrollViewWithListView access$12(com.example.zf_pad.fragment.Mine_MyInfo_nofrag) -> l
    android.widget.BaseAdapter access$13(com.example.zf_pad.fragment.Mine_MyInfo_nofrag) -> m
    int access$14(com.example.zf_pad.fragment.Mine_MyInfo_nofrag) -> n
    boolean access$15(com.example.zf_pad.fragment.Mine_MyInfo_nofrag) -> o
    void access$16(com.example.zf_pad.fragment.Mine_MyInfo_nofrag,int) -> a
    void access$17(com.example.zf_pad.fragment.Mine_MyInfo_nofrag,boolean) -> a
    void access$18(com.example.zf_pad.fragment.Mine_MyInfo_nofrag,int) -> b
    int access$19(com.example.zf_pad.fragment.Mine_MyInfo_nofrag) -> p
    void access$20(com.example.zf_pad.fragment.Mine_MyInfo_nofrag,boolean) -> b
    boolean access$21(com.example.zf_pad.fragment.Mine_MyInfo_nofrag) -> q
    void access$22(com.example.zf_pad.fragment.Mine_MyInfo_nofrag,boolean) -> c
    void access$23(com.example.zf_pad.fragment.Mine_MyInfo_nofrag,int) -> c
    void access$24(com.example.zf_pad.fragment.Mine_MyInfo_nofrag,int) -> d
    android.widget.TextView access$25(com.example.zf_pad.fragment.Mine_MyInfo_nofrag) -> r
    int access$26(com.example.zf_pad.fragment.Mine_MyInfo_nofrag) -> s
com.example.zf_pad.fragment.Mine_MyInfo_nofrag$1 -> com.example.zf_pad.fragment.ai:
    com.example.zf_pad.fragment.Mine_MyInfo_nofrag this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.fragment.Mine_MyInfo_nofrag$2 -> com.example.zf_pad.fragment.aj:
    android.app.Dialog loadingDialog -> b
    com.example.zf_pad.fragment.Mine_MyInfo_nofrag this$0 -> a
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.fragment.Mine_MyInfo_nofrag$3 -> com.example.zf_pad.fragment.ak:
    com.example.zf_pad.fragment.Mine_MyInfo_nofrag this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.fragment.Mine_MyInfo_nofrag$4 -> com.example.zf_pad.fragment.al:
    com.example.zf_pad.fragment.Mine_MyInfo_nofrag this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.fragment.Mine_MyInfo_nofrag$5 -> com.example.zf_pad.fragment.am:
    android.app.Dialog loadingDialog -> b
    com.example.zf_pad.fragment.Mine_MyInfo_nofrag this$0 -> a
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.fragment.Mine_MyInfo_nofrag$6 -> com.example.zf_pad.fragment.an:
    com.example.zf_pad.fragment.Mine_MyInfo_nofrag this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.fragment.Mine_MyInfo_nofrag$7 -> com.example.zf_pad.fragment.ao:
    com.example.zf_pad.fragment.Mine_MyInfo_nofrag this$0 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.fragment.Mine_MyInfo_nofrag$8 -> com.example.zf_pad.fragment.ap:
    android.app.Dialog loadingDialog -> b
    com.example.zf_pad.fragment.Mine_MyInfo_nofrag this$0 -> a
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.fragment.Mine_MyMerChant -> com.example.zf_pad.fragment.Mine_MyMerChant:
    android.view.View view -> c
    com.example.zf_pad.util.XListView xxlistview -> d
    java.util.List datasho -> e
    java.util.List moreList -> f
    android.widget.BaseAdapter shoaadapter -> g
    int page -> h
    int rows -> i
    android.os.Handler myHandler -> a
    android.widget.Button btn_creat -> j
    boolean isFromItem -> b
    int customerId -> k
    boolean isrefersh -> l
    int a -> m
    boolean isStop -> n
    boolean isLoadMore -> o
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void delect() -> c
    void onLoad() -> d
    void getData() -> e
    void init() -> f
    void onRefresh() -> a
    void onLoadMore() -> b
    android.widget.BaseAdapter access$0(com.example.zf_pad.fragment.Mine_MyMerChant) -> a
    java.util.List access$1(com.example.zf_pad.fragment.Mine_MyMerChant) -> b
    void access$2(com.example.zf_pad.fragment.Mine_MyMerChant,int) -> a
    void access$3(com.example.zf_pad.fragment.Mine_MyMerChant) -> c
    void access$4(com.example.zf_pad.fragment.Mine_MyMerChant,java.util.List) -> a
    java.util.List access$5(com.example.zf_pad.fragment.Mine_MyMerChant) -> d
    com.example.zf_pad.util.XListView access$6(com.example.zf_pad.fragment.Mine_MyMerChant) -> e
    int access$7(com.example.zf_pad.fragment.Mine_MyMerChant) -> f
    int access$8(com.example.zf_pad.fragment.Mine_MyMerChant) -> g
com.example.zf_pad.fragment.Mine_MyMerChant$1 -> com.example.zf_pad.fragment.aq:
    com.example.zf_pad.fragment.Mine_MyMerChant this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.fragment.Mine_MyMerChant$2 -> com.example.zf_pad.fragment.ar:
    android.app.Dialog loadingDialog -> b
    com.example.zf_pad.fragment.Mine_MyMerChant this$0 -> a
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.fragment.Mine_MyMerChant$3 -> com.example.zf_pad.fragment.as:
    android.app.Dialog loadingDialog -> b
    com.example.zf_pad.fragment.Mine_MyMerChant this$0 -> a
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.fragment.Mine_MyMerChant$3$1 -> com.example.zf_pad.fragment.at:
    com.example.zf_pad.fragment.Mine_MyMerChant$3 this$1 -> a
com.example.zf_pad.fragment.Mine_MyMerChant$4 -> com.example.zf_pad.fragment.au:
    com.example.zf_pad.fragment.Mine_MyMerChant this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.fragment.Mine_Plan -> com.example.zf_pad.fragment.Mine_Plan:
    android.view.View view -> a
    java.util.List dataser -> b
    android.widget.BaseAdapter applyadapter -> c
    android.widget.ListView lv_result -> d
    android.widget.Button btn_serch -> e
    android.widget.EditText et_process -> f
    android.widget.TextView apply_progress_tips -> g
    int id -> h
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void init() -> a
    void onClick(android.view.View) -> onClick
    java.util.List access$0(com.example.zf_pad.fragment.Mine_Plan) -> a
    android.widget.TextView access$1(com.example.zf_pad.fragment.Mine_Plan) -> b
    android.widget.ListView access$2(com.example.zf_pad.fragment.Mine_Plan) -> c
    android.widget.BaseAdapter access$3(com.example.zf_pad.fragment.Mine_Plan) -> d
com.example.zf_pad.fragment.Mine_Plan$1 -> com.example.zf_pad.fragment.av:
    com.example.zf_pad.fragment.Mine_Plan this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.example.zf_pad.fragment.Mine_Plan$2 -> com.example.zf_pad.fragment.aw:
    android.app.Dialog loadingDialog -> b
    com.example.zf_pad.fragment.Mine_Plan this$0 -> a
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.fragment.Mine_Shjl -> com.example.zf_pad.fragment.Mine_Shjl:
    android.view.View view -> c
    android.app.Activity mActivity -> a
    int mRecordType -> b
    com.example.zf_pad.trade.widget.XListView mListView -> d
    com.example.zf_pad.fragment.Mine_Shjl$RecordListAdapter mAdapter -> e
    java.util.List mEntities -> f
    int currentPage -> g
    int pageSize -> h
    int page -> i
    int total -> j
    int rows -> k
    com.example.zf_pad.trade.widget.MTabWidget mTabWidget -> l
    android.view.LayoutInflater mInflater -> m
    android.view.View$OnClickListener mCancelApplyListener -> n
    android.view.View$OnClickListener mSubmitMarkListener -> o
    android.view.View$OnClickListener mPayMaintainListener -> p
    android.view.View$OnClickListener mSubmitCancelListener -> q
    android.widget.TextView tv1 -> r
    android.widget.TextView tv2 -> s
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void onPause() -> onPause
    void init() -> c
    void loadData() -> d
    void loadFinished() -> e
    void initView() -> f
    void onAttach(android.app.Activity) -> onAttach
    void initButtonListeners() -> g
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void chang(int) -> a
    void onRefresh() -> a
    void onLoadMore() -> b
    void onResume() -> onResume
    java.util.List access$0(com.example.zf_pad.fragment.Mine_Shjl) -> a
    android.view.LayoutInflater access$1(com.example.zf_pad.fragment.Mine_Shjl) -> b
    android.view.View$OnClickListener access$2(com.example.zf_pad.fragment.Mine_Shjl) -> c
    android.view.View$OnClickListener access$3(com.example.zf_pad.fragment.Mine_Shjl) -> d
    android.view.View$OnClickListener access$4(com.example.zf_pad.fragment.Mine_Shjl) -> e
    android.view.View$OnClickListener access$5(com.example.zf_pad.fragment.Mine_Shjl) -> f
    int access$6(com.example.zf_pad.fragment.Mine_Shjl) -> g
    void access$7(com.example.zf_pad.fragment.Mine_Shjl,int) -> a
    void access$8(com.example.zf_pad.fragment.Mine_Shjl,int) -> b
    com.example.zf_pad.fragment.Mine_Shjl$RecordListAdapter access$9(com.example.zf_pad.fragment.Mine_Shjl) -> h
    void access$10(com.example.zf_pad.fragment.Mine_Shjl) -> i
com.example.zf_pad.fragment.Mine_Shjl$1 -> com.example.zf_pad.fragment.ax:
    android.app.Dialog loadingDialog -> b
    com.example.zf_pad.fragment.Mine_Shjl this$0 -> a
    void onSuccess(com.example.zf_pad.trade.common.Pageable) -> a
    void preLoad() -> b
    void postLoad() -> c
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.fragment.Mine_Shjl$1$1 -> com.example.zf_pad.fragment.ay:
    com.example.zf_pad.fragment.Mine_Shjl$1 this$1 -> a
com.example.zf_pad.fragment.Mine_Shjl$2 -> com.example.zf_pad.fragment.az:
    com.example.zf_pad.fragment.Mine_Shjl this$0 -> a
    void onClick(android.view.View) -> onClick
    com.example.zf_pad.fragment.Mine_Shjl access$0(com.example.zf_pad.fragment.Mine_Shjl$2) -> a
com.example.zf_pad.fragment.Mine_Shjl$2$1 -> com.example.zf_pad.fragment.ba:
    com.example.zf_pad.fragment.Mine_Shjl$2 this$1 -> a
    com.example.zf_pad.trade.entity.AfterSaleRecord val$record -> b
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.fragment.Mine_Shjl$3 -> com.example.zf_pad.fragment.bb:
    com.example.zf_pad.fragment.Mine_Shjl this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.fragment.Mine_Shjl$4 -> com.example.zf_pad.fragment.bc:
    com.example.zf_pad.fragment.Mine_Shjl this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.fragment.Mine_Shjl$5 -> com.example.zf_pad.fragment.bd:
    com.example.zf_pad.fragment.Mine_Shjl this$0 -> a
    void onClick(android.view.View) -> onClick
    com.example.zf_pad.fragment.Mine_Shjl access$0(com.example.zf_pad.fragment.Mine_Shjl$5) -> a
com.example.zf_pad.fragment.Mine_Shjl$5$1 -> com.example.zf_pad.fragment.be:
    com.example.zf_pad.fragment.Mine_Shjl$5 this$1 -> a
    com.example.zf_pad.trade.entity.AfterSaleRecord val$record -> b
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.fragment.Mine_Shjl$RecordListAdapter -> com.example.zf_pad.fragment.bf:
    com.example.zf_pad.fragment.Mine_Shjl this$0 -> a
    int getCount() -> getCount
    com.example.zf_pad.trade.entity.AfterSaleRecord getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    com.example.zf_pad.fragment.Mine_Shjl access$1(com.example.zf_pad.fragment.Mine_Shjl$RecordListAdapter) -> a
com.example.zf_pad.fragment.Mine_Shjl$RecordListAdapter$1 -> com.example.zf_pad.fragment.bg:
    com.example.zf_pad.fragment.Mine_Shjl$RecordListAdapter this$1 -> a
    com.example.zf_pad.trade.entity.AfterSaleRecord val$data -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.fragment.Mine_Shjl$ViewHolder -> com.example.zf_pad.fragment.bh:
    android.widget.TextView tvNumber -> a
    android.widget.TextView tvTime -> b
    android.widget.TextView tvTerminal -> c
    android.widget.TextView tvStatus -> d
    android.widget.LinearLayout llButtonContainer -> e
    android.widget.Button btnLeft -> f
    android.widget.Button btnRight -> g
    android.widget.Button btnCenter -> h
    android.widget.Button btnCenterBlank -> i
com.example.zf_pad.fragment.Mine_baseinfo -> com.example.zf_pad.fragment.Mine_baseinfo:
    android.view.View view -> c
    android.widget.TextView tv_city_select -> d
    android.widget.TextView changephone -> e
    android.widget.TextView changeemail -> f
    int cityId -> g
    org.json.JSONObject result -> h
    android.os.Handler myHandler -> a
    android.widget.EditText et_name -> i
    android.widget.EditText et_phone -> j
    android.widget.EditText et_email -> k
    java.util.List provinces -> l
    java.util.List mCities -> m
    android.widget.Button btn_save -> n
    android.widget.Button btn_exit -> o
    java.lang.String pawwword -> b
    int id -> p
    android.widget.ScrollView sLV -> q
    android.content.SharedPreferences mySharedPreferences -> r
    android.app.Activity mActivity -> s
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onStart() -> onStart
    void onAttach(android.app.Activity) -> onAttach
    java.lang.String findcity(int) -> a
    void getUserInfo() -> a
    void init() -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void changeUserinfo() -> c
    void onClick(android.view.View) -> onClick
    org.json.JSONObject access$0(com.example.zf_pad.fragment.Mine_baseinfo) -> a
    android.widget.EditText access$1(com.example.zf_pad.fragment.Mine_baseinfo) -> b
    android.widget.TextView access$2(com.example.zf_pad.fragment.Mine_baseinfo) -> c
    android.widget.EditText access$3(com.example.zf_pad.fragment.Mine_baseinfo) -> d
    android.widget.EditText access$4(com.example.zf_pad.fragment.Mine_baseinfo) -> e
    android.app.Activity access$5(com.example.zf_pad.fragment.Mine_baseinfo) -> f
    void access$6(com.example.zf_pad.fragment.Mine_baseinfo,org.json.JSONObject) -> a
com.example.zf_pad.fragment.Mine_baseinfo$1 -> com.example.zf_pad.fragment.bi:
    com.example.zf_pad.fragment.Mine_baseinfo this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.fragment.Mine_baseinfo$2 -> com.example.zf_pad.fragment.bj:
    android.app.Dialog loadingDialog -> b
    com.example.zf_pad.fragment.Mine_baseinfo this$0 -> a
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.fragment.Mine_baseinfo$3 -> com.example.zf_pad.fragment.bk:
    com.example.zf_pad.fragment.Mine_baseinfo this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.fragment.Mine_chgpaw -> com.example.zf_pad.fragment.Mine_chgpaw:
    android.view.View view -> a
    android.widget.EditText et_oldpaw -> b
    android.widget.EditText et_newpaw -> c
    android.widget.EditText et_confirmpaw -> d
    android.widget.Button btn_save -> e
    int id -> f
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void changepaw() -> a
    void init() -> b
    boolean check() -> c
    boolean access$0(com.example.zf_pad.fragment.Mine_chgpaw) -> a
com.example.zf_pad.fragment.Mine_chgpaw$1 -> com.example.zf_pad.fragment.bl:
    com.example.zf_pad.fragment.Mine_chgpaw this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.fragment.Mine_chgpaw$2 -> com.example.zf_pad.fragment.bm:
    com.example.zf_pad.fragment.Mine_chgpaw this$0 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.fragment.Mine_score -> com.example.zf_pad.fragment.Mine_score:
    android.view.View view -> a
    java.util.List datasco -> b
    java.util.List moreList -> c
    com.example.zf_pad.util.XListView xxlistview -> d
    android.widget.BaseAdapter scoreadapter -> e
    int customerId -> f
    int page -> g
    int rows -> h
    android.os.Handler myHandler -> i
    boolean isrefersh -> j
    boolean isLoadMore -> k
    android.widget.Button btn_exchange -> l
    android.widget.TextView tv_total -> m
    int totalscore -> n
    boolean isStop -> o
    int price1 -> p
    int sxfmoney -> q
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void onLoad() -> c
    void getData() -> d
    void getscore() -> e
    void init() -> f
    void onRefresh() -> a
    void onLoadMore() -> b
    java.util.List access$0(com.example.zf_pad.fragment.Mine_score) -> a
    com.example.zf_pad.util.XListView access$1(com.example.zf_pad.fragment.Mine_score) -> b
    android.widget.BaseAdapter access$2(com.example.zf_pad.fragment.Mine_score) -> c
    boolean access$3(com.example.zf_pad.fragment.Mine_score) -> d
    void access$4(com.example.zf_pad.fragment.Mine_score,int) -> a
    void access$5(com.example.zf_pad.fragment.Mine_score,boolean) -> a
    void access$6(com.example.zf_pad.fragment.Mine_score,int) -> b
    int access$7(com.example.zf_pad.fragment.Mine_score) -> e
    android.os.Handler access$8(com.example.zf_pad.fragment.Mine_score) -> f
    void access$9(com.example.zf_pad.fragment.Mine_score,boolean) -> b
    boolean access$10(com.example.zf_pad.fragment.Mine_score) -> g
    void access$11(com.example.zf_pad.fragment.Mine_score,boolean) -> c
    void access$12(com.example.zf_pad.fragment.Mine_score,int) -> c
    void access$13(com.example.zf_pad.fragment.Mine_score,int) -> d
    android.widget.TextView access$14(com.example.zf_pad.fragment.Mine_score) -> h
    int access$15(com.example.zf_pad.fragment.Mine_score) -> i
com.example.zf_pad.fragment.Mine_score$1 -> com.example.zf_pad.fragment.bn:
    com.example.zf_pad.fragment.Mine_score this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.fragment.Mine_score$2 -> com.example.zf_pad.fragment.bo:
    com.example.zf_pad.fragment.Mine_score this$0 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.fragment.Mine_score$3 -> com.example.zf_pad.fragment.bp:
    android.app.Dialog loadingDialog -> b
    com.example.zf_pad.fragment.Mine_score this$0 -> a
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.fragment.Mine_score$4 -> com.example.zf_pad.fragment.bq:
    com.example.zf_pad.fragment.Mine_score this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.popwindow.FactoryPopWindow -> com.example.zf_pad.d.a:
    android.view.View conentView -> a
    android.app.Activity context -> b
    android.widget.ImageView im -> c
    java.lang.String URl -> d
    java.lang.String t_title -> e
    java.lang.String t_text -> f
    android.widget.Button close -> g
    void initView() -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.popwindow.SetPopWindow -> com.example.zf_pad.d.b:
    android.view.View conentView -> a
    android.widget.ImageView img_on_off -> b
    java.lang.Boolean isOpen_mineset -> c
    android.content.SharedPreferences mySharedPreferences -> d
    android.content.SharedPreferences$Editor editor -> e
    android.widget.LinearLayout ll_new -> f
    android.widget.LinearLayout ll_clean -> g
    android.widget.TextView tv_clean -> h
    android.widget.TextView tv_type -> i
    android.app.Activity context -> j
    android.app.Dialog versionCheckingDialog -> k
    android.os.Handler handler -> l
    void initView() -> b
    void onClick(android.view.View) -> onClick
    void checkVersion() -> c
    void showVersionCheckingDialog() -> a
    void upgrading(java.lang.String) -> a
    void fileDownLoad(android.app.ProgressDialog,java.lang.String) -> a
    void access$0(com.example.zf_pad.popwindow.SetPopWindow,java.lang.String) -> a
    android.app.Activity access$1(com.example.zf_pad.popwindow.SetPopWindow) -> a
    android.os.Handler access$2(com.example.zf_pad.popwindow.SetPopWindow) -> b
    android.app.Dialog access$3(com.example.zf_pad.popwindow.SetPopWindow) -> c
com.example.zf_pad.popwindow.SetPopWindow$1 -> com.example.zf_pad.d.c:
    com.example.zf_pad.popwindow.SetPopWindow this$0 -> a
    void onSuccess(com.example.zf_pad.entity.VersionEntity) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.popwindow.SetPopWindow$1$1 -> com.example.zf_pad.d.d:
    com.example.zf_pad.popwindow.SetPopWindow$1 this$1 -> a
com.example.zf_pad.popwindow.SetPopWindow$2 -> com.example.zf_pad.d.e:
    com.example.zf_pad.popwindow.SetPopWindow this$0 -> a
    java.lang.String val$url -> b
    java.io.File val$file -> c
    com.example.zf_pad.popwindow.SetPopWindow$DownloadListener val$listener -> d
    void run() -> run
com.example.zf_pad.popwindow.SetPopWindow$DownloadListener -> com.example.zf_pad.d.f:
    android.content.Context sa -> a
    android.app.ProgressDialog pd -> b
    void downloading(int) -> a
    void downloaded(java.io.File) -> a
    void exception(java.lang.Exception) -> a
com.example.zf_pad.popwindow.SetPopWindow$VersionHandler -> com.example.zf_pad.d.g:
    android.content.Context context -> b
    com.example.zf_pad.popwindow.SetPopWindow this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.example.zf_pad.popwindow.SetPopWindow access$0(com.example.zf_pad.popwindow.SetPopWindow$VersionHandler) -> a
com.example.zf_pad.popwindow.SetPopWindow$VersionHandler$1 -> com.example.zf_pad.d.h:
    com.example.zf_pad.popwindow.SetPopWindow$VersionHandler this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.zf_pad.popwindow.SetPopWindow$VersionHandler$2 -> com.example.zf_pad.d.i:
    com.example.zf_pad.popwindow.SetPopWindow$VersionHandler this$1 -> a
    java.lang.String val$url -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.zf_pad.trade.ADownloadManagerActivity -> com.example.zf_pad.trade.ADownloadManagerActivity:
    int mRecordType -> a
    java.lang.String mUrl -> b
    android.webkit.WebView webview -> c
    android.app.ProgressDialog mDialog -> d
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void showProgressDialog() -> a
    void closeProgressDialog() -> b
    android.content.Intent getFileIntent(java.io.File) -> a
    void writeToSDCard(java.lang.String,java.io.InputStream) -> a
    java.lang.String getMIMEType(java.io.File) -> b
    void access$0(com.example.zf_pad.trade.ADownloadManagerActivity) -> a
    void access$1(com.example.zf_pad.trade.ADownloadManagerActivity) -> b
    void access$2(com.example.zf_pad.trade.ADownloadManagerActivity,android.app.ProgressDialog) -> a
com.example.zf_pad.trade.ADownloadManagerActivity$1 -> com.example.zf_pad.trade.a:
    com.example.zf_pad.trade.ADownloadManagerActivity this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.example.zf_pad.trade.ADownloadManagerActivity$DownloaderTask -> com.example.zf_pad.trade.b:
    com.example.zf_pad.trade.ADownloadManagerActivity this$0 -> a
    java.lang.String doInBackground(java.lang.String[]) -> a
    void onCancelled() -> onCancelled
    void onPostExecute(java.lang.String) -> a
    void onPreExecute() -> onPreExecute
    void onProgressUpdate(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.example.zf_pad.trade.ADownloadManagerActivity$MyWebViewClient -> com.example.zf_pad.trade.c:
    com.example.zf_pad.trade.ADownloadManagerActivity this$0 -> a
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
com.example.zf_pad.trade.ADownloadManagerActivity$MyWebViewDownLoadListener -> com.example.zf_pad.trade.d:
    com.example.zf_pad.trade.ADownloadManagerActivity this$0 -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
com.example.zf_pad.trade.API -> com.example.zf_pad.trade.e:
    com.google.gson.Gson gson -> a
    java.lang.String GET_USERINFO -> b
    java.lang.String CHANGE_USERINFO -> c
    java.lang.String CHANGE_PAW -> d
    java.lang.String GET_ADRESS -> e
    java.lang.String CREAT_MERCHANT -> f
    java.lang.String GET_MERCHANTLIST -> g
    java.lang.String total_score -> h
    java.lang.String exchange_score -> i
    java.lang.String DELECT_MERCHANTLIST -> j
    java.lang.String UPDATE_MERCHANT -> k
    java.lang.String UPDATE_FILE -> l
    java.lang.String APPLY_UPDATE_FILE -> m
    java.lang.String DELECT_ADDRESS -> n
    void getTerminalList(android.content.Context,int,com.example.zf_pad.trade.common.HttpCallback) -> a
    void getTradeRecordList(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,int,int,com.example.zf_pad.trade.common.HttpCallback) -> a
    void getTradeRecordStatistic(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,com.example.zf_pad.trade.common.HttpCallback) -> a
    void getTradeRecordDetail(android.content.Context,int,int,com.example.zf_pad.trade.common.HttpCallback) -> a
    void getAfterSaleRecordList(android.content.Context,int,int,int,int,com.example.zf_pad.trade.common.HttpCallback) -> a
    void getAfterSaleRecordDetail(android.content.Context,int,int,com.example.zf_pad.trade.common.HttpCallback) -> b
    void cancelAfterSaleApply(android.content.Context,int,int,com.example.zf_pad.trade.common.HttpCallback) -> c
    void resubmitCancel(android.content.Context,int,com.example.zf_pad.trade.common.HttpCallback) -> b
    void addMark(android.content.Context,int,int,int,java.lang.String,java.lang.String,com.example.zf_pad.trade.common.HttpCallback) -> a
    void getTerminalApplyList(android.content.Context,int,int,int,com.example.zf_pad.trade.common.HttpCallback) -> a
    void getChannelList(android.content.Context,com.example.zf_pad.trade.common.HttpCallback) -> a
    void addTerminal(android.content.Context,int,int,java.lang.String,java.lang.String,com.example.zf_pad.trade.common.HttpCallback) -> a
    void getTerminalDetail(android.content.Context,int,int,com.example.zf_pad.trade.common.HttpCallback) -> d
    void findPosPassword(android.content.Context,int,com.example.zf_pad.trade.common.HttpCallback) -> c
    void getApplyList(android.content.Context,int,int,int,com.example.zf_pad.trade.common.HttpCallback) -> b
    void getApplyDetail(android.content.Context,int,int,int,com.example.zf_pad.trade.common.HttpCallback) -> c
    void getApplyMerchantDetail(android.content.Context,int,com.example.zf_pad.trade.common.HttpCallback) -> d
    void getApplyChannelList(android.content.Context,com.example.zf_pad.trade.common.HttpCallback) -> b
    void ApiWantBug(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.example.zf_pad.trade.common.HttpCallback) -> a
    void Login1(android.content.Context,java.lang.String,java.lang.String,com.example.zf_pad.trade.common.HttpCallback) -> a
    void GOODCONFIRM(android.content.Context,int,int,int,int,int,java.lang.String,int,int,java.lang.String,com.example.zf_pad.trade.common.HttpCallback) -> a
    void GOODCONFIRM1(android.content.Context,int,int,int,int,int,java.lang.String,int,int,java.lang.String,com.example.zf_pad.trade.common.HttpCallback) -> b
    void CARTFIRM(android.content.Context,int,int[],int,java.lang.String,int,int,java.lang.String,java.lang.String,com.example.zf_pad.trade.common.HttpCallback) -> a
    void AddAdres(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,com.example.zf_pad.trade.common.HttpCallback) -> a
    void changeAdres(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,com.example.zf_pad.trade.common.HttpCallback) -> a
    void exchange(android.content.Context,int,java.lang.String,java.lang.String,int,com.example.zf_pad.trade.common.HttpCallback) -> a
    void AddAdres1(android.content.Context,java.lang.String,com.example.zf_pad.trade.common.HttpCallback) -> a
    void zhuche(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Boolean,com.example.zf_pad.trade.common.HttpCallback) -> a
    void PhonefindPass(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.example.zf_pad.trade.common.HttpCallback) -> b
    void getEmailPass(android.content.Context,java.lang.String,com.example.zf_pad.trade.common.HttpCallback) -> b
    void PostSearch(android.content.Context,java.lang.String,int,int,int,int,com.example.zf_pad.trade.common.HttpCallback) -> a
    void changeuserinfo(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,int,com.example.zf_pad.trade.common.HttpCallback) -> a
    void changepaw(android.content.Context,int,java.lang.String,java.lang.String,com.example.zf_pad.trade.common.HttpCallback) -> a
    void submitApply(android.content.Context,java.util.Map,com.example.zf_pad.trade.common.HttpCallback) -> a
    void insertmerchant(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,com.example.zf_pad.trade.common.HttpCallback) -> a
    void updatemerchant(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,com.example.zf_pad.trade.common.HttpCallback) -> b
    void getApplyBankList(android.content.Context,int,java.lang.String,int,java.lang.String,com.example.zf_pad.trade.common.HttpCallback) -> a
    void delectaddress(android.content.Context,int[],com.example.zf_pad.trade.common.HttpCallback) -> a
    void getMyOrderById(android.content.Context,int,com.example.zf_pad.trade.common.HttpCallback) -> e
    void getRepairPay(android.content.Context,int,com.example.zf_pad.trade.common.HttpCallback) -> f
    void noticeVideo(android.content.Context,int) -> a
    void synchronous(android.content.Context,java.lang.String,com.example.zf_pad.trade.common.HttpCallback) -> c
    void getUpdateEmailDentcode(android.content.Context,int,java.lang.String,com.example.zf_pad.trade.common.HttpCallback) -> a
    void getPhoneCode(android.content.Context,java.lang.String,com.example.zf_pad.trade.common.HttpCallback) -> d
    void getVersion(android.content.Context,int,com.example.zf_pad.trade.common.HttpCallback) -> g
    void registerBaidu(android.content.Context,int,java.lang.String,com.example.zf_pad.trade.common.HttpCallback) -> b
com.example.zf_pad.trade.AfterSaleDetailActivity -> com.example.zf_pad.trade.AfterSaleDetailActivity:
    int mRecordType -> b
    int mRecordId -> c
    int mRecordStatus -> d
    android.view.LayoutInflater mInflater -> e
    android.widget.TextView mStatus -> f
    android.widget.TextView mTime -> g
    android.widget.Button mButton1 -> h
    android.widget.Button mButton2 -> i
    android.widget.LinearLayout mCategoryContainer -> j
    android.widget.LinearLayout mCommentContainer -> k
    android.view.View$OnClickListener mCancelApplyListener -> l
    android.view.View$OnClickListener mSubmitMarkListener -> m
    android.view.View$OnClickListener mPayMaintainListener -> n
    android.view.View$OnClickListener mSubmitCancelListener -> o
    void onCreate(android.os.Bundle) -> onCreate
    void finish() -> finish
    void initViews() -> a
    void initButtonListeners() -> b
    void getData() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.widget.TextView createKeyText() -> d
    android.widget.TextView createValueText() -> e
    void renderCategoryTemplate(int,java.util.LinkedHashMap) -> a
    void renderMaterialTemplate(int,java.util.List) -> a
    int access$0(com.example.zf_pad.trade.AfterSaleDetailActivity) -> a
    int access$1(com.example.zf_pad.trade.AfterSaleDetailActivity) -> b
    void access$2(com.example.zf_pad.trade.AfterSaleDetailActivity,int) -> a
    android.widget.TextView access$3(com.example.zf_pad.trade.AfterSaleDetailActivity) -> c
    android.widget.Button access$4(com.example.zf_pad.trade.AfterSaleDetailActivity) -> d
    android.view.View$OnClickListener access$5(com.example.zf_pad.trade.AfterSaleDetailActivity) -> e
    android.view.View$OnClickListener access$6(com.example.zf_pad.trade.AfterSaleDetailActivity) -> f
    void access$7(com.example.zf_pad.trade.AfterSaleDetailActivity,int,java.util.LinkedHashMap) -> a
    android.widget.TextView access$8(com.example.zf_pad.trade.AfterSaleDetailActivity) -> g
    android.widget.Button access$9(com.example.zf_pad.trade.AfterSaleDetailActivity) -> h
    android.view.View$OnClickListener access$10(com.example.zf_pad.trade.AfterSaleDetailActivity) -> i
    android.view.View$OnClickListener access$11(com.example.zf_pad.trade.AfterSaleDetailActivity) -> j
    void access$12(com.example.zf_pad.trade.AfterSaleDetailActivity,int,java.util.List) -> a
    android.view.LayoutInflater access$13(com.example.zf_pad.trade.AfterSaleDetailActivity) -> k
    android.widget.LinearLayout access$14(com.example.zf_pad.trade.AfterSaleDetailActivity) -> l
com.example.zf_pad.trade.AfterSaleDetailActivity$1 -> com.example.zf_pad.trade.f:
    com.example.zf_pad.trade.AfterSaleDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.example.zf_pad.trade.AfterSaleDetailActivity access$0(com.example.zf_pad.trade.AfterSaleDetailActivity$1) -> a
com.example.zf_pad.trade.AfterSaleDetailActivity$1$1 -> com.example.zf_pad.trade.g:
    com.example.zf_pad.trade.AfterSaleDetailActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    com.example.zf_pad.trade.AfterSaleDetailActivity$1 access$0(com.example.zf_pad.trade.AfterSaleDetailActivity$1$1) -> a
com.example.zf_pad.trade.AfterSaleDetailActivity$1$1$1 -> com.example.zf_pad.trade.h:
    com.example.zf_pad.trade.AfterSaleDetailActivity$1$1 this$2 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.trade.AfterSaleDetailActivity$1$2 -> com.example.zf_pad.trade.i:
    com.example.zf_pad.trade.AfterSaleDetailActivity$1 this$1 -> a
    android.app.AlertDialog val$dialog -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.zf_pad.trade.AfterSaleDetailActivity$2 -> com.example.zf_pad.trade.j:
    com.example.zf_pad.trade.AfterSaleDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.AfterSaleDetailActivity$3 -> com.example.zf_pad.trade.k:
    com.example.zf_pad.trade.AfterSaleDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.AfterSaleDetailActivity$4 -> com.example.zf_pad.trade.l:
    com.example.zf_pad.trade.AfterSaleDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.example.zf_pad.trade.AfterSaleDetailActivity access$0(com.example.zf_pad.trade.AfterSaleDetailActivity$4) -> a
com.example.zf_pad.trade.AfterSaleDetailActivity$4$1 -> com.example.zf_pad.trade.m:
    com.example.zf_pad.trade.AfterSaleDetailActivity$4 this$1 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.trade.AfterSaleDetailActivity$5 -> com.example.zf_pad.trade.n:
    com.example.zf_pad.trade.AfterSaleDetailActivity this$0 -> a
    void onSuccess(com.example.zf_pad.trade.entity.AfterSaleDetail) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.trade.AfterSaleDetailActivity$5$1 -> com.example.zf_pad.trade.o:
    com.example.zf_pad.trade.AfterSaleDetailActivity$5 this$1 -> a
com.example.zf_pad.trade.AfterSaleDetailActivity$5$2 -> com.example.zf_pad.trade.p:
    com.example.zf_pad.trade.AfterSaleDetailActivity$5 this$1 -> a
com.example.zf_pad.trade.AfterSaleDetailActivity$5$3 -> com.example.zf_pad.trade.q:
    com.example.zf_pad.trade.AfterSaleDetailActivity$5 this$1 -> a
com.example.zf_pad.trade.AfterSaleDetailActivity$5$4 -> com.example.zf_pad.trade.r:
    com.example.zf_pad.trade.AfterSaleDetailActivity$5 this$1 -> a
com.example.zf_pad.trade.AfterSaleDetailActivity$5$5 -> com.example.zf_pad.trade.s:
    com.example.zf_pad.trade.AfterSaleDetailActivity$5 this$1 -> a
com.example.zf_pad.trade.AfterSaleDetailActivity$5$6 -> com.example.zf_pad.trade.t:
    com.example.zf_pad.trade.AfterSaleDetailActivity$5 this$1 -> a
com.example.zf_pad.trade.AfterSaleDetailActivity$6 -> com.example.zf_pad.trade.u:
    com.example.zf_pad.trade.AfterSaleDetailActivity this$0 -> a
    com.example.zf_pad.trade.entity.ResourceInfo val$resourceInfo -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.AfterSaleMarkActivity -> com.example.zf_pad.trade.AfterSaleMarkActivity:
    int mRecordType -> b
    int mRecordId -> c
    android.widget.EditText mCompanyEdit -> d
    android.widget.EditText mNumberEdit -> e
    android.widget.Button mSubmitBtn -> f
    android.widget.Button close -> g
    com.example.zf_pad.trade.common.TextWatcherAdapter mTextWatcher -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void updateUIWithValidation() -> a
    void access$0(com.example.zf_pad.trade.AfterSaleMarkActivity) -> a
    int access$1(com.example.zf_pad.trade.AfterSaleMarkActivity) -> b
    int access$2(com.example.zf_pad.trade.AfterSaleMarkActivity) -> c
    android.widget.EditText access$3(com.example.zf_pad.trade.AfterSaleMarkActivity) -> d
    android.widget.EditText access$4(com.example.zf_pad.trade.AfterSaleMarkActivity) -> e
com.example.zf_pad.trade.AfterSaleMarkActivity$1 -> com.example.zf_pad.trade.v:
    com.example.zf_pad.trade.AfterSaleMarkActivity this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.example.zf_pad.trade.AfterSaleMarkActivity$2 -> com.example.zf_pad.trade.w:
    com.example.zf_pad.trade.AfterSaleMarkActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.AfterSaleMarkActivity$3 -> com.example.zf_pad.trade.x:
    com.example.zf_pad.trade.AfterSaleMarkActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.example.zf_pad.trade.AfterSaleMarkActivity access$0(com.example.zf_pad.trade.AfterSaleMarkActivity$3) -> a
com.example.zf_pad.trade.AfterSaleMarkActivity$3$1 -> com.example.zf_pad.trade.y:
    com.example.zf_pad.trade.AfterSaleMarkActivity$3 this$1 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.trade.AfterSaleMaterialActivity -> com.example.zf_pad.trade.AfterSaleMaterialActivity:
    int mRecordType -> b
    java.lang.String mUrl -> c
    android.webkit.WebView mWebView -> d
    android.app.Dialog loadingDialog -> e
    void onCreate(android.os.Bundle) -> onCreate
    void initWebView() -> a
    android.app.Dialog access$0(com.example.zf_pad.trade.AfterSaleMaterialActivity) -> a
com.example.zf_pad.trade.AfterSaleMaterialActivity$1 -> com.example.zf_pad.trade.z:
    com.example.zf_pad.trade.AfterSaleMaterialActivity this$0 -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
com.example.zf_pad.trade.AfterSaleMaterialActivity$2 -> com.example.zf_pad.trade.aa:
    com.example.zf_pad.trade.AfterSaleMaterialActivity this$0 -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.example.zf_pad.trade.AfterSalePayActivity -> com.example.zf_pad.trade.AfterSalePayActivity:
    android.widget.TextView tv_pay -> c
    android.widget.LinearLayout titleback_linear_back -> d
    android.widget.LinearLayout ll_request -> e
    java.lang.String orderId -> f
    java.lang.String outTradeNo -> g
    java.lang.String subject -> h
    java.lang.String body -> i
    java.lang.String price -> j
    java.lang.String type -> k
    int mRecordType -> l
    boolean isPay -> b
    android.os.Handler handler -> m
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void dialogIntent() -> d
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void getData() -> e
    void success() -> a
    void handling() -> b
    void fail() -> c
    android.widget.TextView access$0(com.example.zf_pad.trade.AfterSalePayActivity) -> a
    java.lang.String access$1(com.example.zf_pad.trade.AfterSalePayActivity) -> b
    int access$2(com.example.zf_pad.trade.AfterSalePayActivity) -> c
    java.lang.String access$3(com.example.zf_pad.trade.AfterSalePayActivity) -> d
    void access$4(com.example.zf_pad.trade.AfterSalePayActivity,java.lang.String) -> a
    java.lang.String access$5(com.example.zf_pad.trade.AfterSalePayActivity) -> e
    void access$6(com.example.zf_pad.trade.AfterSalePayActivity,java.lang.String) -> b
    void access$7(com.example.zf_pad.trade.AfterSalePayActivity,java.lang.String) -> c
    void access$8(com.example.zf_pad.trade.AfterSalePayActivity,java.lang.String) -> d
    android.os.Handler access$9(com.example.zf_pad.trade.AfterSalePayActivity) -> f
com.example.zf_pad.trade.AfterSalePayActivity$1 -> com.example.zf_pad.trade.ab:
    com.example.zf_pad.trade.AfterSalePayActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.trade.AfterSalePayActivity$2 -> com.example.zf_pad.trade.ac:
    com.example.zf_pad.trade.AfterSalePayActivity this$0 -> a
    void change() -> a
com.example.zf_pad.trade.AfterSalePayActivity$3 -> com.example.zf_pad.trade.ad:
    com.example.zf_pad.trade.AfterSalePayActivity this$0 -> a
    void onSuccess(com.example.zf_pad.trade.entity.RepairPayEntity) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.trade.AfterSalePayActivity$3$1 -> com.example.zf_pad.trade.ae:
    com.example.zf_pad.trade.AfterSalePayActivity$3 this$1 -> a
com.example.zf_pad.trade.ApplyBankActivity -> com.example.zf_pad.trade.ApplyBankActivity:
    android.widget.LinearLayout titleback_linear_back -> b
    android.widget.TextView titleback_text_title -> c
    android.widget.TextView shuruneirong -> d
    android.widget.ImageView titleback_image_back -> e
    java.lang.String keyword -> f
    android.widget.EditText mBankInput -> g
    android.widget.ImageButton mBankSearch -> h
    android.widget.LinearLayout mResultContainer -> i
    java.util.List mBanks -> j
    com.example.zf_pad.util.XListView mBankList -> k
    com.example.zf_pad.trade.ApplyBankActivity$BankListAdapter mAdapter -> l
    com.example.zf_pad.entity.Bank mChosenBank -> m
    int page -> n
    int pageSize -> o
    int mTerminalId -> p
    java.util.List bank -> q
    boolean noMoreData -> r
    java.lang.String pullType -> s
    void onCreate(android.os.Bundle) -> onCreate
    void loadData() -> c
    void onClick(android.view.View) -> onClick
    void onRefresh() -> a
    void onLoadMore() -> b
    java.util.List access$0(com.example.zf_pad.trade.ApplyBankActivity) -> a
    com.example.zf_pad.entity.Bank access$1(com.example.zf_pad.trade.ApplyBankActivity) -> b
    android.widget.EditText access$2(com.example.zf_pad.trade.ApplyBankActivity) -> c
    android.widget.LinearLayout access$3(com.example.zf_pad.trade.ApplyBankActivity) -> d
    com.example.zf_pad.trade.ApplyBankActivity$BankListAdapter access$4(com.example.zf_pad.trade.ApplyBankActivity) -> e
com.example.zf_pad.trade.ApplyBankActivity$1 -> com.example.zf_pad.trade.af:
    com.example.zf_pad.trade.ApplyBankActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.ApplyBankActivity$2 -> com.example.zf_pad.trade.ag:
    com.example.zf_pad.trade.ApplyBankActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.ApplyBankActivity$3 -> com.example.zf_pad.trade.ah:
    com.example.zf_pad.trade.ApplyBankActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.ApplyBankActivity$4 -> com.example.zf_pad.trade.ai:
    com.example.zf_pad.trade.ApplyBankActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.trade.ApplyBankActivity$5 -> com.example.zf_pad.trade.aj:
    com.example.zf_pad.trade.ApplyBankActivity this$0 -> a
    void onSuccess(java.util.List) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.trade.ApplyBankActivity$5$1 -> com.example.zf_pad.trade.ak:
    com.example.zf_pad.trade.ApplyBankActivity$5 this$1 -> a
com.example.zf_pad.trade.ApplyBankActivity$BankListAdapter -> com.example.zf_pad.trade.al:
    com.example.zf_pad.trade.ApplyBankActivity this$0 -> a
    int getCount() -> getCount
    com.example.zf_pad.entity.Bank getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.example.zf_pad.trade.ApplyBankActivity$ViewHolder -> com.example.zf_pad.trade.am:
    android.widget.ImageView icon -> a
    android.widget.TextView name -> b
    android.widget.TextView id -> c
com.example.zf_pad.trade.ApplyChannelActivity -> com.example.zf_pad.trade.ApplyChannelActivity:
    java.util.List channels -> b
    java.util.List billings -> c
    android.widget.ListView channelList -> d
    android.widget.ListView billingList -> e
    com.example.zf_pad.trade.ApplyChannelActivity$ChannelListAdapter channelAdapter -> f
    com.example.zf_pad.trade.ApplyChannelActivity$BillingListAdapter billingAdapter -> g
    com.example.zf_pad.trade.entity.ApplyChannel chosenChannel -> h
    com.example.zf_pad.trade.entity.ApplyChannel$Billing chosenBilling -> i
    int mPayChannelID -> j
    void onCreate(android.os.Bundle) -> onCreate
    java.util.List access$0(com.example.zf_pad.trade.ApplyChannelActivity) -> a
    com.example.zf_pad.trade.entity.ApplyChannel$Billing access$1(com.example.zf_pad.trade.ApplyChannelActivity) -> b
    java.util.List access$2(com.example.zf_pad.trade.ApplyChannelActivity) -> c
    com.example.zf_pad.trade.entity.ApplyChannel access$3(com.example.zf_pad.trade.ApplyChannelActivity) -> d
    void access$4(com.example.zf_pad.trade.ApplyChannelActivity,com.example.zf_pad.trade.entity.ApplyChannel) -> a
    com.example.zf_pad.trade.ApplyChannelActivity$ChannelListAdapter access$5(com.example.zf_pad.trade.ApplyChannelActivity) -> e
    com.example.zf_pad.trade.ApplyChannelActivity$BillingListAdapter access$6(com.example.zf_pad.trade.ApplyChannelActivity) -> f
    android.widget.ListView access$7(com.example.zf_pad.trade.ApplyChannelActivity) -> g
    void access$8(com.example.zf_pad.trade.ApplyChannelActivity,com.example.zf_pad.trade.entity.ApplyChannel$Billing) -> a
    int access$9(com.example.zf_pad.trade.ApplyChannelActivity) -> h
com.example.zf_pad.trade.ApplyChannelActivity$1 -> com.example.zf_pad.trade.an:
    com.example.zf_pad.trade.ApplyChannelActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.trade.ApplyChannelActivity$2 -> com.example.zf_pad.trade.ao:
    com.example.zf_pad.trade.ApplyChannelActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.trade.ApplyChannelActivity$3 -> com.example.zf_pad.trade.ap:
    com.example.zf_pad.trade.ApplyChannelActivity this$0 -> a
    void onSuccess(java.util.List) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.trade.ApplyChannelActivity$3$1 -> com.example.zf_pad.trade.aq:
    com.example.zf_pad.trade.ApplyChannelActivity$3 this$1 -> a
com.example.zf_pad.trade.ApplyChannelActivity$4 -> com.example.zf_pad.trade.ar:
    com.example.zf_pad.trade.ApplyChannelActivity this$0 -> a
    void onSuccess(java.util.List) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.trade.ApplyChannelActivity$4$1 -> com.example.zf_pad.trade.as:
    com.example.zf_pad.trade.ApplyChannelActivity$4 this$1 -> a
com.example.zf_pad.trade.ApplyChannelActivity$BillingListAdapter -> com.example.zf_pad.trade.at:
    com.example.zf_pad.trade.ApplyChannelActivity this$0 -> a
    int getCount() -> getCount
    com.example.zf_pad.trade.entity.ApplyChannel$Billing getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.example.zf_pad.trade.ApplyChannelActivity$ChannelListAdapter -> com.example.zf_pad.trade.au:
    com.example.zf_pad.trade.ApplyChannelActivity this$0 -> a
    int getCount() -> getCount
    com.example.zf_pad.trade.entity.ApplyChannel getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.example.zf_pad.trade.ApplyChannelActivity$ViewHolder -> com.example.zf_pad.trade.av:
    android.widget.ImageView icon -> a
    android.widget.TextView name -> b
    android.widget.TextView id -> c
com.example.zf_pad.trade.ApplyChooseActivity -> com.example.zf_pad.trade.ApplyChooseActivity:
    int selectedId -> b
    android.widget.ListView mList -> c
    java.util.List chooseItems -> d
    void onCreate(android.os.Bundle) -> onCreate
    void loadData() -> a
com.example.zf_pad.trade.ApplyChooseActivity$1 -> com.example.zf_pad.trade.aw:
    com.example.zf_pad.trade.ApplyChooseActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.trade.ApplyListActivity -> com.example.zf_pad.trade.ApplyListActivity:
    android.view.LayoutInflater mInflater -> b
    com.example.zf_pad.util.XListView mApplyList -> c
    java.util.List mTerminalItems -> d
    com.example.zf_pad.trade.ApplyListActivity$ApplyListAdapter mAdapter -> e
    int page -> f
    int rows -> g
    boolean noMoreData -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initViews() -> c
    void loadData() -> d
    void openDialog(com.example.zf_pad.entity.TerminalManagerEntity) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onRefresh() -> a
    void onLoadMore() -> b
    void loadFinished() -> e
    java.util.List access$0(com.example.zf_pad.trade.ApplyListActivity) -> a
    android.view.LayoutInflater access$1(com.example.zf_pad.trade.ApplyListActivity) -> b
    void access$2(com.example.zf_pad.trade.ApplyListActivity,com.example.zf_pad.entity.TerminalManagerEntity) -> a
    void access$3(com.example.zf_pad.trade.ApplyListActivity,boolean) -> a
    int access$4(com.example.zf_pad.trade.ApplyListActivity) -> c
    void access$5(com.example.zf_pad.trade.ApplyListActivity,int) -> a
    com.example.zf_pad.trade.ApplyListActivity$ApplyListAdapter access$6(com.example.zf_pad.trade.ApplyListActivity) -> d
    void access$7(com.example.zf_pad.trade.ApplyListActivity) -> e
com.example.zf_pad.trade.ApplyListActivity$1 -> com.example.zf_pad.trade.ax:
    com.example.zf_pad.trade.ApplyListActivity this$0 -> a
    void onSuccess(java.util.List) -> a
    void preLoad() -> b
    void postLoad() -> c
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.trade.ApplyListActivity$1$1 -> com.example.zf_pad.trade.ay:
    com.example.zf_pad.trade.ApplyListActivity$1 this$1 -> a
com.example.zf_pad.trade.ApplyListActivity$2 -> com.example.zf_pad.trade.az:
    com.example.zf_pad.trade.ApplyListActivity this$0 -> a
    android.app.AlertDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.ApplyListActivity$3 -> com.example.zf_pad.trade.ba:
    com.example.zf_pad.trade.ApplyListActivity this$0 -> a
    android.widget.CheckBox val$cb -> b
    android.app.AlertDialog val$dialog -> c
    com.example.zf_pad.entity.TerminalManagerEntity val$item -> d
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.ApplyListActivity$ApplyListAdapter -> com.example.zf_pad.trade.bb:
    com.example.zf_pad.trade.ApplyListActivity this$0 -> a
    int getCount() -> getCount
    com.example.zf_pad.entity.TerminalManagerEntity getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    com.example.zf_pad.trade.ApplyListActivity access$1(com.example.zf_pad.trade.ApplyListActivity$ApplyListAdapter) -> a
com.example.zf_pad.trade.ApplyListActivity$ApplyListAdapter$1 -> com.example.zf_pad.trade.bc:
    com.example.zf_pad.trade.ApplyListActivity$ApplyListAdapter this$1 -> a
    com.example.zf_pad.entity.TerminalManagerEntity val$item -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.ApplyListActivity$ApplyListAdapter$2 -> com.example.zf_pad.trade.bd:
    com.example.zf_pad.trade.ApplyListActivity$ApplyListAdapter this$1 -> a
    com.example.zf_pad.entity.TerminalManagerEntity val$item -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.ApplyListActivity$ApplyListAdapter$3 -> com.example.zf_pad.trade.be:
    com.example.zf_pad.trade.ApplyListActivity$ApplyListAdapter this$1 -> a
    com.example.zf_pad.entity.TerminalManagerEntity val$item -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.ApplyListActivity$ViewHolder -> com.example.zf_pad.trade.bf:
    android.widget.TextView tvTerminalNumber -> a
    android.widget.TextView tvTerminalStatus -> b
    android.widget.TextView tv_postype -> c
    android.widget.TextView tvPayChannel -> d
    android.widget.Button btnOpen -> e
    android.widget.Button btnVideo -> f
com.example.zf_pad.trade.CityProvinceActivity -> com.example.zf_pad.trade.CityProvinceActivity:
    java.util.List mProvinces -> c
    com.example.zf_pad.trade.entity.Province mSelectedProvince -> d
    com.example.zf_pad.trade.entity.City mSelectedCity -> e
    boolean isClickconfirm -> b
    void onCreate(android.os.Bundle) -> onCreate
    com.example.zf_pad.trade.entity.Province access$0(com.example.zf_pad.trade.CityProvinceActivity) -> a
    com.example.zf_pad.trade.entity.City access$1(com.example.zf_pad.trade.CityProvinceActivity) -> b
    java.util.List access$2(com.example.zf_pad.trade.CityProvinceActivity) -> c
    void access$3(com.example.zf_pad.trade.CityProvinceActivity,com.example.zf_pad.trade.entity.Province) -> a
    void access$4(com.example.zf_pad.trade.CityProvinceActivity,com.example.zf_pad.trade.entity.City) -> a
    void access$5(com.example.zf_pad.trade.CityProvinceActivity,java.util.List) -> a
com.example.zf_pad.trade.CityProvinceActivity$1 -> com.example.zf_pad.trade.bg:
    com.example.zf_pad.trade.CityProvinceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.CityProvinceActivity$2 -> com.example.zf_pad.trade.bh:
    com.example.zf_pad.trade.CityProvinceActivity this$0 -> a
    com.example.zf_pad.trade.widget.WheelView val$cityWheel -> b
    void onSelected(int,java.lang.Object) -> a
com.example.zf_pad.trade.CityProvinceActivity$3 -> com.example.zf_pad.trade.bi:
    com.example.zf_pad.trade.CityProvinceActivity this$0 -> a
    void onSelected(int,java.lang.Object) -> a
com.example.zf_pad.trade.CityProvinceActivity$4 -> com.example.zf_pad.trade.bj:
    com.example.zf_pad.trade.CityProvinceActivity this$0 -> a
    com.example.zf_pad.trade.widget.WheelView val$provinceWheel -> b
    com.example.zf_pad.trade.widget.WheelView val$cityWheel -> c
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.trade.CityProvinceActivity$5 -> com.example.zf_pad.trade.bk:
    com.example.zf_pad.trade.CityProvinceActivity this$0 -> a
    android.os.Handler val$handler -> b
    void run() -> run
com.example.zf_pad.trade.CitySearchActivity -> com.example.zf_pad.trade.CitySearchActivity:
    android.widget.LinearLayout titleback_linear_back -> b
    android.widget.EditText searchEditText -> c
    android.widget.LinearLayout linear_deletename -> d
    android.widget.TextView next_cancel -> e
    android.widget.ListView mListView -> f
    android.widget.LinearLayout eva_nodata -> g
    java.util.List mCities -> h
    java.util.List searchCities -> i
    com.example.zf_pad.trade.CitySearchActivity$CitySearchAdapter adapter -> j
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void hideSoftKeyboard(android.app.Activity) -> a
    void onClick(android.view.View) -> onClick
    void initCities() -> b
    java.util.List access$0(com.example.zf_pad.trade.CitySearchActivity) -> a
    android.widget.LinearLayout access$1(com.example.zf_pad.trade.CitySearchActivity) -> b
    android.widget.EditText access$2(com.example.zf_pad.trade.CitySearchActivity) -> c
    void access$3(com.example.zf_pad.trade.CitySearchActivity) -> d
com.example.zf_pad.trade.CitySearchActivity$1 -> com.example.zf_pad.trade.bl:
    com.example.zf_pad.trade.CitySearchActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.trade.CitySearchActivity$2 -> com.example.zf_pad.trade.bm:
    com.example.zf_pad.trade.CitySearchActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.example.zf_pad.trade.CitySearchActivity$3 -> com.example.zf_pad.trade.bn:
    com.example.zf_pad.trade.CitySearchActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.example.zf_pad.trade.CitySearchActivity$CitySearchAdapter -> com.example.zf_pad.trade.bo:
    android.view.LayoutInflater inflater -> a
    com.example.zf_pad.trade.CitySearchActivity this$0 -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.zf_pad.trade.CitySearchActivity$CitySearchAdapter$ViewHolder -> com.example.zf_pad.trade.bp:
    android.widget.RelativeLayout type_pop -> a
    android.widget.TextView nameTextView -> b
    com.example.zf_pad.trade.CitySearchActivity$CitySearchAdapter this$1 -> c
com.example.zf_pad.trade.CitySelectActivity -> com.example.zf_pad.trade.CitySelectActivity:
    java.lang.String mCitySelected -> c
    android.widget.TextView mCityCurrent -> d
    android.widget.ImageView search -> e
    android.widget.TextView overlay -> f
    android.widget.ListView mListView -> g
    com.example.zf_pad.trade.widget.LetterListView mLetterListView -> h
    com.example.zf_pad.trade.CitySelectActivity$CityListAdapter mAdapter -> i
    android.os.Handler handler -> j
    java.lang.Thread overlayThread -> k
    java.util.List mCities -> l
    java.util.List mLetters -> m
    java.util.List mItems -> n
    android.app.Activity CitySelectActivity -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initCities() -> a
    void initViews() -> b
    void initOverlay() -> c
    int dip2px(float) -> a
    java.util.List access$0(com.example.zf_pad.trade.CitySelectActivity) -> a
    java.util.List access$1(com.example.zf_pad.trade.CitySelectActivity) -> b
    java.util.List access$2(com.example.zf_pad.trade.CitySelectActivity) -> c
    android.os.Handler access$3(com.example.zf_pad.trade.CitySelectActivity) -> d
    com.example.zf_pad.trade.CitySelectActivity$CityListAdapter access$4(com.example.zf_pad.trade.CitySelectActivity) -> e
    android.widget.TextView access$5(com.example.zf_pad.trade.CitySelectActivity) -> f
    android.widget.ListView access$6(com.example.zf_pad.trade.CitySelectActivity) -> g
    java.lang.Thread access$7(com.example.zf_pad.trade.CitySelectActivity) -> h
com.example.zf_pad.trade.CitySelectActivity$1 -> com.example.zf_pad.trade.bq:
    com.example.zf_pad.trade.CitySelectActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.CitySelectActivity$2 -> com.example.zf_pad.trade.br:
    com.example.zf_pad.trade.CitySelectActivity this$0 -> a
    void run() -> run
com.example.zf_pad.trade.CitySelectActivity$2$1 -> com.example.zf_pad.trade.bs:
    com.example.zf_pad.trade.CitySelectActivity$2 this$1 -> a
    int compare(com.example.zf_pad.trade.entity.City,com.example.zf_pad.trade.entity.City) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.example.zf_pad.trade.CitySelectActivity$3 -> com.example.zf_pad.trade.bt:
    com.example.zf_pad.trade.CitySelectActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.trade.CitySelectActivity$4 -> com.example.zf_pad.trade.bu:
    com.example.zf_pad.trade.CitySelectActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.trade.CitySelectActivity$5 -> com.example.zf_pad.trade.bv:
    com.example.zf_pad.trade.CitySelectActivity this$0 -> a
    void run() -> run
com.example.zf_pad.trade.CitySelectActivity$6 -> com.example.zf_pad.trade.bw:
    com.example.zf_pad.trade.CitySelectActivity this$0 -> a
    void onTouchingLetterChanged(java.lang.String) -> a
com.example.zf_pad.trade.CitySelectActivity$CityListAdapter -> com.example.zf_pad.trade.bx:
    com.example.zf_pad.trade.CitySelectActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.zf_pad.trade.CitySelectActivity$CityListAdapter$ViewHolder -> com.example.zf_pad.trade.by:
    android.widget.TextView tv -> a
    com.example.zf_pad.trade.CitySelectActivity$CityListAdapter this$1 -> b
com.example.zf_pad.trade.MyApplyDetail -> com.example.zf_pad.trade.MyApplyDetail:
    int mApplyType -> a
    com.example.zf_pad.trade.entity.MerchantForApply mMerchant -> b
    android.view.LayoutInflater mInflater -> c
    android.widget.TextView toPublic -> d
    android.widget.TextView toPrivate -> e
    android.widget.TextView mPosBrand -> f
    android.widget.TextView mPosModel -> g
    android.widget.TextView mSerialNum -> h
    android.widget.TextView mChannel -> i
    android.widget.TextView uploadingTextView -> j
    java.lang.String[] mMerchantKeys -> k
    java.lang.String[] mBankKeys -> l
    android.widget.LinearLayout mContainer -> m
    android.widget.LinearLayout mMerchantContainer_0 -> n
    android.widget.LinearLayout mMerchantContainer_1 -> o
    android.widget.LinearLayout mMerchantContainer_2 -> p
    android.widget.LinearLayout mCustomerContainer_1 -> q
    android.widget.LinearLayout mCustomerContainer_2 -> r
    android.widget.Button mApplySubmit -> s
    int mMerchantId -> t
    int mMerchantGender -> u
    int mTerminalId -> v
    int mTerminalStatus -> w
    com.example.zf_pad.trade.entity.Province mMerchantProvince -> x
    com.example.zf_pad.trade.entity.City mMerchantCity -> y
    java.lang.String photoPath -> z
    java.lang.String mUploadKey -> A
    java.lang.String mMerchantBirthday -> B
    android.widget.ImageButton uploadingImageButton -> C
    com.example.zf_pad.entity.Bank mChosenBank -> D
    com.example.zf_pad.trade.entity.ApplyChannel mChosenChannel -> E
    com.example.zf_pad.trade.entity.ApplyChannel$Billing mChosenBilling -> F
    android.view.View clickView -> G
    java.util.List mImageUrls -> H
    java.util.List mImageNames -> I
    java.util.List myApplyMaterials1 -> J
    java.util.List myApplyMaterials2 -> K
    java.util.LinkedHashMap mMaterials -> L
    com.example.zf_pad.util.ScrollViewWithGView gridView -> M
    com.example.zf_pad.util.ScrollViewWithGView gridView_ -> N
    com.example.zf_pad.trade.MyApplyDetail$ApplyListAdapter1 adapter1 -> O
    com.example.zf_pad.trade.MyApplyDetail$ApplyListAdapter2 adapter2 -> P
    java.lang.Boolean isBankName -> Q
    java.lang.Boolean isShopName -> R
    java.lang.String shopName -> S
    java.lang.String bankCode -> T
    int mPayChannelID -> U
    int supportRequirementType -> V
    void onCreate(android.os.Bundle) -> onCreate
    void initViews() -> a
    void loadData(int) -> a
    void setData(com.example.zf_pad.trade.entity.OpeningInfos) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void updateUIWithValidation() -> b
    void setItemValue(java.lang.String,java.lang.String) -> a
    java.lang.String getItemValue(java.lang.String) -> a
    void initMerchantDetailKeys() -> c
    void setMerchantDetailValues(com.example.zf_pad.trade.entity.MerchantForApply) -> a
    void startChooseItemActivity(int,java.lang.String,int,java.util.ArrayList) -> a
    void setCustomerDetail(java.util.List,java.util.List) -> a
    android.widget.LinearLayout getDetailItem(int,java.lang.String,java.lang.String) -> a
    void setupItem(android.widget.LinearLayout,int,java.lang.String,java.lang.String) -> a
    void access$0(com.example.zf_pad.trade.MyApplyDetail,android.view.View) -> a
    void access$1(com.example.zf_pad.trade.MyApplyDetail,java.lang.String) -> a
    java.util.List access$2(com.example.zf_pad.trade.MyApplyDetail) -> a
    java.util.List access$3(com.example.zf_pad.trade.MyApplyDetail) -> b
    android.widget.LinearLayout access$4(com.example.zf_pad.trade.MyApplyDetail,int,java.lang.String,java.lang.String) -> a
    int access$5(com.example.zf_pad.trade.MyApplyDetail) -> c
    com.example.zf_pad.entity.Bank access$6(com.example.zf_pad.trade.MyApplyDetail) -> d
    android.widget.TextView access$7(com.example.zf_pad.trade.MyApplyDetail) -> e
    android.widget.TextView access$8(com.example.zf_pad.trade.MyApplyDetail) -> f
    void access$9(com.example.zf_pad.trade.MyApplyDetail,int) -> a
    void access$10(com.example.zf_pad.trade.MyApplyDetail,int) -> b
    int access$11(com.example.zf_pad.trade.MyApplyDetail) -> g
    int access$12(com.example.zf_pad.trade.MyApplyDetail) -> h
    int access$13(com.example.zf_pad.trade.MyApplyDetail) -> i
    java.lang.String[] access$14(com.example.zf_pad.trade.MyApplyDetail) -> j
    java.lang.String access$15(com.example.zf_pad.trade.MyApplyDetail,java.lang.String) -> b
    int access$16(com.example.zf_pad.trade.MyApplyDetail) -> k
    com.example.zf_pad.trade.entity.City access$17(com.example.zf_pad.trade.MyApplyDetail) -> l
    java.lang.String[] access$18(com.example.zf_pad.trade.MyApplyDetail) -> m
    java.lang.String access$19(com.example.zf_pad.trade.MyApplyDetail) -> n
    com.example.zf_pad.trade.entity.ApplyChannel access$20(com.example.zf_pad.trade.MyApplyDetail) -> o
    com.example.zf_pad.trade.entity.ApplyChannel$Billing access$21(com.example.zf_pad.trade.MyApplyDetail) -> p
    java.util.LinkedHashMap access$22(com.example.zf_pad.trade.MyApplyDetail) -> q
    android.widget.LinearLayout access$23(com.example.zf_pad.trade.MyApplyDetail) -> r
    android.widget.TextView access$24(com.example.zf_pad.trade.MyApplyDetail) -> s
    android.widget.TextView access$25(com.example.zf_pad.trade.MyApplyDetail) -> t
    android.widget.TextView access$26(com.example.zf_pad.trade.MyApplyDetail) -> u
    android.widget.TextView access$27(com.example.zf_pad.trade.MyApplyDetail) -> v
    void access$28(com.example.zf_pad.trade.MyApplyDetail,int) -> c
    void access$29(com.example.zf_pad.trade.MyApplyDetail,int) -> d
    int access$30(com.example.zf_pad.trade.MyApplyDetail) -> w
    android.widget.LinearLayout access$31(com.example.zf_pad.trade.MyApplyDetail) -> x
    android.widget.LinearLayout access$32(com.example.zf_pad.trade.MyApplyDetail) -> y
    android.widget.LinearLayout access$33(com.example.zf_pad.trade.MyApplyDetail) -> z
    android.widget.LinearLayout access$34(com.example.zf_pad.trade.MyApplyDetail) -> A
    void access$35(com.example.zf_pad.trade.MyApplyDetail) -> B
    android.widget.LinearLayout access$36(com.example.zf_pad.trade.MyApplyDetail) -> C
    void access$37(com.example.zf_pad.trade.MyApplyDetail,int,java.lang.String,int,java.util.ArrayList) -> a
    void access$38(com.example.zf_pad.trade.MyApplyDetail,java.util.List) -> a
    void access$39(com.example.zf_pad.trade.MyApplyDetail,java.util.List) -> b
    void access$40(com.example.zf_pad.trade.MyApplyDetail,java.util.List,java.util.List) -> a
    java.util.List access$41(com.example.zf_pad.trade.MyApplyDetail) -> D
    void access$42(com.example.zf_pad.trade.MyApplyDetail,com.example.zf_pad.trade.MyApplyDetail$ApplyListAdapter1) -> a
    java.util.List access$43(com.example.zf_pad.trade.MyApplyDetail) -> E
    void access$44(com.example.zf_pad.trade.MyApplyDetail,com.example.zf_pad.trade.MyApplyDetail$ApplyListAdapter2) -> a
    com.example.zf_pad.trade.MyApplyDetail$ApplyListAdapter1 access$45(com.example.zf_pad.trade.MyApplyDetail) -> F
    com.example.zf_pad.trade.MyApplyDetail$ApplyListAdapter2 access$46(com.example.zf_pad.trade.MyApplyDetail) -> G
    com.example.zf_pad.util.ScrollViewWithGView access$47(com.example.zf_pad.trade.MyApplyDetail) -> H
    com.example.zf_pad.util.ScrollViewWithGView access$48(com.example.zf_pad.trade.MyApplyDetail) -> I
    void access$49(com.example.zf_pad.trade.MyApplyDetail,int) -> e
    void access$50(com.example.zf_pad.trade.MyApplyDetail,java.lang.String) -> c
    void access$51(com.example.zf_pad.trade.MyApplyDetail,com.example.zf_pad.trade.entity.OpeningInfos) -> a
    void access$52(com.example.zf_pad.trade.MyApplyDetail) -> J
    void access$53(com.example.zf_pad.trade.MyApplyDetail,com.example.zf_pad.trade.entity.Province) -> a
    void access$54(com.example.zf_pad.trade.MyApplyDetail,com.example.zf_pad.trade.entity.City) -> a
    void access$55(com.example.zf_pad.trade.MyApplyDetail,java.lang.String,java.lang.String) -> a
    void access$56(com.example.zf_pad.trade.MyApplyDetail,com.example.zf_pad.trade.entity.MerchantForApply) -> a
    void access$57(com.example.zf_pad.trade.MyApplyDetail,com.example.zf_pad.trade.entity.MerchantForApply) -> b
    android.widget.TextView access$58(com.example.zf_pad.trade.MyApplyDetail) -> K
    android.widget.ImageButton access$59(com.example.zf_pad.trade.MyApplyDetail) -> L
    android.view.View access$60(com.example.zf_pad.trade.MyApplyDetail) -> M
    java.lang.String access$61(com.example.zf_pad.trade.MyApplyDetail) -> N
    void access$62(com.example.zf_pad.trade.MyApplyDetail,int) -> f
    java.lang.String access$63(com.example.zf_pad.trade.MyApplyDetail) -> O
    com.example.zf_pad.trade.entity.Province access$64(com.example.zf_pad.trade.MyApplyDetail) -> P
    int access$65(com.example.zf_pad.trade.MyApplyDetail) -> Q
    void access$66(com.example.zf_pad.trade.MyApplyDetail,android.widget.TextView) -> a
    void access$67(com.example.zf_pad.trade.MyApplyDetail,android.widget.ImageButton) -> a
    void access$68(com.example.zf_pad.trade.MyApplyDetail,java.lang.String) -> d
com.example.zf_pad.trade.MyApplyDetail$1 -> com.example.zf_pad.trade.bz:
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.MyApplyDetail$10 -> com.example.zf_pad.trade.ca:
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    void onClick(android.view.View) -> onClick
    com.example.zf_pad.trade.MyApplyDetail access$0(com.example.zf_pad.trade.MyApplyDetail$10) -> a
com.example.zf_pad.trade.MyApplyDetail$10$1 -> com.example.zf_pad.trade.cb:
    com.example.zf_pad.trade.MyApplyDetail$10 this$1 -> a
    void onDateSet(java.lang.String) -> a
com.example.zf_pad.trade.MyApplyDetail$11 -> com.example.zf_pad.trade.cc:
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.MyApplyDetail$12 -> com.example.zf_pad.trade.cd:
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.MyApplyDetail$13 -> com.example.zf_pad.trade.ce:
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.MyApplyDetail$14 -> com.example.zf_pad.trade.cf:
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    void onCityFound(com.example.zf_pad.trade.entity.Province,com.example.zf_pad.trade.entity.City) -> a
com.example.zf_pad.trade.MyApplyDetail$15 -> com.example.zf_pad.trade.cg:
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.example.zf_pad.trade.MyApplyDetail$16 -> com.example.zf_pad.trade.ch:
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.example.zf_pad.trade.MyApplyDetail$17 -> com.example.zf_pad.trade.ci:
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    android.widget.TextView val$tvValue -> b
    android.widget.ImageButton val$uploadingSuccess -> c
    java.lang.String val$key -> d
    void onClick(android.view.View) -> onClick
    com.example.zf_pad.trade.MyApplyDetail access$0(com.example.zf_pad.trade.MyApplyDetail$17) -> a
com.example.zf_pad.trade.MyApplyDetail$17$1 -> com.example.zf_pad.trade.cj:
    com.example.zf_pad.trade.MyApplyDetail$17 this$1 -> a
    java.lang.String val$key -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.zf_pad.trade.MyApplyDetail$2 -> com.example.zf_pad.trade.ck:
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.MyApplyDetail$3 -> com.example.zf_pad.trade.cl:
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    void onClick(android.view.View) -> onClick
    com.example.zf_pad.trade.MyApplyDetail access$0(com.example.zf_pad.trade.MyApplyDetail$3) -> a
com.example.zf_pad.trade.MyApplyDetail$3$1 -> com.example.zf_pad.trade.cm:
    com.example.zf_pad.trade.MyApplyDetail$3 this$1 -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.trade.MyApplyDetail$4 -> com.example.zf_pad.trade.cn:
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    void onSuccess(com.example.zf_pad.trade.entity.My_ApplyDetail) -> a
    void onFailure(java.lang.String) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
    com.example.zf_pad.trade.MyApplyDetail access$1(com.example.zf_pad.trade.MyApplyDetail$4) -> a
com.example.zf_pad.trade.MyApplyDetail$4$1 -> com.example.zf_pad.trade.co:
    com.example.zf_pad.trade.MyApplyDetail$4 this$1 -> a
    java.util.List val$merchants -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.MyApplyDetail$4$2 -> com.example.zf_pad.trade.cp:
    com.example.zf_pad.trade.MyApplyDetail$4 this$1 -> a
com.example.zf_pad.trade.MyApplyDetail$5 -> com.example.zf_pad.trade.cq:
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    void onCityFound(com.example.zf_pad.trade.entity.Province,com.example.zf_pad.trade.entity.City) -> a
com.example.zf_pad.trade.MyApplyDetail$6 -> com.example.zf_pad.trade.cr:
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    void onSuccess(com.example.zf_pad.trade.entity.MerchantForApply) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.trade.MyApplyDetail$6$1 -> com.example.zf_pad.trade.cs:
    com.example.zf_pad.trade.MyApplyDetail$6 this$1 -> a
com.example.zf_pad.trade.MyApplyDetail$7 -> com.example.zf_pad.trade.ct:
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.trade.MyApplyDetail$8 -> com.example.zf_pad.trade.cu:
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    android.os.Handler val$handler -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.example.zf_pad.trade.MyApplyDetail$9 -> com.example.zf_pad.trade.cv:
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    void onClick(android.view.View) -> onClick
    com.example.zf_pad.trade.MyApplyDetail access$0(com.example.zf_pad.trade.MyApplyDetail$9) -> a
com.example.zf_pad.trade.MyApplyDetail$9$1 -> com.example.zf_pad.trade.cw:
    com.example.zf_pad.trade.MyApplyDetail$9 this$1 -> a
    java.lang.String[] val$items -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.zf_pad.trade.MyApplyDetail$ApplyListAdapter1 -> com.example.zf_pad.trade.cx:
    java.util.List materialList1 -> b
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    long getItemId(int) -> getItemId
    com.example.zf_pad.trade.entity.MyApplyMaterial getItem(int) -> a
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.example.zf_pad.trade.MyApplyDetail$ApplyListAdapter2 -> com.example.zf_pad.trade.cy:
    java.util.List materialList2 -> b
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    long getItemId(int) -> getItemId
    com.example.zf_pad.trade.entity.MyApplyMaterial getItem(int) -> a
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    com.example.zf_pad.trade.MyApplyDetail access$1(com.example.zf_pad.trade.MyApplyDetail$ApplyListAdapter2) -> a
com.example.zf_pad.trade.MyApplyDetail$ApplyListAdapter2$1 -> com.example.zf_pad.trade.cz:
    com.example.zf_pad.trade.MyApplyDetail$ApplyListAdapter2 this$1 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.MyApplyDetail$onWatchListener -> com.example.zf_pad.trade.da:
    com.example.zf_pad.trade.MyApplyDetail this$0 -> a
    void onClick(android.view.View) -> onClick
    com.example.zf_pad.trade.MyApplyDetail access$1(com.example.zf_pad.trade.MyApplyDetail$onWatchListener) -> a
com.example.zf_pad.trade.MyApplyDetail$onWatchListener$1 -> com.example.zf_pad.trade.db:
    com.example.zf_pad.trade.MyApplyDetail$onWatchListener this$1 -> a
    java.lang.String val$uri -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.zf_pad.trade.TradeClientActivity -> com.example.zf_pad.trade.TradeClientActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
com.example.zf_pad.trade.TradeClientActivity$1 -> com.example.zf_pad.trade.dc:
    com.example.zf_pad.trade.TradeClientActivity this$0 -> a
    java.lang.String val$selectedNumber -> b
    java.util.List val$items -> c
    android.widget.SimpleAdapter val$adapter -> d
    void onSuccess(java.util.List) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.trade.TradeClientActivity$1$1 -> com.example.zf_pad.trade.dd:
    com.example.zf_pad.trade.TradeClientActivity$1 this$1 -> a
com.example.zf_pad.trade.TradeDetailActivity -> com.example.zf_pad.trade.TradeDetailActivity:
    android.widget.LinearLayout mCommercialKeyContainer -> b
    android.widget.LinearLayout mCommercialValueContainer -> c
    android.widget.LinearLayout mBankKeyContainer -> d
    android.widget.LinearLayout mBankValueContainer -> e
    android.widget.TextView mTradeStatus -> f
    android.widget.TextView mTradeAmount -> g
    android.widget.TextView mTradePoundage -> h
    android.widget.TextView mTradeTime -> i
    int typeId -> j
    java.lang.String[] bankKeys -> k
    void onCreate(android.os.Bundle) -> onCreate
    void initialViews() -> a
    android.widget.TextView access$0(com.example.zf_pad.trade.TradeDetailActivity) -> a
    android.widget.TextView access$1(com.example.zf_pad.trade.TradeDetailActivity) -> b
    android.widget.TextView access$2(com.example.zf_pad.trade.TradeDetailActivity) -> c
    android.widget.TextView access$3(com.example.zf_pad.trade.TradeDetailActivity) -> d
    android.widget.LinearLayout access$4(com.example.zf_pad.trade.TradeDetailActivity) -> e
    int access$5(com.example.zf_pad.trade.TradeDetailActivity) -> f
    void access$6(com.example.zf_pad.trade.TradeDetailActivity,java.lang.String[]) -> a
    java.lang.String[] access$7(com.example.zf_pad.trade.TradeDetailActivity) -> g
    android.widget.LinearLayout access$8(com.example.zf_pad.trade.TradeDetailActivity) -> h
com.example.zf_pad.trade.TradeDetailActivity$1 -> com.example.zf_pad.trade.de:
    com.example.zf_pad.trade.TradeDetailActivity this$0 -> a
    void onSuccess(com.example.zf_pad.trade.entity.TradeDetail) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.trade.TradeDetailActivity$1$1 -> com.example.zf_pad.trade.df:
    com.example.zf_pad.trade.TradeDetailActivity$1 this$1 -> a
com.example.zf_pad.trade.TradeFlowActivity -> com.example.zf_pad.trade.TradeFlowActivity:
    com.example.zf_pad.trade.widget.MyTabWidget mTabWidget -> a
    com.example.zf_pad.trade.widget.MyViewPager mViewPager -> b
    java.util.List mFragments -> c
    void onCreate(android.os.Bundle) -> onCreate
    void initViews() -> a
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPause() -> onPause
    void onResume() -> onResume
    java.util.List access$0(com.example.zf_pad.trade.TradeFlowActivity) -> a
com.example.zf_pad.trade.TradeFlowActivity$TradeFlowPagerAdapter -> com.example.zf_pad.trade.TradeFlowActivity$TradeFlowPagerAdapter:
    com.example.zf_pad.trade.TradeFlowActivity this$0 -> a
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
com.example.zf_pad.trade.TradeFlowFragment -> com.example.zf_pad.trade.TradeFlowFragment:
    int mTradeType -> a
    android.view.View mTradeClient -> b
    android.widget.TextView mTradeClientName -> c
    android.widget.TextView textView1 -> d
    android.widget.TextView textView2 -> e
    android.widget.TextView textView3 -> f
    android.widget.TextView textView4 -> g
    android.widget.TextView textView5 -> h
    android.widget.TextView textView6 -> i
    android.view.View mTradeStart -> j
    android.widget.TextView mTradeStartDate -> k
    android.view.View mTradeEnd -> l
    android.widget.TextView mTradeEndDate -> m
    android.widget.Button mTradeSearch -> n
    android.widget.Button mTradeStatistic -> o
    android.widget.LinearLayout mTradeSearchContent -> p
    java.lang.String tradeClientName -> q
    java.lang.String tradeStartDate -> r
    java.lang.String tradeEndDate -> s
    android.view.LayoutInflater mInflater -> t
    android.widget.ListView mRecordList -> u
    com.example.zf_pad.trade.TradeFlowFragment$TradeRecordListAdapter mAdapter -> v
    java.util.List mRecords -> w
    boolean hasSearched -> x
    java.lang.String mPageName -> y
    java.text.DecimalFormat df -> z
    android.view.WindowManager$LayoutParams lp -> A
    android.widget.PopupWindow popuSelState -> B
    com.example.zf_pad.aadpter.SelectStateAdapter selStateAdapter -> C
    java.util.List dataTradeClient -> D
    com.example.zf_pad.trade.TradeFlowFragment newInstance(int) -> a
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initViews(android.view.View) -> a
    void onDetach() -> onDetach
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onClick(android.view.View) -> onClick
    void popSelectTradeClient() -> a
    void getTerminalList() -> b
    void toggleButtons() -> c
    void showDatePicker(java.lang.String,boolean) -> a
    void onPause() -> onPause
    void onResume() -> onResume
    java.util.List access$0(com.example.zf_pad.trade.TradeFlowFragment) -> a
    android.view.LayoutInflater access$1(com.example.zf_pad.trade.TradeFlowFragment) -> b
    int access$2(com.example.zf_pad.trade.TradeFlowFragment) -> c
    java.text.DecimalFormat access$3(com.example.zf_pad.trade.TradeFlowFragment) -> d
    com.example.zf_pad.trade.TradeFlowFragment$TradeRecordListAdapter access$4(com.example.zf_pad.trade.TradeFlowFragment) -> e
    android.widget.TextView access$5(com.example.zf_pad.trade.TradeFlowFragment) -> f
    java.util.List access$6(com.example.zf_pad.trade.TradeFlowFragment) -> g
    void access$7(com.example.zf_pad.trade.TradeFlowFragment,java.lang.String) -> a
    void access$8(com.example.zf_pad.trade.TradeFlowFragment) -> h
    android.widget.PopupWindow access$9(com.example.zf_pad.trade.TradeFlowFragment) -> i
    android.view.WindowManager$LayoutParams access$10(com.example.zf_pad.trade.TradeFlowFragment) -> j
    void access$11(com.example.zf_pad.trade.TradeFlowFragment,java.util.List) -> a
    android.widget.TextView access$12(com.example.zf_pad.trade.TradeFlowFragment) -> k
    void access$13(com.example.zf_pad.trade.TradeFlowFragment,java.lang.String) -> b
    java.lang.String access$14(com.example.zf_pad.trade.TradeFlowFragment) -> l
    android.widget.TextView access$15(com.example.zf_pad.trade.TradeFlowFragment) -> m
    void access$16(com.example.zf_pad.trade.TradeFlowFragment,java.lang.String) -> c
com.example.zf_pad.trade.TradeFlowFragment$1 -> com.example.zf_pad.trade.dg:
    com.example.zf_pad.trade.TradeFlowFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.trade.TradeFlowFragment$2 -> com.example.zf_pad.trade.dh:
    com.example.zf_pad.trade.TradeFlowFragment this$0 -> a
    void onSuccess(com.example.zf_pad.trade.common.Page) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.trade.TradeFlowFragment$2$1 -> com.example.zf_pad.trade.di:
    com.example.zf_pad.trade.TradeFlowFragment$2 this$1 -> a
com.example.zf_pad.trade.TradeFlowFragment$3 -> com.example.zf_pad.trade.dj:
    com.example.zf_pad.trade.TradeFlowFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.zf_pad.trade.TradeFlowFragment$4 -> com.example.zf_pad.trade.dk:
    com.example.zf_pad.trade.TradeFlowFragment this$0 -> a
    void onDismiss() -> onDismiss
com.example.zf_pad.trade.TradeFlowFragment$5 -> com.example.zf_pad.trade.dl:
    com.example.zf_pad.trade.TradeFlowFragment this$0 -> a
    void onSuccess(java.util.List) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.trade.TradeFlowFragment$5$1 -> com.example.zf_pad.trade.dm:
    com.example.zf_pad.trade.TradeFlowFragment$5 this$1 -> a
com.example.zf_pad.trade.TradeFlowFragment$6 -> com.example.zf_pad.trade.dn:
    com.example.zf_pad.trade.TradeFlowFragment this$0 -> a
    java.util.Calendar val$c -> b
    boolean val$isStartDate -> c
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    com.example.zf_pad.trade.TradeFlowFragment access$0(com.example.zf_pad.trade.TradeFlowFragment$6) -> a
com.example.zf_pad.trade.TradeFlowFragment$6$1 -> com.example.zf_pad.trade.do:
    com.example.zf_pad.trade.TradeFlowFragment$6 this$1 -> a
    boolean val$isStartDate -> b
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.example.zf_pad.trade.TradeFlowFragment$TradeRecordListAdapter -> com.example.zf_pad.trade.dp:
    com.example.zf_pad.trade.TradeFlowFragment this$0 -> a
    int getCount() -> getCount
    com.example.zf_pad.trade.entity.TradeRecord getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.example.zf_pad.trade.TradeFlowFragment$ViewHolder -> com.example.zf_pad.trade.dq:
    android.widget.TextView tvStatus -> a
    android.widget.TextView tvTime -> b
    android.widget.TextView tvAccount -> c
    android.widget.TextView tvReceiveAccount -> d
    android.widget.TextView tvClientNumber -> e
    android.widget.TextView tvAmount -> f
com.example.zf_pad.trade.TradeStatisticActivity -> com.example.zf_pad.trade.TradeStatisticActivity:
    int mTradeType -> b
    java.lang.String mStartDate -> c
    java.lang.String mEndDate -> d
    java.lang.String mClientNumber -> e
    android.widget.TextView statisticAmount -> f
    android.widget.TextView statisticCount -> g
    android.widget.TextView statisticTime -> h
    android.widget.TextView statisticClient -> i
    android.widget.TextView statisticChannel -> j
    void onCreate(android.os.Bundle) -> onCreate
    void initViews() -> a
    android.widget.TextView access$0(com.example.zf_pad.trade.TradeStatisticActivity) -> a
    android.widget.TextView access$1(com.example.zf_pad.trade.TradeStatisticActivity) -> b
    android.widget.TextView access$2(com.example.zf_pad.trade.TradeStatisticActivity) -> c
    java.lang.String access$3(com.example.zf_pad.trade.TradeStatisticActivity) -> d
    java.lang.String access$4(com.example.zf_pad.trade.TradeStatisticActivity) -> e
    android.widget.TextView access$5(com.example.zf_pad.trade.TradeStatisticActivity) -> f
    android.widget.TextView access$6(com.example.zf_pad.trade.TradeStatisticActivity) -> g
com.example.zf_pad.trade.TradeStatisticActivity$1 -> com.example.zf_pad.trade.dr:
    com.example.zf_pad.trade.TradeStatisticActivity this$0 -> a
    void onSuccess(com.example.zf_pad.trade.entity.TradeStatistic) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
    void onSuccess(java.lang.Object) -> a
com.example.zf_pad.trade.TradeStatisticActivity$1$1 -> com.example.zf_pad.trade.ds:
    com.example.zf_pad.trade.TradeStatisticActivity$1 this$1 -> a
com.example.zf_pad.trade.common.CommonUtil -> com.example.zf_pad.trade.a.a:
    void copy(android.content.Context,java.lang.String) -> a
    void toastShort(android.content.Context,java.lang.String) -> b
    void calcViewMeasure(android.view.View) -> a
    int dip2px(android.content.Context,float) -> a
    java.util.List readProvincesAndCities(android.content.Context) -> a
    void showDatePicker(android.support.v4.app.FragmentActivity,java.lang.String,com.example.zf_pad.trade.common.CommonUtil$OnDateSetListener) -> a
    void findCityById(android.content.Context,java.lang.Integer,com.example.zf_pad.trade.common.CommonUtil$OnCityFoundListener) -> a
com.example.zf_pad.trade.common.CommonUtil$1 -> com.example.zf_pad.trade.a.b:
com.example.zf_pad.trade.common.CommonUtil$2 -> com.example.zf_pad.trade.a.c:
    java.util.Calendar val$c -> a
    com.example.zf_pad.trade.common.CommonUtil$OnDateSetListener val$listener -> b
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
com.example.zf_pad.trade.common.CommonUtil$2$1 -> com.example.zf_pad.trade.a.d:
    com.example.zf_pad.trade.common.CommonUtil$2 this$1 -> a
    com.example.zf_pad.trade.common.CommonUtil$OnDateSetListener val$listener -> b
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.example.zf_pad.trade.common.CommonUtil$3 -> com.example.zf_pad.trade.a.e:
    com.example.zf_pad.trade.common.CommonUtil$OnCityFoundListener val$listener -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.trade.common.CommonUtil$4 -> com.example.zf_pad.trade.a.f:
    android.content.Context val$context -> a
    java.lang.Integer val$id -> b
    android.os.Handler val$handler -> c
    void run() -> run
com.example.zf_pad.trade.common.CommonUtil$OnCityFoundListener -> com.example.zf_pad.trade.a.g:
    void onCityFound(com.example.zf_pad.trade.entity.Province,com.example.zf_pad.trade.entity.City) -> a
com.example.zf_pad.trade.common.CommonUtil$OnDateSetListener -> com.example.zf_pad.trade.a.h:
    void onDateSet(java.lang.String) -> a
com.example.zf_pad.trade.common.DialogUtil -> com.example.zf_pad.trade.a.i:
    android.app.Dialog getLoadingDialg(android.app.Activity) -> a
    int getScreenWidth(android.app.Activity) -> b
com.example.zf_pad.trade.common.HttpCallback -> com.example.zf_pad.trade.a.j:
    android.content.Context context -> a
    android.app.Dialog loadingDialog -> b
    void preLoad() -> b
    void postLoad() -> c
    void onFailure(java.lang.String) -> a
    void onSuccess(java.lang.Object) -> a
    com.google.gson.reflect.TypeToken getTypeToken() -> a
com.example.zf_pad.trade.common.HttpRequest -> com.example.zf_pad.trade.a.k:
    com.loopj.android.http.AsyncHttpClient client -> a
    android.content.Context context -> b
    com.loopj.android.http.TextHttpResponseHandler responseHandler -> c
    com.example.zf_pad.trade.common.HttpCallback callback -> d
    void post(java.lang.String,com.loopj.android.http.RequestParams) -> a
    void post(java.lang.String,org.apache.http.HttpEntity) -> a
    void post(java.lang.String,java.util.Map) -> a
    void post(java.lang.String,java.util.Map,java.lang.Boolean) -> a
    void post(java.lang.String) -> a
com.example.zf_pad.trade.common.HttpRequest$1 -> com.example.zf_pad.trade.a.l:
    com.example.zf_pad.trade.common.HttpRequest this$0 -> a
    com.example.zf_pad.trade.common.HttpCallback val$callback -> b
    android.content.Context val$context -> c
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> onSuccess
    void onFinish() -> onFinish
    void onStart() -> onStart
com.example.zf_pad.trade.common.JsonParser -> com.example.zf_pad.trade.a.m:
    com.example.zf_pad.trade.common.Response fromJson(java.lang.String) -> a
    com.example.zf_pad.trade.common.Response fromJson(java.lang.String,com.google.gson.reflect.TypeToken) -> a
com.example.zf_pad.trade.common.NetworkUtil -> com.example.zf_pad.trade.a.n:
    android.net.ConnectivityManager cm -> a
    android.net.ConnectivityManager getConnectivityManager(android.content.Context) -> a
    boolean isNetworkAvailable(android.content.Context) -> b
com.example.zf_pad.trade.common.Page -> com.example.zf_pad.trade.a.o:
    int total -> a
    java.util.List list -> b
    int getTotal() -> a
    java.util.List getList() -> b
com.example.zf_pad.trade.common.Pageable -> com.example.zf_pad.trade.a.p:
    int total -> a
    java.util.List content -> b
    int getTotal() -> a
    java.util.List getContent() -> b
com.example.zf_pad.trade.common.Response -> com.example.zf_pad.trade.a.q:
    int code -> a
    java.lang.String message -> b
    java.lang.Object result -> c
    int getCode() -> a
    java.lang.String getMessage() -> b
    java.lang.Object getResult() -> c
com.example.zf_pad.trade.common.TextWatcherAdapter -> com.example.zf_pad.trade.a.r:
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.example.zf_pad.trade.entity.AfterSaleDetail -> com.example.zf_pad.trade.b.a:
    int status -> a
    java.lang.String applyTime -> b
    java.lang.String terminalNum -> c
    java.lang.String brandName -> d
    java.lang.String brandNumber -> e
    java.lang.String payChannel -> f
    java.lang.String merchantName -> g
    java.lang.String merchantPhone -> h
    com.example.zf_pad.trade.common.Pageable comments -> i
    java.util.List resourceInfos -> j
    int getStatus() -> a
    java.lang.String getApplyTime() -> b
    java.lang.String getTerminalNum() -> c
    java.lang.String getBrandName() -> d
    java.lang.String getBrandNumber() -> e
    java.lang.String getPayChannel() -> f
    java.lang.String getMerchantName() -> g
    java.lang.String getMerchantPhone() -> h
    com.example.zf_pad.trade.common.Pageable getComments() -> i
    java.util.List getResourceInfos() -> j
com.example.zf_pad.trade.entity.AfterSaleDetailChange -> com.example.zf_pad.trade.b.b:
    java.lang.String receiverAddr -> a
    java.lang.String changeReason -> b
    java.lang.String getReceiverAddr() -> k
    java.lang.String getChangeReason() -> l
com.example.zf_pad.trade.entity.AfterSaleDetailLease -> com.example.zf_pad.trade.b.c:
    int leasePrice -> a
    int leaseDeposit -> b
    int leaseLength -> c
    int leaseMaxTime -> d
    int leaseMinTime -> e
    java.lang.String receiverName -> f
    java.lang.String receiverPhone -> g
    int return_price -> h
    java.lang.String crf_retrun_price -> i
    int getReturn_price() -> k
    java.lang.String getCrf_retrun_price() -> l
    int getLeasePrice() -> m
    int getLeaseDeposit() -> n
    int getLeaseLength() -> o
    int getLeaseMaxTime() -> p
    int getLeaseMinTime() -> q
    java.lang.String getReceiverName() -> r
    java.lang.String getReceiverPhone() -> s
com.example.zf_pad.trade.entity.AfterSaleDetailMaintain -> com.example.zf_pad.trade.b.d:
    java.lang.String receiverAddr -> a
    java.lang.String repairPrice -> b
    java.lang.String change_reason -> c
    java.lang.String getChange_reason() -> k
    java.lang.String getReceiverAddr() -> l
    java.lang.String getRepairPrice() -> m
com.example.zf_pad.trade.entity.AfterSaleDetailReturn -> com.example.zf_pad.trade.b.e:
    int returnPrice -> a
    java.lang.String bankName -> b
    java.lang.String bankAccount -> c
    java.lang.String reason -> d
    int getReturnPrice() -> k
    java.lang.String getBankName() -> l
    java.lang.String getBankAccount() -> m
    java.lang.String getReason() -> n
com.example.zf_pad.trade.entity.AfterSaleRecord -> com.example.zf_pad.trade.b.f:
    int id -> a
    java.lang.String applyNum -> b
    java.lang.String createTime -> c
    java.lang.String terminalNum -> d
    java.lang.String status -> e
    int getId() -> a
    java.lang.String getApplyNum() -> b
    java.lang.String getCreateTime() -> c
    java.lang.String getTerminalNum() -> d
    java.lang.String getStatus() -> e
    void setStatus(java.lang.String) -> a
com.example.zf_pad.trade.entity.ApplyChannel -> com.example.zf_pad.trade.b.g:
    int id -> a
    java.lang.String name -> b
    java.util.List billings -> c
    int getId() -> a
    void setId(int) -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> a
    java.util.List getBillings() -> c
com.example.zf_pad.trade.entity.ApplyChannel$Billing -> com.example.zf_pad.trade.b.h:
    int id -> a
    java.lang.String name -> b
    com.example.zf_pad.trade.entity.ApplyChannel this$0 -> c
com.example.zf_pad.trade.entity.ApplyChooseItem -> com.example.zf_pad.trade.b.i:
    int id -> a
    java.lang.String title -> b
    int getId() -> a
    java.lang.String getTitle() -> b
com.example.zf_pad.trade.entity.City -> com.example.zf_pad.trade.b.j:
    int id -> a
    java.lang.String name -> b
    java.lang.String pinyin -> c
    com.example.zf_pad.trade.entity.Province province -> d
    int getId() -> a
    java.lang.String getName() -> b
    java.lang.String getPinyin() -> c
    com.example.zf_pad.trade.entity.Province getProvince() -> d
    void setProvince(com.example.zf_pad.trade.entity.Province) -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.example.zf_pad.trade.entity.Comment -> com.example.zf_pad.trade.b.k:
    java.lang.String person -> a
    java.lang.String time -> b
    java.lang.String content -> c
    java.lang.String getPerson() -> a
    java.lang.String getTime() -> b
    java.lang.String getContent() -> c
com.example.zf_pad.trade.entity.GriviewEntity -> com.example.zf_pad.trade.b.l:
    int id -> a
    java.lang.String name -> b
    int getId() -> a
    java.lang.String getName() -> b
com.example.zf_pad.trade.entity.MerchantForApply -> com.example.zf_pad.trade.b.m:
    java.lang.String legalPersonName -> a
    java.lang.String legalPersonCardId -> b
    java.lang.String title -> c
    java.lang.String taxRegisteredNo -> d
    java.lang.String organizationCodeNo -> e
    java.lang.String bankOpenAccount -> f
    java.lang.String accountBankName -> g
    java.lang.String phone -> h
    java.lang.Integer cityId -> i
    java.lang.String getLegalPersonName() -> a
    java.lang.String getLegalPersonCardId() -> b
    java.lang.String getTitle() -> c
    java.lang.String getTaxRegisteredNo() -> d
    java.lang.String getOrganizationCodeNo() -> e
    java.lang.String getBankOpenAccount() -> f
    java.lang.String getAccountBankName() -> g
    java.lang.String getPhone() -> h
    java.lang.Integer getCityId() -> i
com.example.zf_pad.trade.entity.MyApplyCustomerDetail -> com.example.zf_pad.trade.b.n:
    java.lang.String value -> a
    int targetId -> b
    java.lang.String getValue() -> a
    int getTargetId() -> b
com.example.zf_pad.trade.entity.MyApplyMaterial -> com.example.zf_pad.trade.b.o:
    int id -> a
    int types -> b
    java.lang.String name -> c
    int openingRequirementId -> d
    java.lang.String value -> e
    int getId() -> a
    int getTypes() -> b
    java.lang.String getName() -> c
    int getOpeningRequirementId() -> d
    java.lang.String getValue() -> e
    void setValue(java.lang.String) -> a
com.example.zf_pad.trade.entity.MyApplyTerminalDetail -> com.example.zf_pad.trade.b.p:
    java.lang.String brandName -> a
    java.lang.String modelNumber -> b
    java.lang.String serialNumber -> c
    java.lang.String channelName -> d
    int supportRequirementType -> e
    int channelId -> f
    int getChannelId() -> a
    int getSupportRequirementType() -> b
    java.lang.String getBrandName() -> c
    java.lang.String getModelNumber() -> d
    java.lang.String getSerialNumber() -> e
    java.lang.String getChannelName() -> f
com.example.zf_pad.trade.entity.My_ApplyDetail -> com.example.zf_pad.trade.b.q:
    com.example.zf_pad.trade.entity.MyApplyTerminalDetail terminalDetail -> a
    java.util.List materials -> b
    java.util.List merchants -> c
    java.util.List customerDetails -> d
    com.example.zf_pad.trade.entity.OpeningInfos openingInfos -> e
    com.example.zf_pad.trade.entity.OpeningInfos getOpeningInfos() -> a
    com.example.zf_pad.trade.entity.MyApplyTerminalDetail getTerminalDetail() -> b
    java.util.List getMaterials() -> c
    java.util.List getMerchants() -> d
    java.util.List getCustomerDetails() -> e
com.example.zf_pad.trade.entity.OpeningInfos -> com.example.zf_pad.trade.b.r:
    java.lang.String birthday -> a
    int billing_cyde_id -> b
    int merchant_id -> c
    java.lang.String billingname -> d
    java.lang.String tax_registered_no -> e
    java.lang.String organization_code_no -> f
    java.lang.String email -> g
    java.lang.String account_bank_num -> h
    int pay_channel_id -> i
    int sex -> j
    java.lang.String merchant_name -> k
    java.lang.String account_bank_code -> l
    java.lang.String channelname -> m
    java.lang.String card_id -> n
    java.lang.String phone -> o
    java.lang.String name -> p
    int city_id -> q
    java.lang.String bank_name -> r
    java.lang.String getBirthday() -> a
    int getBilling_cyde_id() -> b
    int getMerchant_id() -> c
    java.lang.String getBillingname() -> d
    java.lang.String getTax_registered_no() -> e
    java.lang.String getOrganization_code_no() -> f
    java.lang.String getEmail() -> g
    java.lang.String getAccount_bank_num() -> h
    int getPay_channel_id() -> i
    int getSex() -> j
    java.lang.String getMerchant_name() -> k
    java.lang.String getAccount_bank_code() -> l
    java.lang.String getChannelname() -> m
    java.lang.String getCard_id() -> n
    java.lang.String getPhone() -> o
    java.lang.String getName() -> p
    int getCity_id() -> q
    java.lang.String getBank_name() -> r
com.example.zf_pad.trade.entity.Province -> com.example.zf_pad.trade.b.s:
    int id -> a
    java.lang.String name -> b
    java.util.List cities -> c
    int getId() -> a
    java.util.List getCities() -> b
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.example.zf_pad.trade.entity.RepairPayEntity -> com.example.zf_pad.trade.b.t:
    java.lang.String apply_num -> a
    java.lang.String repair_price -> b
    java.lang.String miaoshu -> c
    java.lang.String getApply_num() -> a
    java.lang.String getRepair_price() -> b
    java.lang.String getMiaoshu() -> c
com.example.zf_pad.trade.entity.ResourceInfo -> com.example.zf_pad.trade.b.u:
    java.lang.String upload_path -> a
    java.lang.String title -> b
    java.lang.String getUpload_path() -> a
    java.lang.String getTitle() -> b
com.example.zf_pad.trade.entity.TradeClient -> com.example.zf_pad.trade.b.v:
    java.lang.String serialNum -> a
    java.lang.String getSerialNum() -> a
com.example.zf_pad.trade.entity.TradeDetail -> com.example.zf_pad.trade.b.w:
    java.lang.String tradedTimeStr -> a
    java.lang.String terminalNumber -> b
    int amount -> c
    java.lang.String tradeNumber -> d
    int poundage -> e
    java.lang.String batchNumber -> f
    java.lang.String payIntoAccount -> g
    java.lang.String merchantNumber -> h
    int tradedStatus -> i
    java.lang.String merchantName -> j
    java.lang.String payFromAccount -> k
    java.lang.String payChannelName -> l
    java.lang.String account_number -> m
    java.lang.String account_name -> n
    java.lang.String phone -> o
    java.lang.String agentName -> p
    java.lang.String getAccount_number() -> a
    java.lang.String getAccount_name() -> b
    java.lang.String getPhone() -> c
    java.lang.String getAgentName() -> d
    java.lang.String getTradedTimeStr() -> e
    java.lang.String getTerminalNumber() -> f
    int getAmount() -> g
    java.lang.String getTradeNumber() -> h
    int getPoundage() -> i
    java.lang.String getBatchNumber() -> j
    java.lang.String getPayIntoAccount() -> k
    java.lang.String getMerchantNumber() -> l
    int getTradedStatus() -> m
    java.lang.String getMerchantName() -> n
    java.lang.String getPayFromAccount() -> o
    java.lang.String getPayChannelName() -> p
com.example.zf_pad.trade.entity.TradeRecord -> com.example.zf_pad.trade.b.x:
    int id -> a
    int amount -> b
    int tradedStatus -> c
    java.lang.String terminalNumber -> d
    java.lang.String tradedTimeStr -> e
    java.lang.String payFromAccount -> f
    java.lang.String payIntoAccount -> g
    int poundage -> h
    java.lang.String accountName -> i
    java.lang.String accountNumber -> j
    java.lang.String phone -> k
    int getId() -> a
    int getAmount() -> b
    int getTradedStatus() -> c
    java.lang.String getTerminalNumber() -> d
    java.lang.String getTradedTimeStr() -> e
    java.lang.String getPayFromAccount() -> f
    java.lang.String getPayIntoAccount() -> g
    int getPoundage() -> h
    java.lang.String getAccountName() -> i
    java.lang.String getAccountNumber() -> j
    java.lang.String getPhone() -> k
com.example.zf_pad.trade.entity.TradeStatistic -> com.example.zf_pad.trade.b.y:
    int amountTotal -> a
    java.lang.String payChannelName -> b
    java.lang.String terminalNumber -> c
    int tradeTotal -> d
    int getAmountTotal() -> a
    java.lang.String getPayChannelName() -> b
    java.lang.String getTerminalNumber() -> c
    int getTradeTotal() -> d
com.example.zf_pad.trade.widget.LetterListView -> com.example.zf_pad.trade.widget.LetterListView:
    com.example.zf_pad.trade.widget.LetterListView$OnTouchingLetterChangedListener onTouchingLetterChangedListener -> a
    java.lang.String[] b -> b
    int choose -> c
    android.graphics.Paint paint -> d
    boolean showBg -> e
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setOnTouchingLetterChangedListener(com.example.zf_pad.trade.widget.LetterListView$OnTouchingLetterChangedListener) -> setOnTouchingLetterChangedListener
com.example.zf_pad.trade.widget.LetterListView$OnTouchingLetterChangedListener -> com.example.zf_pad.trade.widget.a:
    void onTouchingLetterChanged(java.lang.String) -> a
com.example.zf_pad.trade.widget.MTabWidget -> com.example.zf_pad.trade.widget.MTabWidget:
    java.util.List mTabViews -> a
    android.content.Context mContext -> b
    android.content.res.Resources resources -> c
    int mBaseColor -> d
    com.example.zf_pad.trade.widget.MTabWidget$OnTabOnclik onc -> e
    void setonTabLintener(com.example.zf_pad.trade.widget.MTabWidget$OnTabOnclik) -> setonTabLintener
    void init(android.content.Context) -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    void addTab(java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    void updateTabs(int) -> a
com.example.zf_pad.trade.widget.MTabWidget$OnTabOnclik -> com.example.zf_pad.trade.widget.b:
    void chang(int) -> a
com.example.zf_pad.trade.widget.MyTabWidget -> com.example.zf_pad.trade.widget.MyTabWidget:
    android.support.v4.view.ViewPager mViewPager -> a
    java.util.List mTabViews -> b
    android.content.Context mContext -> c
    android.content.res.Resources resources -> d
    int mBaseColor -> e
    void init(android.content.Context) -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void addTab(java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    void updateTabs(int) -> a
com.example.zf_pad.trade.widget.MyViewPager -> com.example.zf_pad.trade.widget.MyViewPager:
    boolean isPagingEnabled -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setPagingEnabled(boolean) -> setPagingEnabled
com.example.zf_pad.trade.widget.WheelView -> com.example.zf_pad.trade.widget.c:
    android.content.Context context -> l
    android.widget.LinearLayout views -> m
    java.util.List items -> a
    int offset -> b
    int displayItemCount -> c
    int selectedIndex -> d
    int initialY -> e
    java.lang.Runnable scrollerTask -> f
    int newCheck -> g
    int itemHeight -> h
    int[] selectedAreaBorder -> i
    int scrollDirection -> n
    android.graphics.Paint paint -> j
    int viewWidth -> k
    com.example.zf_pad.trade.widget.WheelView$OnWheelViewListener onWheelViewListener -> o
    java.util.List getItems() -> getItems
    void setItems(java.util.List) -> setItems
    int getOffset() -> getOffset
    void setOffset(int) -> setOffset
    void init(android.content.Context) -> a
    void startScrollerTask() -> a
    void initData() -> b
    android.widget.TextView createView(java.lang.Object) -> a
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void refreshItemView(int) -> a
    int[] obtainSelectedAreaBorder() -> c
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onSeletedCallBack() -> d
    void setSeletion(int) -> setSeletion
    java.lang.Object getSeletedItem() -> getSeletedItem
    int getSeletedIndex() -> getSeletedIndex
    void fling(int) -> fling
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    com.example.zf_pad.trade.widget.WheelView$OnWheelViewListener getOnWheelViewListener() -> getOnWheelViewListener
    void setOnWheelViewListener(com.example.zf_pad.trade.widget.WheelView$OnWheelViewListener) -> setOnWheelViewListener
    void access$0(com.example.zf_pad.trade.widget.WheelView) -> a
    int[] access$1(com.example.zf_pad.trade.widget.WheelView) -> b
com.example.zf_pad.trade.widget.WheelView$1 -> com.example.zf_pad.trade.widget.d:
    com.example.zf_pad.trade.widget.WheelView this$0 -> a
    void run() -> run
    com.example.zf_pad.trade.widget.WheelView access$0(com.example.zf_pad.trade.widget.WheelView$1) -> a
com.example.zf_pad.trade.widget.WheelView$1$1 -> com.example.zf_pad.trade.widget.e:
    com.example.zf_pad.trade.widget.WheelView$1 this$1 -> a
    int val$remainder -> b
    int val$divided -> c
    void run() -> run
com.example.zf_pad.trade.widget.WheelView$1$2 -> com.example.zf_pad.trade.widget.f:
    com.example.zf_pad.trade.widget.WheelView$1 this$1 -> a
    int val$remainder -> b
    int val$divided -> c
    void run() -> run
com.example.zf_pad.trade.widget.WheelView$2 -> com.example.zf_pad.trade.widget.g:
    com.example.zf_pad.trade.widget.WheelView this$0 -> a
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
com.example.zf_pad.trade.widget.WheelView$3 -> com.example.zf_pad.trade.widget.h:
    com.example.zf_pad.trade.widget.WheelView this$0 -> a
    int val$p -> b
    void run() -> run
com.example.zf_pad.trade.widget.WheelView$OnWheelViewListener -> com.example.zf_pad.trade.widget.i:
    void onSelected(int,java.lang.Object) -> a
com.example.zf_pad.trade.widget.XListView -> com.example.zf_pad.trade.widget.XListView:
    float mLastY -> c
    android.widget.Scroller mScroller -> d
    android.widget.AbsListView$OnScrollListener mScrollListener -> e
    com.example.zf_pad.trade.widget.XListView$IXListViewListener mListViewListener -> f
    com.example.zf_pad.trade.widget.XListViewHeader mHeaderView -> g
    android.widget.RelativeLayout mHeaderViewContent -> h
    android.widget.TextView mHeaderTimeView -> i
    int mHeaderViewHeight -> j
    boolean mEnablePullRefresh -> k
    boolean mPullRefreshing -> l
    com.example.zf_pad.trade.widget.XListViewFooter mFooterView -> m
    boolean mEnablePullLoad -> n
    boolean mPullLoading -> o
    boolean mIsFooterReady -> p
    boolean oneRefresh -> a
    boolean oneLoadMore -> b
    int mTotalItemCount -> q
    int mScrollBack -> r
    com.example.zf_pad.trade.widget.XListViewFooter getmFooterView() -> getmFooterView
    void setmFooterView(com.example.zf_pad.trade.widget.XListViewFooter) -> setmFooterView
    void initWithContext(android.content.Context) -> a
    void initHeaderAndFooter() -> a
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPullRefreshEnable(boolean) -> setPullRefreshEnable
    void setPullLoadEnable(boolean) -> setPullLoadEnable
    void stopRefresh() -> b
    void stopLoadMore() -> c
    void setRefreshTime(java.lang.String) -> setRefreshTime
    void invokeOnScrolling() -> d
    void updateHeaderHeight(float) -> a
    void resetHeaderHeight() -> e
    void updateFooterHeight(float) -> b
    void resetFooterHeight() -> f
    void startLoadMore() -> g
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void computeScroll() -> computeScroll
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void setXListViewListener(com.example.zf_pad.trade.widget.XListView$IXListViewListener) -> setXListViewListener
    android.widget.RelativeLayout access$0(com.example.zf_pad.trade.widget.XListView) -> a
    void access$1(com.example.zf_pad.trade.widget.XListView,int) -> a
    void access$2(com.example.zf_pad.trade.widget.XListView) -> b
com.example.zf_pad.trade.widget.XListView$1 -> com.example.zf_pad.trade.widget.j:
    com.example.zf_pad.trade.widget.XListView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.example.zf_pad.trade.widget.XListView$2 -> com.example.zf_pad.trade.widget.k:
    com.example.zf_pad.trade.widget.XListView this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.trade.widget.XListView$3 -> com.example.zf_pad.trade.widget.l:
    com.example.zf_pad.trade.widget.XListView this$0 -> a
    void run() -> run
com.example.zf_pad.trade.widget.XListView$4 -> com.example.zf_pad.trade.widget.m:
    com.example.zf_pad.trade.widget.XListView this$0 -> a
    void run() -> run
com.example.zf_pad.trade.widget.XListView$IXListViewListener -> com.example.zf_pad.trade.widget.n:
    void onRefresh() -> a
    void onLoadMore() -> b
com.example.zf_pad.trade.widget.XListView$OnXScrollListener -> com.example.zf_pad.trade.widget.o:
    void onXScrolling(android.view.View) -> a
com.example.zf_pad.trade.widget.XListViewFooter -> com.example.zf_pad.trade.widget.p:
    android.content.Context mContext -> a
    android.view.View mContentView -> b
    android.view.View mProgressBar -> c
    android.widget.TextView mHintView -> d
    android.widget.TextView getmHintView() -> getmHintView
    void setmHintView(android.widget.TextView) -> setmHintView
    void setState(int) -> setState
    void setState1(int) -> setState1
    void setState2(int) -> setState2
    void setBottomMargin(int) -> setBottomMargin
    int getBottomMargin() -> getBottomMargin
    void hide() -> a
    void show() -> b
    void initView(android.content.Context) -> a
com.example.zf_pad.trade.widget.XListViewHeader -> com.example.zf_pad.trade.widget.q:
    android.widget.LinearLayout mContainer -> a
    android.widget.ImageView mArrowImageView -> b
    android.widget.ProgressBar mProgressBar -> c
    android.widget.TextView mHintTextView -> d
    int mState -> e
    android.view.animation.Animation mRotateUpAnim -> f
    android.view.animation.Animation mRotateDownAnim -> g
    int ROTATE_ANIM_DURATION -> h
    void initView(android.content.Context) -> a
    void setState(int) -> setState
    void setVisiableHeight(int) -> setVisiableHeight
    int getVisiableHeight() -> getVisiableHeight
com.example.zf_pad.util.AlertDialog -> com.example.zf_pad.util.a:
    android.content.Context context -> a
    android.app.AlertDialog ad -> b
    android.widget.TextView titleView -> c
    android.widget.TextView messageView -> d
    android.widget.LinearLayout buttonLayout1 -> e
    android.widget.LinearLayout buttonLayout2 -> f
    void setTitle(java.lang.String) -> a
    void setMessage(java.lang.String) -> b
    void setPositiveButton(java.lang.String,android.view.View$OnClickListener) -> a
    void setNegativeButton(java.lang.String,android.view.View$OnClickListener) -> b
    void dismiss() -> a
com.example.zf_pad.util.AlertMessDialog -> com.example.zf_pad.util.b:
    android.content.Context context -> a
    android.app.AlertDialog ad -> b
    android.widget.TextView titleView -> c
    android.widget.TextView messageView -> d
    android.widget.LinearLayout buttonLayout1 -> e
    android.widget.LinearLayout buttonLayout2 -> f
    void setTitle(java.lang.String) -> a
    void setMessage(java.lang.String) -> b
    void setNegativeButton(java.lang.String,android.view.View$OnClickListener) -> a
    void dismiss() -> a
com.example.zf_pad.util.DataCleanManager -> com.example.zf_pad.util.c:
    java.lang.String getTotalCacheSize(android.content.Context) -> a
    void clearAllCache(android.content.Context) -> b
    boolean deleteDir(java.io.File) -> b
    long getFolderSize(java.io.File) -> a
    java.lang.String getFormatSize(double) -> a
com.example.zf_pad.util.DialogUtil -> com.example.zf_pad.util.d:
    android.content.Context context -> a
    java.lang.String text -> b
    android.app.Dialog getCheck(com.example.zf_pad.util.DialogUtil$CallBackChange) -> a
com.example.zf_pad.util.DialogUtil$1 -> com.example.zf_pad.util.e:
    com.example.zf_pad.util.DialogUtil this$0 -> a
    android.app.Dialog val$dialog -> b
    com.example.zf_pad.util.DialogUtil$CallBackChange val$call -> c
    void onClick(android.view.View) -> onClick
com.example.zf_pad.util.DialogUtil$2 -> com.example.zf_pad.util.f:
    com.example.zf_pad.util.DialogUtil this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.example.zf_pad.util.DialogUtil$CallBackChange -> com.example.zf_pad.util.g:
    void change() -> a
com.example.zf_pad.util.DownloadUtils -> com.example.zf_pad.util.h:
    long download(java.lang.String,java.io.File,boolean,com.example.zf_pad.util.DownloadUtils$DownloadListener) -> a
com.example.zf_pad.util.DownloadUtils$DownloadListener -> com.example.zf_pad.util.i:
    void downloading(int) -> a
    void downloaded(java.io.File) -> a
    void exception(java.lang.Exception) -> a
com.example.zf_pad.util.ImageCacheUtil -> com.example.zf_pad.util.j:
    cn.trinea.android.common.service.impl.ImageCache IMAGE_CACHE -> a
    java.lang.String DEFAULT_CACHE_FOLDER -> b
    android.view.animation.AlphaAnimation getInAlphaAnimation(long) -> a
com.example.zf_pad.util.ImageCacheUtil$1 -> com.example.zf_pad.util.k:
    void onGetSuccess(java.lang.String,android.graphics.Bitmap,android.view.View,boolean) -> onGetSuccess
    void onPreGet(java.lang.String,android.view.View) -> onPreGet
    void onGetFailed(java.lang.String,android.graphics.Bitmap,android.view.View,cn.trinea.android.common.entity.FailedReason) -> onGetFailed
    void onGetNotInCache(java.lang.String,android.view.View) -> onGetNotInCache
com.example.zf_pad.util.MyToast -> com.example.zf_pad.util.l:
    void showToast(android.content.Context,java.lang.String) -> a
com.example.zf_pad.util.RegText -> com.example.zf_pad.util.m:
    boolean isMobileNO(java.lang.String) -> a
    boolean isEmail(java.lang.String) -> b
    boolean isIdentityCard(java.lang.String) -> c
    boolean isDate(java.lang.String) -> d
    boolean isNumeric(java.lang.String) -> e
    java.util.Hashtable GetAreaCode() -> a
com.example.zf_pad.util.ScrollViewWithGView -> com.example.zf_pad.util.ScrollViewWithGView:
    void onMeasure(int,int) -> onMeasure
com.example.zf_pad.util.ScrollViewWithListView -> com.example.zf_pad.util.ScrollViewWithListView:
    void onMeasure(int,int) -> onMeasure
com.example.zf_pad.util.StringUtil -> com.example.zf_pad.util.n:
    boolean isMobile(java.lang.String) -> a
    boolean isZipNO(java.lang.String) -> b
    boolean isNull(java.lang.String) -> c
    java.lang.String Md5(java.lang.String) -> d
    java.lang.String replaceBlank(java.lang.String) -> e
    java.lang.String getMoneyString(int) -> a
    java.lang.String formatNull(java.lang.String) -> f
    java.lang.String replaceNum(java.lang.String) -> g
    java.lang.String replaceName(java.lang.String) -> h
com.example.zf_pad.util.TitleMenuUtil -> com.example.zf_pad.util.o:
    android.app.Activity activity -> a
    java.lang.String title -> b
    android.widget.LinearLayout titleback_linear_back -> c
    android.widget.TextView titleback_text_title -> d
    android.widget.TextView tv_back -> e
    void show() -> a
    android.app.Activity access$0(com.example.zf_pad.util.TitleMenuUtil) -> a
com.example.zf_pad.util.TitleMenuUtil$1 -> com.example.zf_pad.util.p:
    com.example.zf_pad.util.TitleMenuUtil this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.util.TitleMenuUtil$2 -> com.example.zf_pad.util.q:
    com.example.zf_pad.util.TitleMenuUtil this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.util.Tools -> com.example.zf_pad.util.r:
    int index -> a
    int index2 -> b
    android.graphics.Bitmap bm -> c
    boolean isConnect(android.content.Context) -> a
    java.lang.String getHourAndMin() -> a
    int getVerCode(android.content.Context) -> b
    java.lang.String getVerName(android.content.Context) -> c
com.example.zf_pad.util.XListView -> com.example.zf_pad.util.XListView:
    float mLastY -> c
    android.widget.Scroller mScroller -> d
    android.widget.AbsListView$OnScrollListener mScrollListener -> e
    com.example.zf_pad.util.XListView$IXListViewListener mListViewListener -> f
    com.example.zf_pad.util.XListViewHeader mHeaderView -> g
    android.widget.RelativeLayout mHeaderViewContent -> h
    android.widget.TextView mHeaderTimeView -> i
    int mHeaderViewHeight -> j
    boolean mEnablePullRefresh -> k
    boolean mPullRefreshing -> l
    com.example.zf_pad.util.XListViewFooter mFooterView -> m
    boolean mEnablePullLoad -> n
    boolean mPullLoading -> o
    boolean mIsFooterReady -> p
    boolean oneRefresh -> a
    boolean oneLoadMore -> b
    int mTotalItemCount -> q
    int mScrollBack -> r
    void initHeaderAndFooter() -> a
    com.example.zf_pad.util.XListViewFooter getmFooterView() -> getmFooterView
    void setmFooterView(com.example.zf_pad.util.XListViewFooter) -> setmFooterView
    void initWithContext(android.content.Context) -> a
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPullRefreshEnable(boolean) -> setPullRefreshEnable
    void setPullLoadEnable(boolean) -> setPullLoadEnable
    void stopRefresh() -> b
    void stopLoadMore() -> c
    void setRefreshTime(java.lang.String) -> setRefreshTime
    void invokeOnScrolling() -> d
    void updateHeaderHeight(float) -> a
    void resetHeaderHeight() -> e
    void updateFooterHeight(float) -> b
    void resetFooterHeight() -> f
    void startLoadMore() -> g
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void computeScroll() -> computeScroll
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void setXListViewListener(com.example.zf_pad.util.XListView$IXListViewListener) -> setXListViewListener
    android.widget.RelativeLayout access$0(com.example.zf_pad.util.XListView) -> a
    void access$1(com.example.zf_pad.util.XListView,int) -> a
    void access$2(com.example.zf_pad.util.XListView) -> b
com.example.zf_pad.util.XListView$1 -> com.example.zf_pad.util.s:
    com.example.zf_pad.util.XListView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.example.zf_pad.util.XListView$2 -> com.example.zf_pad.util.t:
    com.example.zf_pad.util.XListView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.example.zf_pad.util.XListView$3 -> com.example.zf_pad.util.u:
    com.example.zf_pad.util.XListView this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.util.XListView$4 -> com.example.zf_pad.util.v:
    com.example.zf_pad.util.XListView this$0 -> a
    void run() -> run
com.example.zf_pad.util.XListView$5 -> com.example.zf_pad.util.w:
    com.example.zf_pad.util.XListView this$0 -> a
    void run() -> run
com.example.zf_pad.util.XListView$IXListViewListener -> com.example.zf_pad.util.x:
    void onRefresh() -> a
    void onLoadMore() -> b
com.example.zf_pad.util.XListView$OnXScrollListener -> com.example.zf_pad.util.y:
    void onXScrolling(android.view.View) -> a
com.example.zf_pad.util.XListViewFooter -> com.example.zf_pad.util.z:
    android.content.Context mContext -> a
    android.view.View mContentView -> b
    android.view.View mProgressBar -> c
    android.widget.TextView mHintView -> d
    android.widget.TextView getmHintView() -> getmHintView
    void setmHintView(android.widget.TextView) -> setmHintView
    void setState(int) -> setState
    void setState1(int) -> setState1
    void setState2(int) -> setState2
    void setBottomMargin(int) -> setBottomMargin
    int getBottomMargin() -> getBottomMargin
    void hide() -> a
    void show() -> b
    void initView(android.content.Context) -> a
com.example.zf_pad.util.XListViewHeader -> com.example.zf_pad.util.aa:
    android.widget.LinearLayout mContainer -> a
    android.widget.ImageView mArrowImageView -> b
    android.widget.ProgressBar mProgressBar -> c
    android.widget.TextView mHintTextView -> d
    int mState -> e
    android.view.animation.Animation mRotateUpAnim -> f
    android.view.animation.Animation mRotateDownAnim -> g
    int ROTATE_ANIM_DURATION -> h
    void initView(android.content.Context) -> a
    void setState(int) -> setState
    void setVisiableHeight(int) -> setVisiableHeight
    int getVisiableHeight() -> getVisiableHeight
com.example.zf_pad.video.VideoActivity -> com.example.zf_pad.video.VideoActivity:
    java.lang.String TAG -> g
    int UPDATEVIDEOBITDELAYMILLIS -> h
    int userID -> b
    boolean bOnPaused -> c
    boolean bSelfVideoOpened -> i
    boolean bOtherVideoOpened -> j
    java.lang.Boolean mFirstGetVideoBitrate -> k
    java.lang.Boolean mFirstGetAudioBitrate -> l
    android.view.SurfaceView mOtherView -> m
    android.view.SurfaceView mMyView -> n
    android.widget.ImageButton mImgSwitchVideo -> o
    android.widget.Button mEndCallBtn -> p
    android.widget.TextView wait_TextView -> q
    android.widget.ImageButton mBtnCameraCtrl -> r
    android.widget.ImageButton mBtnSpeakCtrl -> s
    com.bairuitech.anychat.AnyChatCoreSDK anychatSDK -> d
    java.lang.String mStrIP -> t
    java.lang.String mStrName -> u
    int mSPort -> v
    int mSRoomID -> w
    android.os.Handler handlerWait -> x
    android.os.Handler handler -> e
    java.lang.Runnable runnable -> f
    android.view.View$OnClickListener onClickListener -> y
    void onCreate(android.os.Bundle) -> onCreate
    void InitSDK() -> a
    void InitLayout() -> b
    void ApplyVideoConfig() -> c
    void refreshAV() -> d
    void exitVideoDialog() -> e
    void destroyCurActivity() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void adjustLocalVideo(boolean) -> b
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void OnAnyChatConnectMessage(boolean) -> a
    void OnAnyChatLoginMessage(int,int) -> a
    void OnAnyChatEnterRoomMessage(int,int) -> b
    void OnAnyChatOnlineUserMessage(int,int) -> c
    void OnAnyChatUserAtRoomMessage(int,boolean) -> a
    void OnAnyChatLinkCloseMessage(int) -> a
    int videoOther() -> g
    android.widget.TextView access$0(com.example.zf_pad.video.VideoActivity) -> a
    void access$1(com.example.zf_pad.video.VideoActivity,java.lang.Boolean) -> a
    android.view.SurfaceView access$2(com.example.zf_pad.video.VideoActivity) -> b
    void access$3(com.example.zf_pad.video.VideoActivity,java.lang.Boolean) -> b
    java.lang.Boolean access$4(com.example.zf_pad.video.VideoActivity) -> c
    java.lang.Boolean access$5(com.example.zf_pad.video.VideoActivity) -> d
    void access$6(com.example.zf_pad.video.VideoActivity,boolean) -> a
    void access$7(com.example.zf_pad.video.VideoActivity) -> e
    android.widget.ImageButton access$8(com.example.zf_pad.video.VideoActivity) -> f
    android.widget.ImageButton access$9(com.example.zf_pad.video.VideoActivity) -> g
    android.os.Handler access$10(com.example.zf_pad.video.VideoActivity) -> h
    void access$11(com.example.zf_pad.video.VideoActivity) -> i
com.example.zf_pad.video.VideoActivity$1 -> com.example.zf_pad.video.a:
    com.example.zf_pad.video.VideoActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.zf_pad.video.VideoActivity$2 -> com.example.zf_pad.video.b:
    com.example.zf_pad.video.VideoActivity this$0 -> a
    void run() -> run
com.example.zf_pad.video.VideoActivity$3 -> com.example.zf_pad.video.c:
    com.example.zf_pad.video.VideoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.zf_pad.video.VideoActivity$4 -> com.example.zf_pad.video.d:
    com.example.zf_pad.video.VideoActivity this$0 -> a
    void run() -> run
com.example.zf_pad.video.VideoActivity$5 -> com.example.zf_pad.video.e:
    com.example.zf_pad.video.VideoActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.zf_pad.video.VideoActivity$6 -> com.example.zf_pad.video.f:
    com.example.zf_pad.video.VideoActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.zf_pad.video.config.ConfigEntity -> com.example.zf_pad.video.a.a:
    int mConfigMode -> a
    int mResolutionWidth -> b
    int mResolutionHeight -> c
    int mVideoBitrate -> d
    int mVideoFps -> e
    int mVideoQuality -> f
    int mVideoPreset -> g
    int mVideoOverlay -> h
    int mVideoRotateMode -> i
    int mFixColorDeviation -> j
    int mVideoShowGPURender -> k
    int mVideoAutoRotation -> l
    int mEnableP2P -> m
    int mUseARMv6Lib -> n
    int mEnableAEC -> o
    int mUseHWCodec -> p
com.example.zf_pad.video.config.ConfigService -> com.example.zf_pad.video.a.b:
    com.example.zf_pad.video.config.ConfigEntity LoadConfig(android.content.Context) -> a
com.google.gson.DefaultDateTypeAdapter -> com.google.gson.DefaultDateTypeAdapter:
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.util.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.util.Date deserializeToDate(com.google.gson.JsonElement) -> deserializeToDate
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.ExclusionStrategy -> com.google.gson.ExclusionStrategy:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
    java.lang.reflect.Field field -> field
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getName() -> getName
    java.lang.reflect.Type getDeclaredType() -> getDeclaredType
    java.lang.Class getDeclaredClass() -> getDeclaredClass
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.util.Collection getAnnotations() -> getAnnotations
    boolean hasModifier(int) -> hasModifier
    java.lang.Object get(java.lang.Object) -> get
    boolean isSynthetic() -> isSynthetic
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    com.google.gson.FieldNamingPolicy IDENTITY -> IDENTITY
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    com.google.gson.FieldNamingPolicy[] $VALUES -> $VALUES
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> separateCamelCase
    java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    java.lang.String modifyString(char,java.lang.String,int) -> modifyString
    java.lang.String access$100(java.lang.String) -> access$100
    java.lang.String access$200(java.lang.String,java.lang.String) -> access$200
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.FieldNamingPolicy$1:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.FieldNamingPolicy$2:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.FieldNamingPolicy$3:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.FieldNamingPolicy$4:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.FieldNamingPolicy$5:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingStrategy -> com.google.gson.FieldNamingStrategy:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.Gson -> com.google.gson.Gson:
    boolean DEFAULT_JSON_NON_EXECUTABLE -> DEFAULT_JSON_NON_EXECUTABLE
    java.lang.String JSON_NON_EXECUTABLE_PREFIX -> JSON_NON_EXECUTABLE_PREFIX
    java.lang.ThreadLocal calls -> calls
    java.util.Map typeTokenCache -> typeTokenCache
    java.util.List factories -> factories
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean serializeNulls -> serializeNulls
    boolean htmlSafe -> htmlSafe
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean prettyPrinting -> prettyPrinting
    com.google.gson.JsonDeserializationContext deserializationContext -> deserializationContext
    com.google.gson.JsonSerializationContext serializationContext -> serializationContext
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    com.google.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> longAdapter
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> getAdapter
    com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getDelegateAdapter
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> toJsonTree
    java.lang.String toJson(java.lang.Object) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    void toJson(java.lang.Object,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> assertFullConsumption
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type) -> fromJson
    java.lang.String toString() -> toString
    void access$000(com.google.gson.Gson,double) -> access$000
com.google.gson.Gson$1 -> com.google.gson.Gson$1:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.Gson$2 -> com.google.gson.Gson$2:
    com.google.gson.Gson this$0 -> this$0
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.Gson$3 -> com.google.gson.Gson$3:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Double read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$4 -> com.google.gson.Gson$4:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Float read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$5 -> com.google.gson.Gson$5:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.Gson$FutureTypeAdapter:
    com.google.gson.TypeAdapter delegate -> delegate
    void setDelegate(com.google.gson.TypeAdapter) -> setDelegate
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.GsonBuilder -> com.google.gson.GsonBuilder:
    com.google.gson.internal.Excluder excluder -> excluder
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    java.util.Map instanceCreators -> instanceCreators
    java.util.List factories -> factories
    java.util.List hierarchyFactories -> hierarchyFactories
    boolean serializeNulls -> serializeNulls
    java.lang.String datePattern -> datePattern
    int dateStyle -> dateStyle
    int timeStyle -> timeStyle
    boolean complexMapKeySerialization -> complexMapKeySerialization
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    boolean escapeHtmlChars -> escapeHtmlChars
    boolean prettyPrinting -> prettyPrinting
    boolean generateNonExecutableJson -> generateNonExecutableJson
    com.google.gson.GsonBuilder setVersion(double) -> setVersion
    com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[]) -> excludeFieldsWithModifiers
    com.google.gson.GsonBuilder generateNonExecutableJson() -> generateNonExecutableJson
    com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.GsonBuilder serializeNulls() -> serializeNulls
    com.google.gson.GsonBuilder enableComplexMapKeySerialization() -> enableComplexMapKeySerialization
    com.google.gson.GsonBuilder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy) -> setLongSerializationPolicy
    com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy) -> setFieldNamingPolicy
    com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy) -> setFieldNamingStrategy
    com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[]) -> setExclusionStrategies
    com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addSerializationExclusionStrategy
    com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addDeserializationExclusionStrategy
    com.google.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
    com.google.gson.GsonBuilder disableHtmlEscaping() -> disableHtmlEscaping
    com.google.gson.GsonBuilder setDateFormat(java.lang.String) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int,int) -> setDateFormat
    com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> registerTypeAdapter
    com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory) -> registerTypeAdapterFactory
    com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object) -> registerTypeHierarchyAdapter
    com.google.gson.GsonBuilder serializeSpecialFloatingPointValues() -> serializeSpecialFloatingPointValues
    com.google.gson.Gson create() -> create
    void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> addTypeAdaptersForDate
com.google.gson.InstanceCreator -> com.google.gson.InstanceCreator:
    java.lang.Object createInstance(java.lang.reflect.Type) -> createInstance
com.google.gson.JsonArray -> com.google.gson.JsonArray:
    java.util.List elements -> elements
    com.google.gson.JsonArray deepCopy() -> deepCopy
    void add(com.google.gson.JsonElement) -> add
    void addAll(com.google.gson.JsonArray) -> addAll
    int size() -> size
    java.util.Iterator iterator() -> iterator
    com.google.gson.JsonElement get(int) -> get
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    short getAsShort() -> getAsShort
    boolean getAsBoolean() -> getAsBoolean
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonDeserializationContext -> com.google.gson.JsonDeserializationContext:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.JsonDeserializer -> com.google.gson.JsonDeserializer:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.JsonElement -> com.google.gson.JsonElement:
    com.google.gson.JsonElement deepCopy() -> deepCopy
    boolean isJsonArray() -> isJsonArray
    boolean isJsonObject() -> isJsonObject
    boolean isJsonPrimitive() -> isJsonPrimitive
    boolean isJsonNull() -> isJsonNull
    com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    com.google.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    boolean getAsBoolean() -> getAsBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    short getAsShort() -> getAsShort
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    com.google.gson.JsonNull INSTANCE -> INSTANCE
    com.google.gson.JsonNull deepCopy() -> deepCopy
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonObject -> com.google.gson.JsonObject:
    com.google.gson.internal.LinkedTreeMap members -> members
    com.google.gson.JsonObject deepCopy() -> deepCopy
    void add(java.lang.String,com.google.gson.JsonElement) -> add
    com.google.gson.JsonElement remove(java.lang.String) -> remove
    void addProperty(java.lang.String,java.lang.String) -> addProperty
    void addProperty(java.lang.String,java.lang.Number) -> addProperty
    void addProperty(java.lang.String,java.lang.Boolean) -> addProperty
    void addProperty(java.lang.String,java.lang.Character) -> addProperty
    com.google.gson.JsonElement createJsonElement(java.lang.Object) -> createJsonElement
    java.util.Set entrySet() -> entrySet
    boolean has(java.lang.String) -> has
    com.google.gson.JsonElement get(java.lang.String) -> get
    com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String) -> getAsJsonPrimitive
    com.google.gson.JsonArray getAsJsonArray(java.lang.String) -> getAsJsonArray
    com.google.gson.JsonObject getAsJsonObject(java.lang.String) -> getAsJsonObject
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonParser -> com.google.gson.JsonParser:
    com.google.gson.JsonElement parse(java.lang.String) -> parse
    com.google.gson.JsonElement parse(java.io.Reader) -> parse
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
    java.lang.Class[] PRIMITIVE_TYPES -> PRIMITIVE_TYPES
    java.lang.Object value -> value
    com.google.gson.JsonPrimitive deepCopy() -> deepCopy
    void setValue(java.lang.Object) -> setValue
    boolean isBoolean() -> isBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    boolean getAsBoolean() -> getAsBoolean
    boolean isNumber() -> isNumber
    java.lang.Number getAsNumber() -> getAsNumber
    boolean isString() -> isString
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    short getAsShort() -> getAsShort
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    boolean isPrimitiveOrString(java.lang.Object) -> isPrimitiveOrString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> isIntegral
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonSerializationContext -> com.google.gson.JsonSerializationContext:
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.JsonSerializer -> com.google.gson.JsonSerializer:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
com.google.gson.JsonStreamParser -> com.google.gson.JsonStreamParser:
    com.google.gson.stream.JsonReader parser -> parser
    java.lang.Object lock -> lock
    com.google.gson.JsonElement next() -> next
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    long serialVersionUID -> serialVersionUID
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    com.google.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    com.google.gson.LongSerializationPolicy STRING -> STRING
    com.google.gson.LongSerializationPolicy[] $VALUES -> $VALUES
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.LongSerializationPolicy$2:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.TreeTypeAdapter -> com.google.gson.TreeTypeAdapter:
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.Gson gson -> gson
    com.google.gson.reflect.TypeToken typeToken -> typeToken
    com.google.gson.TypeAdapterFactory skipPast -> skipPast
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> delegate
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactoryWithMatchRawType
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object) -> newTypeHierarchyFactory
com.google.gson.TreeTypeAdapter$1 -> com.google.gson.TreeTypeAdapter$1:
com.google.gson.TreeTypeAdapter$SingleTypeFactory -> com.google.gson.TreeTypeAdapter$SingleTypeFactory:
    com.google.gson.reflect.TypeToken exactType -> exactType
    boolean matchRawType -> matchRawType
    java.lang.Class hierarchyType -> hierarchyType
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.TypeAdapter -> com.google.gson.TypeAdapter:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void toJson(java.io.Writer,java.lang.Object) -> toJson
    com.google.gson.TypeAdapter nullSafe() -> nullSafe
    java.lang.String toJson(java.lang.Object) -> toJson
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object fromJson(java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.String) -> fromJson
    java.lang.Object fromJsonTree(com.google.gson.JsonElement) -> fromJsonTree
com.google.gson.TypeAdapter$1 -> com.google.gson.TypeAdapter$1:
    com.google.gson.TypeAdapter this$0 -> this$0
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
com.google.gson.TypeAdapterFactory -> com.google.gson.TypeAdapterFactory:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.annotations.Expose -> com.google.gson.annotations.Expose:
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
com.google.gson.annotations.SerializedName -> com.google.gson.annotations.SerializedName:
    java.lang.String value() -> value
com.google.gson.annotations.Since -> com.google.gson.annotations.Since:
    double value() -> value
com.google.gson.annotations.Until -> com.google.gson.annotations.Until:
    double value() -> value
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    void checkArgument(boolean) -> checkArgument
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> EMPTY_TYPE_ARRAY
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    void access$000(java.lang.reflect.Type) -> access$000
    int access$100(java.lang.Object) -> access$100
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] typeArguments -> typeArguments
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
    java.lang.reflect.Type upperBound -> upperBound
    java.lang.reflect.Type lowerBound -> lowerBound
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.ConstructorConstructor:
    java.util.Map instanceCreators -> instanceCreators
    com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> get
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> newDefaultConstructor
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> newDefaultImplementationConstructor
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> newUnsafeAllocator
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.ConstructorConstructor$1:
    com.google.gson.InstanceCreator val$typeCreator -> val$typeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.ConstructorConstructor$10:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.ConstructorConstructor$11:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.ConstructorConstructor$12:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> unsafeAllocator
    java.lang.Class val$rawType -> val$rawType
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.ConstructorConstructor$2:
    com.google.gson.InstanceCreator val$rawTypeCreator -> val$rawTypeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.ConstructorConstructor$3:
    java.lang.reflect.Constructor val$constructor -> val$constructor
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.ConstructorConstructor$4:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.ConstructorConstructor$5:
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.ConstructorConstructor$6:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.ConstructorConstructor$7:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.ConstructorConstructor$8:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.ConstructorConstructor$9:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
    double IGNORE_VERSIONS -> IGNORE_VERSIONS
    com.google.gson.internal.Excluder DEFAULT -> DEFAULT
    double version -> version
    int modifiers -> modifiers
    boolean serializeInnerClasses -> serializeInnerClasses
    boolean requireExpose -> requireExpose
    java.util.List serializationStrategies -> serializationStrategies
    java.util.List deserializationStrategies -> deserializationStrategies
    com.google.gson.internal.Excluder clone() -> clone
    com.google.gson.internal.Excluder withVersion(double) -> withVersion
    com.google.gson.internal.Excluder withModifiers(int[]) -> withModifiers
    com.google.gson.internal.Excluder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean) -> withExclusionStrategy
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    boolean isAnonymousOrLocal(java.lang.Class) -> isAnonymousOrLocal
    boolean isInnerClass(java.lang.Class) -> isInnerClass
    boolean isStatic(java.lang.Class) -> isStatic
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> isValidVersion
    boolean isValidSince(com.google.gson.annotations.Since) -> isValidSince
    boolean isValidUntil(com.google.gson.annotations.Until) -> isValidUntil
    java.lang.Object clone() -> clone
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.Excluder$1:
    com.google.gson.TypeAdapter delegate -> delegate
    boolean val$skipDeserialize -> val$skipDeserialize
    boolean val$skipSerialize -> val$skipSerialize
    com.google.gson.Gson val$gson -> val$gson
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.internal.Excluder this$0 -> this$0
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> delegate
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> INSTANCE
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    java.lang.String value -> value
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedTreeMap -> com.google.gson.internal.LinkedTreeMap:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    java.util.Comparator comparator -> comparator
    com.google.gson.internal.LinkedTreeMap$Node root -> root
    int size -> size
    int modCount -> modCount
    com.google.gson.internal.LinkedTreeMap$Node header -> header
    com.google.gson.internal.LinkedTreeMap$EntrySet entrySet -> entrySet
    com.google.gson.internal.LinkedTreeMap$KeySet keySet -> keySet
    boolean $assertionsDisabled -> $assertionsDisabled
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> find
    com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> findByObject
    com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> removeInternal
    com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> replaceInParent
    void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> rebalance
    void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> rotateLeft
    void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> rotateRight
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedTreeMap$1 -> com.google.gson.internal.LinkedTreeMap$1:
    int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.google.gson.internal.LinkedTreeMap$EntrySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedTreeMap$EntrySet$1:
    com.google.gson.internal.LinkedTreeMap$EntrySet this$1 -> this$1
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> com.google.gson.internal.LinkedTreeMap$KeySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.google.gson.internal.LinkedTreeMap$KeySet$1:
    com.google.gson.internal.LinkedTreeMap$KeySet this$1 -> this$1
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator:
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node lastReturned -> lastReturned
    int expectedModCount -> expectedModCount
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    boolean hasNext() -> hasNext
    com.google.gson.internal.LinkedTreeMap$Node nextNode() -> nextNode
    void remove() -> remove
com.google.gson.internal.LinkedTreeMap$Node -> com.google.gson.internal.LinkedTreeMap$Node:
    com.google.gson.internal.LinkedTreeMap$Node parent -> parent
    com.google.gson.internal.LinkedTreeMap$Node left -> left
    com.google.gson.internal.LinkedTreeMap$Node right -> right
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node prev -> prev
    java.lang.Object key -> key
    java.lang.Object value -> value
    int height -> height
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.gson.internal.LinkedTreeMap$Node first() -> first
    com.google.gson.internal.LinkedTreeMap$Node last() -> last
com.google.gson.internal.ObjectConstructor -> com.google.gson.internal.ObjectConstructor:
    java.lang.Object construct() -> construct
com.google.gson.internal.Primitives -> com.google.gson.internal.Primitives:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> PRIMITIVE_TO_WRAPPER_TYPE
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> WRAPPER_TO_PRIMITIVE_TYPE
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> add
    boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    boolean isWrapperType(java.lang.reflect.Type) -> isWrapperType
    java.lang.Class wrap(java.lang.Class) -> wrap
    java.lang.Class unwrap(java.lang.Class) -> unwrap
com.google.gson.internal.Streams -> com.google.gson.internal.Streams:
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> write
    java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
com.google.gson.internal.Streams$1 -> com.google.gson.internal.Streams$1:
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.Streams$AppendableWriter:
    java.lang.Appendable appendable -> appendable
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> currentWrite
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.Streams$AppendableWriter$CurrentWrite:
    char[] chars -> chars
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.UnsafeAllocator:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    com.google.gson.internal.UnsafeAllocator create() -> create
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.UnsafeAllocator$1:
    java.lang.reflect.Method val$allocateInstance -> val$allocateInstance
    java.lang.Object val$unsafe -> val$unsafe
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.UnsafeAllocator$2:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.UnsafeAllocator$3:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    int val$constructorId -> val$constructorId
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.UnsafeAllocator$4:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.lang.Class componentType -> componentType
    com.google.gson.TypeAdapter componentTypeAdapter -> componentTypeAdapter
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.ArrayTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.CollectionTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter elementTypeAdapter -> elementTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Collection read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    java.text.DateFormat buildIso8601Format() -> buildIso8601Format
    java.util.Date read(com.google.gson.stream.JsonReader) -> read
    java.util.Date deserializeToDate(java.lang.String) -> deserializeToDate
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.DateTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.JsonTreeReader:
    java.io.Reader UNREADABLE_READER -> UNREADABLE_READER
    java.lang.Object SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    java.lang.Object peekStack() -> peekStack
    java.lang.Object popStack() -> popStack
    void expect(com.google.gson.stream.JsonToken) -> expect
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    java.lang.String toString() -> toString
    void promoteNameToValue() -> promoteNameToValue
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.JsonTreeReader$1:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.JsonTreeWriter:
    java.io.Writer UNWRITABLE_WRITER -> UNWRITABLE_WRITER
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    java.lang.String pendingName -> pendingName
    com.google.gson.JsonElement product -> product
    com.google.gson.JsonElement get() -> get
    com.google.gson.JsonElement peek() -> peek
    void put(com.google.gson.JsonElement) -> put
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.JsonTreeWriter$1:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.MapTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean complexMapKeySerialization -> complexMapKeySerialization
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
    boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> access$000
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter keyTypeAdapter -> keyTypeAdapter
    com.google.gson.TypeAdapter valueTypeAdapter -> valueTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> this$0
    java.util.Map read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Map) -> write
    java.lang.String keyToString(com.google.gson.JsonElement) -> keyToString
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    com.google.gson.Gson gson -> gson
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.ObjectTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.bind.ObjectTypeAdapter$2:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.internal.Excluder excluder -> excluder
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    java.lang.String getFieldName(java.lang.reflect.Field) -> getFieldName
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> createBoundField
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> getBoundFields
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    com.google.gson.TypeAdapter typeAdapter -> typeAdapter
    com.google.gson.Gson val$context -> val$context
    com.google.gson.reflect.TypeToken val$fieldType -> val$fieldType
    java.lang.reflect.Field val$field -> val$field
    boolean val$isPrimitive -> val$isPrimitive
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> this$0
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Map boundFields -> boundFields
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
    java.lang.String name -> name
    boolean serialized -> serialized
    boolean deserialized -> deserialized
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.google.gson.internal.bind.SqlDateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Date read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.google.gson.internal.bind.SqlDateTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TimeTypeAdapter -> com.google.gson.internal.bind.TimeTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Time read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.google.gson.internal.bind.TimeTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
    com.google.gson.Gson context -> context
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.reflect.Type type -> type
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> getRuntimeTypeIfMoreSpecific
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
    com.google.gson.TypeAdapter CLASS -> CLASS
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> CLASS_FACTORY
    com.google.gson.TypeAdapter BIT_SET -> BIT_SET
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> BIT_SET_FACTORY
    com.google.gson.TypeAdapter BOOLEAN -> BOOLEAN
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> BOOLEAN_AS_STRING
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> BOOLEAN_FACTORY
    com.google.gson.TypeAdapter BYTE -> BYTE
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> BYTE_FACTORY
    com.google.gson.TypeAdapter SHORT -> SHORT
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> SHORT_FACTORY
    com.google.gson.TypeAdapter INTEGER -> INTEGER
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> INTEGER_FACTORY
    com.google.gson.TypeAdapter LONG -> LONG
    com.google.gson.TypeAdapter FLOAT -> FLOAT
    com.google.gson.TypeAdapter DOUBLE -> DOUBLE
    com.google.gson.TypeAdapter NUMBER -> NUMBER
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> NUMBER_FACTORY
    com.google.gson.TypeAdapter CHARACTER -> CHARACTER
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> CHARACTER_FACTORY
    com.google.gson.TypeAdapter STRING -> STRING
    com.google.gson.TypeAdapter BIG_DECIMAL -> BIG_DECIMAL
    com.google.gson.TypeAdapter BIG_INTEGER -> BIG_INTEGER
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> STRING_FACTORY
    com.google.gson.TypeAdapter STRING_BUILDER -> STRING_BUILDER
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> STRING_BUILDER_FACTORY
    com.google.gson.TypeAdapter STRING_BUFFER -> STRING_BUFFER
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> STRING_BUFFER_FACTORY
    com.google.gson.TypeAdapter URL -> URL
    com.google.gson.TypeAdapterFactory URL_FACTORY -> URL_FACTORY
    com.google.gson.TypeAdapter URI -> URI
    com.google.gson.TypeAdapterFactory URI_FACTORY -> URI_FACTORY
    com.google.gson.TypeAdapter INET_ADDRESS -> INET_ADDRESS
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> INET_ADDRESS_FACTORY
    com.google.gson.TypeAdapter UUID -> UUID
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> UUID_FACTORY
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> TIMESTAMP_FACTORY
    com.google.gson.TypeAdapter CALENDAR -> CALENDAR
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> CALENDAR_FACTORY
    com.google.gson.TypeAdapter LOCALE -> LOCALE
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> LOCALE_FACTORY
    com.google.gson.TypeAdapter JSON_ELEMENT -> JSON_ELEMENT
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> JSON_ELEMENT_FACTORY
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> ENUM_FACTORY
    com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> newEnumTypeHierarchyFactory
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.TypeAdapters$1:
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> write
    java.lang.Class read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.TypeAdapters$10:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.TypeAdapters$11:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.TypeAdapters$12:
    java.lang.Character read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.TypeAdapters$13:
    java.lang.String read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.TypeAdapters$14:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.TypeAdapters$15:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.TypeAdapters$16:
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.TypeAdapters$17:
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.TypeAdapters$18:
    java.net.URL read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.TypeAdapters$19:
    java.net.URI read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.TypeAdapters$2:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.TypeAdapters$20:
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.TypeAdapters$21:
    java.util.UUID read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.TypeAdapters$22:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$22$1 -> com.google.gson.internal.bind.TypeAdapters$22$1:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> val$dateTypeAdapter
    com.google.gson.internal.bind.TypeAdapters$22 this$0 -> this$0
    java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.TypeAdapters$23:
    java.lang.String YEAR -> YEAR
    java.lang.String MONTH -> MONTH
    java.lang.String DAY_OF_MONTH -> DAY_OF_MONTH
    java.lang.String HOUR_OF_DAY -> HOUR_OF_DAY
    java.lang.String MINUTE -> MINUTE
    java.lang.String SECOND -> SECOND
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.TypeAdapters$24:
    java.util.Locale read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.TypeAdapters$25:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.TypeAdapters$26:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.TypeAdapters$27:
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.TypeAdapters$28:
    java.lang.Class val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.bind.TypeAdapters$29:
    java.lang.Class val$unboxed -> val$unboxed
    java.lang.Class val$boxed -> val$boxed
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.TypeAdapters$3:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.bind.TypeAdapters$30:
    java.lang.Class val$base -> val$base
    java.lang.Class val$sub -> val$sub
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.bind.TypeAdapters$31:
    java.lang.Class val$clazz -> val$clazz
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.bind.TypeAdapters$32:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.TypeAdapters$4:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.TypeAdapters$5:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.TypeAdapters$6:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.TypeAdapters$7:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.TypeAdapters$8:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.TypeAdapters$9:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
    java.util.Map nameToConstant -> nameToConstant
    java.util.Map constantToName -> constantToName
    java.lang.Enum read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type type -> type
    int hashCode -> hashCode
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    java.lang.Class getRawType() -> getRawType
    java.lang.reflect.Type getType() -> getType
    boolean isAssignableFrom(java.lang.Class) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    boolean isAssignableFrom(com.google.gson.reflect.TypeToken) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignableFrom
    boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> typeEquals
    java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[]) -> buildUnexpectedTypeError
    boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> matches
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
    char[] NON_EXECUTE_PREFIX -> NON_EXECUTE_PREFIX
    long MIN_INCOMPLETE_INTEGER -> MIN_INCOMPLETE_INTEGER
    int PEEKED_NONE -> PEEKED_NONE
    int PEEKED_BEGIN_OBJECT -> PEEKED_BEGIN_OBJECT
    int PEEKED_END_OBJECT -> PEEKED_END_OBJECT
    int PEEKED_BEGIN_ARRAY -> PEEKED_BEGIN_ARRAY
    int PEEKED_END_ARRAY -> PEEKED_END_ARRAY
    int PEEKED_TRUE -> PEEKED_TRUE
    int PEEKED_FALSE -> PEEKED_FALSE
    int PEEKED_NULL -> PEEKED_NULL
    int PEEKED_SINGLE_QUOTED -> PEEKED_SINGLE_QUOTED
    int PEEKED_DOUBLE_QUOTED -> PEEKED_DOUBLE_QUOTED
    int PEEKED_UNQUOTED -> PEEKED_UNQUOTED
    int PEEKED_BUFFERED -> PEEKED_BUFFERED
    int PEEKED_SINGLE_QUOTED_NAME -> PEEKED_SINGLE_QUOTED_NAME
    int PEEKED_DOUBLE_QUOTED_NAME -> PEEKED_DOUBLE_QUOTED_NAME
    int PEEKED_UNQUOTED_NAME -> PEEKED_UNQUOTED_NAME
    int PEEKED_LONG -> PEEKED_LONG
    int PEEKED_NUMBER -> PEEKED_NUMBER
    int PEEKED_EOF -> PEEKED_EOF
    int NUMBER_CHAR_NONE -> NUMBER_CHAR_NONE
    int NUMBER_CHAR_SIGN -> NUMBER_CHAR_SIGN
    int NUMBER_CHAR_DIGIT -> NUMBER_CHAR_DIGIT
    int NUMBER_CHAR_DECIMAL -> NUMBER_CHAR_DECIMAL
    int NUMBER_CHAR_FRACTION_DIGIT -> NUMBER_CHAR_FRACTION_DIGIT
    int NUMBER_CHAR_EXP_E -> NUMBER_CHAR_EXP_E
    int NUMBER_CHAR_EXP_SIGN -> NUMBER_CHAR_EXP_SIGN
    int NUMBER_CHAR_EXP_DIGIT -> NUMBER_CHAR_EXP_DIGIT
    java.io.Reader in -> in
    boolean lenient -> lenient
    char[] buffer -> buffer
    int pos -> pos
    int limit -> limit
    int lineNumber -> lineNumber
    int lineStart -> lineStart
    int peeked -> peeked
    long peekedLong -> peekedLong
    int peekedNumberLength -> peekedNumberLength
    java.lang.String peekedString -> peekedString
    int[] stack -> stack
    int stackSize -> stackSize
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    int doPeek() -> doPeek
    int peekKeyword() -> peekKeyword
    int peekNumber() -> peekNumber
    boolean isLiteral(char) -> isLiteral
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    java.lang.String nextQuotedValue(char) -> nextQuotedValue
    java.lang.String nextUnquotedValue() -> nextUnquotedValue
    void skipQuotedValue(char) -> skipQuotedValue
    void skipUnquotedValue() -> skipUnquotedValue
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    void push(int) -> push
    boolean fillBuffer(int) -> fillBuffer
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    int nextNonWhitespace(boolean) -> nextNonWhitespace
    void checkLenient() -> checkLenient
    void skipToEndOfLine() -> skipToEndOfLine
    boolean skipTo(java.lang.String) -> skipTo
    java.lang.String toString() -> toString
    char readEscapeCharacter() -> readEscapeCharacter
    java.io.IOException syntaxError(java.lang.String) -> syntaxError
    void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    int access$000(com.google.gson.stream.JsonReader) -> access$000
    int access$100(com.google.gson.stream.JsonReader) -> access$100
    int access$002(com.google.gson.stream.JsonReader,int) -> access$002
    int access$200(com.google.gson.stream.JsonReader) -> access$200
    int access$300(com.google.gson.stream.JsonReader) -> access$300
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.JsonReader$1:
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.stream.JsonScope -> com.google.gson.stream.JsonScope:
    int EMPTY_ARRAY -> EMPTY_ARRAY
    int NONEMPTY_ARRAY -> NONEMPTY_ARRAY
    int EMPTY_OBJECT -> EMPTY_OBJECT
    int DANGLING_NAME -> DANGLING_NAME
    int NONEMPTY_OBJECT -> NONEMPTY_OBJECT
    int EMPTY_DOCUMENT -> EMPTY_DOCUMENT
    int NONEMPTY_DOCUMENT -> NONEMPTY_DOCUMENT
    int CLOSED -> CLOSED
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    com.google.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    com.google.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    com.google.gson.stream.JsonToken NAME -> NAME
    com.google.gson.stream.JsonToken STRING -> STRING
    com.google.gson.stream.JsonToken NUMBER -> NUMBER
    com.google.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    com.google.gson.stream.JsonToken NULL -> NULL
    com.google.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    com.google.gson.stream.JsonToken[] $VALUES -> $VALUES
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
    java.lang.String[] REPLACEMENT_CHARS -> REPLACEMENT_CHARS
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> HTML_SAFE_REPLACEMENT_CHARS
    java.io.Writer out -> out
    int[] stack -> stack
    int stackSize -> stackSize
    java.lang.String indent -> indent
    java.lang.String separator -> separator
    boolean lenient -> lenient
    boolean htmlSafe -> htmlSafe
    java.lang.String deferredName -> deferredName
    boolean serializeNulls -> serializeNulls
    void setIndent(java.lang.String) -> setIndent
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void setHtmlSafe(boolean) -> setHtmlSafe
    boolean isHtmlSafe() -> isHtmlSafe
    void setSerializeNulls(boolean) -> setSerializeNulls
    boolean getSerializeNulls() -> getSerializeNulls
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter open(int,java.lang.String) -> open
    com.google.gson.stream.JsonWriter close(int,int,java.lang.String) -> close
    void push(int) -> push
    int peek() -> peek
    void replaceTop(int) -> replaceTop
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    void writeDeferredName() -> writeDeferredName
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> string
    void newline() -> newline
    void beforeName() -> beforeName
    void beforeValue(boolean) -> beforeValue
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    long serialVersionUID -> serialVersionUID
com.loopj.android.http.AsyncHttpClient -> com.loopj.android.http.AsyncHttpClient:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String HEADER_CONTENT_TYPE -> HEADER_CONTENT_TYPE
    java.lang.String HEADER_CONTENT_RANGE -> HEADER_CONTENT_RANGE
    java.lang.String HEADER_CONTENT_ENCODING -> HEADER_CONTENT_ENCODING
    java.lang.String HEADER_CONTENT_DISPOSITION -> HEADER_CONTENT_DISPOSITION
    java.lang.String HEADER_ACCEPT_ENCODING -> HEADER_ACCEPT_ENCODING
    java.lang.String ENCODING_GZIP -> ENCODING_GZIP
    int DEFAULT_MAX_CONNECTIONS -> DEFAULT_MAX_CONNECTIONS
    int DEFAULT_SOCKET_TIMEOUT -> DEFAULT_SOCKET_TIMEOUT
    int DEFAULT_MAX_RETRIES -> DEFAULT_MAX_RETRIES
    int DEFAULT_RETRY_SLEEP_TIME_MILLIS -> DEFAULT_RETRY_SLEEP_TIME_MILLIS
    int DEFAULT_SOCKET_BUFFER_SIZE -> DEFAULT_SOCKET_BUFFER_SIZE
    int maxConnections -> maxConnections
    int timeout -> timeout
    org.apache.http.impl.client.DefaultHttpClient httpClient -> httpClient
    org.apache.http.protocol.HttpContext httpContext -> httpContext
    java.util.concurrent.ExecutorService threadPool -> threadPool
    java.util.Map requestMap -> requestMap
    java.util.Map clientHeaderMap -> clientHeaderMap
    boolean isUrlEncodingEnabled -> isUrlEncodingEnabled
    org.apache.http.conn.scheme.SchemeRegistry getDefaultSchemeRegistry(boolean,int,int) -> getDefaultSchemeRegistry
    void allowRetryExceptionClass(java.lang.Class) -> allowRetryExceptionClass
    void blockRetryExceptionClass(java.lang.Class) -> blockRetryExceptionClass
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    org.apache.http.protocol.HttpContext getHttpContext() -> getHttpContext
    void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    void setThreadPool(java.util.concurrent.ExecutorService) -> setThreadPool
    java.util.concurrent.ExecutorService getThreadPool() -> getThreadPool
    java.util.concurrent.ExecutorService getDefaultThreadPool() -> getDefaultThreadPool
    void setEnableRedirects(boolean,boolean,boolean) -> setEnableRedirects
    void setEnableRedirects(boolean,boolean) -> setEnableRedirects
    void setEnableRedirects(boolean) -> setEnableRedirects
    void setRedirectHandler(org.apache.http.client.RedirectHandler) -> setRedirectHandler
    void setUserAgent(java.lang.String) -> setUserAgent
    int getMaxConnections() -> getMaxConnections
    void setMaxConnections(int) -> setMaxConnections
    int getTimeout() -> getTimeout
    void setTimeout(int) -> setTimeout
    void setProxy(java.lang.String,int) -> setProxy
    void setProxy(java.lang.String,int,java.lang.String,java.lang.String) -> setProxy
    void setSSLSocketFactory(org.apache.http.conn.ssl.SSLSocketFactory) -> setSSLSocketFactory
    void setMaxRetriesAndTimeout(int,int) -> setMaxRetriesAndTimeout
    void removeAllHeaders() -> removeAllHeaders
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    void setBasicAuth(java.lang.String,java.lang.String) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,boolean) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,org.apache.http.auth.AuthScope) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,org.apache.http.auth.AuthScope,boolean) -> setBasicAuth
    void setAuthenticationPreemptive(boolean) -> setAuthenticationPreemptive
    void clearBasicAuth() -> clearBasicAuth
    void cancelRequests(android.content.Context,boolean) -> cancelRequests
    void cancelAllRequests(boolean) -> cancelAllRequests
    com.loopj.android.http.RequestHandle head(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(android.content.Context,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle get(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle post(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,org.apache.http.Header[],org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle put(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(android.content.Context,java.lang.String,org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(android.content.Context,java.lang.String,org.apache.http.Header[],org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle delete(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.RequestHandle delete(android.content.Context,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.RequestHandle delete(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.RequestHandle delete(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.AsyncHttpRequest newAsyncHttpRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> newAsyncHttpRequest
    com.loopj.android.http.RequestHandle sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> sendRequest
    void setURLEncodingEnabled(boolean) -> setURLEncodingEnabled
    java.lang.String getUrlWithQueryString(boolean,java.lang.String,com.loopj.android.http.RequestParams) -> getUrlWithQueryString
    boolean isInputStreamGZIPCompressed(java.io.PushbackInputStream) -> isInputStreamGZIPCompressed
    void silentCloseInputStream(java.io.InputStream) -> silentCloseInputStream
    void silentCloseOutputStream(java.io.OutputStream) -> silentCloseOutputStream
    org.apache.http.HttpEntity paramsToEntity(com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> paramsToEntity
    boolean isUrlEncodingEnabled() -> isUrlEncodingEnabled
    org.apache.http.client.methods.HttpEntityEnclosingRequestBase addEntityToRequestBase(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,org.apache.http.HttpEntity) -> addEntityToRequestBase
    void endEntityViaReflection(org.apache.http.HttpEntity) -> endEntityViaReflection
    java.util.Map access$0(com.loopj.android.http.AsyncHttpClient) -> access$0
    java.util.Map access$1(com.loopj.android.http.AsyncHttpClient) -> access$1
com.loopj.android.http.AsyncHttpClient$1 -> com.loopj.android.http.AsyncHttpClient$1:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$2 -> com.loopj.android.http.AsyncHttpClient$2:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$3 -> com.loopj.android.http.AsyncHttpClient$3:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$4 -> com.loopj.android.http.AsyncHttpClient$4:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    android.content.Context val$context -> val$context
    boolean val$mayInterruptIfRunning -> val$mayInterruptIfRunning
    void run() -> run
com.loopj.android.http.AsyncHttpClient$InflatingEntity -> com.loopj.android.http.AsyncHttpClient$InflatingEntity:
    java.io.InputStream wrappedStream -> wrappedStream
    java.io.PushbackInputStream pushbackStream -> pushbackStream
    java.util.zip.GZIPInputStream gzippedStream -> gzippedStream
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    void consumeContent() -> consumeContent
com.loopj.android.http.AsyncHttpRequest -> com.loopj.android.http.AsyncHttpRequest:
    org.apache.http.impl.client.AbstractHttpClient client -> client
    org.apache.http.protocol.HttpContext context -> context
    org.apache.http.client.methods.HttpUriRequest request -> request
    com.loopj.android.http.ResponseHandlerInterface responseHandler -> responseHandler
    int executionCount -> executionCount
    boolean isCancelled -> isCancelled
    boolean cancelIsNotified -> cancelIsNotified
    boolean isFinished -> isFinished
    void run() -> run
    void makeRequest() -> makeRequest
    void makeRequestWithRetries() -> makeRequestWithRetries
    boolean isCancelled() -> isCancelled
    void sendCancelNotification() -> sendCancelNotification
    boolean isDone() -> isDone
    boolean cancel(boolean) -> cancel
com.loopj.android.http.AsyncHttpResponseHandler -> com.loopj.android.http.AsyncHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    int SUCCESS_MESSAGE -> SUCCESS_MESSAGE
    int FAILURE_MESSAGE -> FAILURE_MESSAGE
    int START_MESSAGE -> START_MESSAGE
    int FINISH_MESSAGE -> FINISH_MESSAGE
    int PROGRESS_MESSAGE -> PROGRESS_MESSAGE
    int RETRY_MESSAGE -> RETRY_MESSAGE
    int CANCEL_MESSAGE -> CANCEL_MESSAGE
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String responseCharset -> responseCharset
    android.os.Handler handler -> handler
    boolean useSynchronousMode -> useSynchronousMode
    java.net.URI requestURI -> requestURI
    org.apache.http.Header[] requestHeaders -> requestHeaders
    java.net.URI getRequestURI() -> getRequestURI
    org.apache.http.Header[] getRequestHeaders() -> getRequestHeaders
    void setRequestURI(java.net.URI) -> setRequestURI
    void setRequestHeaders(org.apache.http.Header[]) -> setRequestHeaders
    boolean getUseSynchronousMode() -> getUseSynchronousMode
    void setUseSynchronousMode(boolean) -> setUseSynchronousMode
    void setCharset(java.lang.String) -> setCharset
    java.lang.String getCharset() -> getCharset
    void onProgress(int,int) -> onProgress
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onRetry(int) -> onRetry
    void onCancel() -> onCancel
    void sendProgressMessage(int,int) -> sendProgressMessage
    void sendSuccessMessage(int,org.apache.http.Header[],byte[]) -> sendSuccessMessage
    void sendFailureMessage(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> sendFailureMessage
    void sendStartMessage() -> sendStartMessage
    void sendFinishMessage() -> sendFinishMessage
    void sendRetryMessage(int) -> sendRetryMessage
    void sendCancelMessage() -> sendCancelMessage
    void handleMessage(android.os.Message) -> handleMessage
    void sendMessage(android.os.Message) -> sendMessage
    void postRunnable(java.lang.Runnable) -> postRunnable
    android.os.Message obtainMessage(int,java.lang.Object) -> obtainMessage
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
com.loopj.android.http.AsyncHttpResponseHandler$ResponderHandler -> com.loopj.android.http.AsyncHttpResponseHandler$ResponderHandler:
    com.loopj.android.http.AsyncHttpResponseHandler mResponder -> mResponder
    void handleMessage(android.os.Message) -> handleMessage
com.loopj.android.http.Base64 -> com.loopj.android.http.Base64:
    int DEFAULT -> DEFAULT
    int NO_PADDING -> NO_PADDING
    int NO_WRAP -> NO_WRAP
    int CRLF -> CRLF
    int URL_SAFE -> URL_SAFE
    int NO_CLOSE -> NO_CLOSE
    byte[] decode(java.lang.String,int) -> decode
    byte[] decode(byte[],int) -> decode
    byte[] decode(byte[],int,int,int) -> decode
    java.lang.String encodeToString(byte[],int) -> encodeToString
    java.lang.String encodeToString(byte[],int,int,int) -> encodeToString
    byte[] encode(byte[],int) -> encode
    byte[] encode(byte[],int,int,int) -> encode
com.loopj.android.http.Base64$Coder -> com.loopj.android.http.Base64$Coder:
    byte[] output -> output
    int op -> op
    boolean process(byte[],int,int,boolean) -> process
    int maxOutputSize(int) -> maxOutputSize
com.loopj.android.http.Base64$Decoder -> com.loopj.android.http.Base64$Decoder:
    int[] DECODE -> DECODE
    int[] DECODE_WEBSAFE -> DECODE_WEBSAFE
    int SKIP -> SKIP
    int EQUALS -> EQUALS
    int state -> state
    int value -> value
    int[] alphabet -> alphabet
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
com.loopj.android.http.Base64$Encoder -> com.loopj.android.http.Base64$Encoder:
    int LINE_GROUPS -> LINE_GROUPS
    byte[] ENCODE -> ENCODE
    byte[] ENCODE_WEBSAFE -> ENCODE_WEBSAFE
    byte[] tail -> tail
    int tailLen -> tailLen
    int count -> count
    boolean do_padding -> do_padding
    boolean do_newline -> do_newline
    boolean do_cr -> do_cr
    byte[] alphabet -> alphabet
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
com.loopj.android.http.Base64DataException -> com.loopj.android.http.Base64DataException:
com.loopj.android.http.Base64OutputStream -> com.loopj.android.http.Base64OutputStream:
    com.loopj.android.http.Base64$Coder coder -> coder
    int flags -> flags
    byte[] buffer -> buffer
    int bpos -> bpos
    byte[] EMPTY -> EMPTY
    void write(int) -> write
    void flushBuffer() -> flushBuffer
    void write(byte[],int,int) -> write
    void close() -> close
    void internalWrite(byte[],int,int,boolean) -> internalWrite
    byte[] embiggen(byte[],int) -> embiggen
com.loopj.android.http.BaseJsonHttpResponseHandler -> com.loopj.android.http.BaseJsonHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    void onSuccess(int,org.apache.http.Header[],java.lang.String,java.lang.Object) -> onSuccess
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,java.lang.String,java.lang.Object) -> onFailure
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> onSuccess
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    java.lang.Object parseResponse(java.lang.String,boolean) -> parseResponse
com.loopj.android.http.BaseJsonHttpResponseHandler$1 -> com.loopj.android.http.BaseJsonHttpResponseHandler$1:
    com.loopj.android.http.BaseJsonHttpResponseHandler this$0 -> this$0
    java.lang.String val$responseString -> val$responseString
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    void run() -> run
    com.loopj.android.http.BaseJsonHttpResponseHandler access$0(com.loopj.android.http.BaseJsonHttpResponseHandler$1) -> access$0
com.loopj.android.http.BaseJsonHttpResponseHandler$1$1 -> com.loopj.android.http.BaseJsonHttpResponseHandler$1$1:
    com.loopj.android.http.BaseJsonHttpResponseHandler$1 this$1 -> this$1
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    java.lang.String val$responseString -> val$responseString
    java.lang.Object val$jsonResponse -> val$jsonResponse
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$1$2 -> com.loopj.android.http.BaseJsonHttpResponseHandler$1$2:
    com.loopj.android.http.BaseJsonHttpResponseHandler$1 this$1 -> this$1
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    java.lang.Throwable val$t -> val$t
    java.lang.String val$responseString -> val$responseString
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$2 -> com.loopj.android.http.BaseJsonHttpResponseHandler$2:
    com.loopj.android.http.BaseJsonHttpResponseHandler this$0 -> this$0
    java.lang.String val$responseString -> val$responseString
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    java.lang.Throwable val$throwable -> val$throwable
    void run() -> run
    com.loopj.android.http.BaseJsonHttpResponseHandler access$0(com.loopj.android.http.BaseJsonHttpResponseHandler$2) -> access$0
com.loopj.android.http.BaseJsonHttpResponseHandler$2$1 -> com.loopj.android.http.BaseJsonHttpResponseHandler$2$1:
    com.loopj.android.http.BaseJsonHttpResponseHandler$2 this$1 -> this$1
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    java.lang.Throwable val$throwable -> val$throwable
    java.lang.String val$responseString -> val$responseString
    java.lang.Object val$jsonResponse -> val$jsonResponse
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$2$2 -> com.loopj.android.http.BaseJsonHttpResponseHandler$2$2:
    com.loopj.android.http.BaseJsonHttpResponseHandler$2 this$1 -> this$1
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    java.lang.Throwable val$throwable -> val$throwable
    java.lang.String val$responseString -> val$responseString
    void run() -> run
com.loopj.android.http.BinaryHttpResponseHandler -> com.loopj.android.http.BinaryHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String[] mAllowedContentTypes -> mAllowedContentTypes
    java.lang.String[] getAllowedContentTypes() -> getAllowedContentTypes
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
com.loopj.android.http.DataAsyncHttpResponseHandler -> com.loopj.android.http.DataAsyncHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    int PROGRESS_DATA_MESSAGE -> PROGRESS_DATA_MESSAGE
    void onProgressData(byte[]) -> onProgressData
    void sendProgressDataMessage(byte[]) -> sendProgressDataMessage
    void handleMessage(android.os.Message) -> handleMessage
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
    byte[] copyOfRange(byte[],int,int) -> copyOfRange
com.loopj.android.http.FileAsyncHttpResponseHandler -> com.loopj.android.http.FileAsyncHttpResponseHandler:
    java.io.File mFile -> mFile
    java.lang.String LOG_TAG -> LOG_TAG
    boolean $assertionsDisabled -> $assertionsDisabled
    boolean deleteTargetFile() -> deleteTargetFile
    java.io.File getTemporaryFile(android.content.Context) -> getTemporaryFile
    java.io.File getTargetFile() -> getTargetFile
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,java.io.File) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],java.io.File) -> onSuccess
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
com.loopj.android.http.JsonHttpResponseHandler -> com.loopj.android.http.JsonHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    void onSuccess(int,org.apache.http.Header[],org.json.JSONObject) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],org.json.JSONArray) -> onSuccess
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONObject) -> onFailure
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONArray) -> onFailure
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    java.lang.Object parseResponse(byte[]) -> parseResponse
com.loopj.android.http.JsonHttpResponseHandler$1 -> com.loopj.android.http.JsonHttpResponseHandler$1:
    com.loopj.android.http.JsonHttpResponseHandler this$0 -> this$0
    byte[] val$responseBytes -> val$responseBytes
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    void run() -> run
    com.loopj.android.http.JsonHttpResponseHandler access$0(com.loopj.android.http.JsonHttpResponseHandler$1) -> access$0
com.loopj.android.http.JsonHttpResponseHandler$1$1 -> com.loopj.android.http.JsonHttpResponseHandler$1$1:
    com.loopj.android.http.JsonHttpResponseHandler$1 this$1 -> this$1
    java.lang.Object val$jsonResponse -> val$jsonResponse
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$1$2 -> com.loopj.android.http.JsonHttpResponseHandler$1$2:
    com.loopj.android.http.JsonHttpResponseHandler$1 this$1 -> this$1
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    org.json.JSONException val$ex -> val$ex
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2 -> com.loopj.android.http.JsonHttpResponseHandler$2:
    com.loopj.android.http.JsonHttpResponseHandler this$0 -> this$0
    byte[] val$responseBytes -> val$responseBytes
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    java.lang.Throwable val$throwable -> val$throwable
    void run() -> run
    com.loopj.android.http.JsonHttpResponseHandler access$0(com.loopj.android.http.JsonHttpResponseHandler$2) -> access$0
com.loopj.android.http.JsonHttpResponseHandler$2$1 -> com.loopj.android.http.JsonHttpResponseHandler$2$1:
    com.loopj.android.http.JsonHttpResponseHandler$2 this$1 -> this$1
    java.lang.Object val$jsonResponse -> val$jsonResponse
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    java.lang.Throwable val$throwable -> val$throwable
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2$2 -> com.loopj.android.http.JsonHttpResponseHandler$2$2:
    com.loopj.android.http.JsonHttpResponseHandler$2 this$1 -> this$1
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    org.json.JSONException val$ex -> val$ex
    void run() -> run
com.loopj.android.http.JsonStreamerEntity -> com.loopj.android.http.JsonStreamerEntity:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.UnsupportedOperationException ERR_UNSUPPORTED -> ERR_UNSUPPORTED
    int BUFFER_SIZE -> BUFFER_SIZE
    byte[] buffer -> buffer
    java.lang.StringBuilder BUILDER -> BUILDER
    byte[] JSON_TRUE -> JSON_TRUE
    byte[] JSON_FALSE -> JSON_FALSE
    byte[] JSON_NULL -> JSON_NULL
    byte[] STREAM_NAME -> STREAM_NAME
    byte[] STREAM_TYPE -> STREAM_TYPE
    byte[] STREAM_CONTENTS -> STREAM_CONTENTS
    byte[] STREAM_ELAPSED -> STREAM_ELAPSED
    org.apache.http.Header HEADER_JSON_CONTENT -> HEADER_JSON_CONTENT
    org.apache.http.Header HEADER_GZIP_ENCODING -> HEADER_GZIP_ENCODING
    java.util.Map jsonParams -> jsonParams
    org.apache.http.Header contentEncoding -> contentEncoding
    com.loopj.android.http.ResponseHandlerInterface progressHandler -> progressHandler
    void addPart(java.lang.String,java.lang.Object) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    org.apache.http.Header getContentType() -> getContentType
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    void writeToFromStream(java.io.OutputStream,com.loopj.android.http.RequestParams$StreamWrapper) -> writeToFromStream
    void writeToFromFile(java.io.OutputStream,com.loopj.android.http.RequestParams$FileWrapper) -> writeToFromFile
    void writeMetaData(java.io.OutputStream,java.lang.String,java.lang.String) -> writeMetaData
    void endMetaData(java.io.OutputStream) -> endMetaData
    byte[] escape(java.lang.String) -> escape
com.loopj.android.http.MyRedirectHandler -> com.loopj.android.http.MyRedirectHandler:
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    boolean enableRedirects -> enableRedirects
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
com.loopj.android.http.MySSLSocketFactory -> com.loopj.android.http.MySSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    void fixHttpsURLConnection() -> fixHttpsURLConnection
    java.security.KeyStore getKeystoreOfCA(java.io.InputStream) -> getKeystoreOfCA
    java.security.KeyStore getKeystore() -> getKeystore
    org.apache.http.conn.ssl.SSLSocketFactory getFixedSocketFactory() -> getFixedSocketFactory
    org.apache.http.impl.client.DefaultHttpClient getNewHttpClient(java.security.KeyStore) -> getNewHttpClient
com.loopj.android.http.MySSLSocketFactory$1 -> com.loopj.android.http.MySSLSocketFactory$1:
    com.loopj.android.http.MySSLSocketFactory this$0 -> this$0
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.loopj.android.http.PersistentCookieStore -> com.loopj.android.http.PersistentCookieStore:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String COOKIE_PREFS -> COOKIE_PREFS
    java.lang.String COOKIE_NAME_STORE -> COOKIE_NAME_STORE
    java.lang.String COOKIE_NAME_PREFIX -> COOKIE_NAME_PREFIX
    boolean omitNonPersistentCookies -> omitNonPersistentCookies
    java.util.concurrent.ConcurrentHashMap cookies -> cookies
    android.content.SharedPreferences cookiePrefs -> cookiePrefs
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void clear() -> clear
    boolean clearExpired(java.util.Date) -> clearExpired
    java.util.List getCookies() -> getCookies
    void setOmitNonPersistentCookies(boolean) -> setOmitNonPersistentCookies
    void deleteCookie(org.apache.http.cookie.Cookie) -> deleteCookie
    java.lang.String encodeCookie(com.loopj.android.http.SerializableCookie) -> encodeCookie
    org.apache.http.cookie.Cookie decodeCookie(java.lang.String) -> decodeCookie
    java.lang.String byteArrayToHexString(byte[]) -> byteArrayToHexString
    byte[] hexStringToByteArray(java.lang.String) -> hexStringToByteArray
com.loopj.android.http.PreemtiveAuthorizationHttpRequestInterceptor -> com.loopj.android.http.PreemtiveAuthorizationHttpRequestInterceptor:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.RangeFileAsyncHttpResponseHandler -> com.loopj.android.http.RangeFileAsyncHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    long current -> current
    boolean append -> append
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
    void updateRequestHeaders(org.apache.http.client.methods.HttpUriRequest) -> updateRequestHeaders
com.loopj.android.http.RequestHandle -> com.loopj.android.http.RequestHandle:
    java.lang.ref.WeakReference request -> request
    boolean cancel(boolean) -> cancel
    boolean isFinished() -> isFinished
    boolean isCancelled() -> isCancelled
    boolean shouldBeGarbageCollected() -> shouldBeGarbageCollected
com.loopj.android.http.RequestParams -> com.loopj.android.http.RequestParams:
    java.lang.String APPLICATION_OCTET_STREAM -> APPLICATION_OCTET_STREAM
    java.lang.String APPLICATION_JSON -> APPLICATION_JSON
    java.lang.String LOG_TAG -> LOG_TAG
    boolean isRepeatable -> isRepeatable
    boolean useJsonStreamer -> useJsonStreamer
    boolean autoCloseInputStreams -> autoCloseInputStreams
    java.util.concurrent.ConcurrentHashMap urlParams -> urlParams
    java.util.concurrent.ConcurrentHashMap streamParams -> streamParams
    java.util.concurrent.ConcurrentHashMap fileParams -> fileParams
    java.util.concurrent.ConcurrentHashMap urlParamsWithObjects -> urlParamsWithObjects
    java.lang.String contentEncoding -> contentEncoding
    void setContentEncoding(java.lang.String) -> setContentEncoding
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.File) -> put
    void put(java.lang.String,java.io.File,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String,java.lang.String,boolean) -> put
    void put(java.lang.String,java.lang.Object) -> put
    void put(java.lang.String,int) -> put
    void put(java.lang.String,long) -> put
    void add(java.lang.String,java.lang.String) -> add
    void remove(java.lang.String) -> remove
    boolean has(java.lang.String) -> has
    java.lang.String toString() -> toString
    void setHttpEntityIsRepeatable(boolean) -> setHttpEntityIsRepeatable
    void setUseJsonStreamer(boolean) -> setUseJsonStreamer
    void setAutoCloseInputStreams(boolean) -> setAutoCloseInputStreams
    org.apache.http.HttpEntity getEntity(com.loopj.android.http.ResponseHandlerInterface) -> getEntity
    org.apache.http.HttpEntity createJsonStreamerEntity(com.loopj.android.http.ResponseHandlerInterface) -> createJsonStreamerEntity
    org.apache.http.HttpEntity createFormEntity() -> createFormEntity
    org.apache.http.HttpEntity createMultipartEntity(com.loopj.android.http.ResponseHandlerInterface) -> createMultipartEntity
    java.util.List getParamsList() -> getParamsList
    java.util.List getParamsList(java.lang.String,java.lang.Object) -> getParamsList
    java.lang.String getParamString() -> getParamString
com.loopj.android.http.RequestParams$1 -> com.loopj.android.http.RequestParams$1:
com.loopj.android.http.RequestParams$FileWrapper -> com.loopj.android.http.RequestParams$FileWrapper:
    java.io.File file -> file
    java.lang.String contentType -> contentType
com.loopj.android.http.RequestParams$StreamWrapper -> com.loopj.android.http.RequestParams$StreamWrapper:
    java.io.InputStream inputStream -> inputStream
    java.lang.String name -> name
    java.lang.String contentType -> contentType
    boolean autoClose -> autoClose
    com.loopj.android.http.RequestParams$StreamWrapper newInstance(java.io.InputStream,java.lang.String,java.lang.String,boolean) -> newInstance
com.loopj.android.http.ResponseHandlerInterface -> com.loopj.android.http.ResponseHandlerInterface:
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
    void sendStartMessage() -> sendStartMessage
    void sendFinishMessage() -> sendFinishMessage
    void sendProgressMessage(int,int) -> sendProgressMessage
    void sendCancelMessage() -> sendCancelMessage
    void sendSuccessMessage(int,org.apache.http.Header[],byte[]) -> sendSuccessMessage
    void sendFailureMessage(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> sendFailureMessage
    void sendRetryMessage(int) -> sendRetryMessage
    java.net.URI getRequestURI() -> getRequestURI
    org.apache.http.Header[] getRequestHeaders() -> getRequestHeaders
    void setRequestURI(java.net.URI) -> setRequestURI
    void setRequestHeaders(org.apache.http.Header[]) -> setRequestHeaders
    void setUseSynchronousMode(boolean) -> setUseSynchronousMode
    boolean getUseSynchronousMode() -> getUseSynchronousMode
com.loopj.android.http.RetryHandler -> com.loopj.android.http.RetryHandler:
    java.util.HashSet exceptionWhitelist -> exceptionWhitelist
    java.util.HashSet exceptionBlacklist -> exceptionBlacklist
    int maxRetries -> maxRetries
    int retrySleepTimeMS -> retrySleepTimeMS
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    void addClassToWhitelist(java.lang.Class) -> addClassToWhitelist
    void addClassToBlacklist(java.lang.Class) -> addClassToBlacklist
    boolean isInList(java.util.HashSet,java.lang.Throwable) -> isInList
com.loopj.android.http.SaxAsyncHttpResponseHandler -> com.loopj.android.http.SaxAsyncHttpResponseHandler:
    org.xml.sax.helpers.DefaultHandler handler -> handler
    java.lang.String LOG_TAG -> LOG_TAG
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
    void onSuccess(int,org.apache.http.Header[],org.xml.sax.helpers.DefaultHandler) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],org.xml.sax.helpers.DefaultHandler) -> onFailure
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.loopj.android.http.SerializableCookie -> com.loopj.android.http.SerializableCookie:
    long serialVersionUID -> serialVersionUID
    org.apache.http.cookie.Cookie cookie -> cookie
    org.apache.http.impl.cookie.BasicClientCookie clientCookie -> clientCookie
    org.apache.http.cookie.Cookie getCookie() -> getCookie
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.loopj.android.http.SimpleMultipartEntity -> com.loopj.android.http.SimpleMultipartEntity:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String STR_CR_LF -> STR_CR_LF
    byte[] CR_LF -> CR_LF
    byte[] TRANSFER_ENCODING_BINARY -> TRANSFER_ENCODING_BINARY
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    java.lang.String boundary -> boundary
    byte[] boundaryLine -> boundaryLine
    byte[] boundaryEnd -> boundaryEnd
    boolean isRepeatable -> isRepeatable
    java.util.List fileParts -> fileParts
    java.io.ByteArrayOutputStream out -> out
    com.loopj.android.http.ResponseHandlerInterface progressHandler -> progressHandler
    int bytesWritten -> bytesWritten
    int totalSize -> totalSize
    void addPart(java.lang.String,java.lang.String,java.lang.String) -> addPart
    void addPartWithCharset(java.lang.String,java.lang.String,java.lang.String) -> addPartWithCharset
    void addPart(java.lang.String,java.lang.String) -> addPart
    void addPart(java.lang.String,java.io.File) -> addPart
    void addPart(java.lang.String,java.io.File,java.lang.String) -> addPart
    void addPart(java.lang.String,java.lang.String,java.io.InputStream,java.lang.String) -> addPart
    java.lang.String normalizeContentType(java.lang.String) -> normalizeContentType
    byte[] createContentType(java.lang.String) -> createContentType
    byte[] createContentDisposition(java.lang.String) -> createContentDisposition
    byte[] createContentDisposition(java.lang.String,java.lang.String) -> createContentDisposition
    void updateProgress(int) -> updateProgress
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    boolean isChunked() -> isChunked
    void setIsRepeatable(boolean) -> setIsRepeatable
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    byte[] access$0(com.loopj.android.http.SimpleMultipartEntity) -> access$0
    byte[] access$1(com.loopj.android.http.SimpleMultipartEntity,java.lang.String,java.lang.String) -> access$1
    byte[] access$2(com.loopj.android.http.SimpleMultipartEntity,java.lang.String) -> access$2
    byte[] access$3() -> access$3
    byte[] access$4() -> access$4
    void access$5(com.loopj.android.http.SimpleMultipartEntity,int) -> access$5
com.loopj.android.http.SimpleMultipartEntity$FilePart -> com.loopj.android.http.SimpleMultipartEntity$FilePart:
    java.io.File file -> file
    byte[] header -> header
    com.loopj.android.http.SimpleMultipartEntity this$0 -> this$0
    byte[] createHeader(java.lang.String,java.lang.String,java.lang.String) -> createHeader
    long getTotalLength() -> getTotalLength
    void writeTo(java.io.OutputStream) -> writeTo
com.loopj.android.http.SyncHttpClient -> com.loopj.android.http.SyncHttpClient:
    com.loopj.android.http.RequestHandle sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> sendRequest
com.loopj.android.http.TextHttpResponseHandler -> com.loopj.android.http.TextHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    java.lang.String getResponseString(byte[],java.lang.String) -> getResponseString
com.loopj.android.http.package-info -> com.loopj.android.http.package-info:
com.nostra13.universalimageloader.cache.disc.BaseDiscCache -> com.nostra13.universalimageloader.cache.disc.BaseDiscCache:
    java.lang.String ERROR_ARG_NULL -> ERROR_ARG_NULL
    java.io.File cacheDir -> cacheDir
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> fileNameGenerator
    java.io.File get(java.lang.String) -> get
    void clear() -> clear
com.nostra13.universalimageloader.cache.disc.DiscCacheAware -> com.nostra13.universalimageloader.cache.disc.DiscCacheAware:
    void put(java.lang.String,java.io.File) -> put
    java.io.File get(java.lang.String) -> get
    void clear() -> clear
com.nostra13.universalimageloader.cache.disc.LimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.LimitedDiscCache:
    int INVALID_SIZE -> INVALID_SIZE
    java.util.concurrent.atomic.AtomicInteger cacheSize -> cacheSize
    int sizeLimit -> sizeLimit
    java.util.Map lastUsageDates -> lastUsageDates
    void calculateCacheSizeAndFillUsageMap() -> calculateCacheSizeAndFillUsageMap
    void put(java.lang.String,java.io.File) -> put
    java.io.File get(java.lang.String) -> get
    void clear() -> clear
    int removeNext() -> removeNext
    int getSize(java.io.File) -> getSize
    java.util.Map access$000(com.nostra13.universalimageloader.cache.disc.LimitedDiscCache) -> access$000
    java.util.concurrent.atomic.AtomicInteger access$100(com.nostra13.universalimageloader.cache.disc.LimitedDiscCache) -> access$100
com.nostra13.universalimageloader.cache.disc.LimitedDiscCache$1 -> com.nostra13.universalimageloader.cache.disc.LimitedDiscCache$1:
    com.nostra13.universalimageloader.cache.disc.LimitedDiscCache this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.cache.disc.impl.FileCountLimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.FileCountLimitedDiscCache:
    int getSize(java.io.File) -> getSize
com.nostra13.universalimageloader.cache.disc.impl.LimitedAgeDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.LimitedAgeDiscCache:
    long maxFileAge -> maxFileAge
    java.util.Map loadingDates -> loadingDates
    void put(java.lang.String,java.io.File) -> put
    java.io.File get(java.lang.String) -> get
com.nostra13.universalimageloader.cache.disc.impl.TotalSizeLimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.TotalSizeLimitedDiscCache:
    int MIN_NORMAL_CACHE_SIZE_IN_MB -> MIN_NORMAL_CACHE_SIZE_IN_MB
    int MIN_NORMAL_CACHE_SIZE -> MIN_NORMAL_CACHE_SIZE
    int getSize(java.io.File) -> getSize
com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache:
    void put(java.lang.String,java.io.File) -> put
com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator:
    java.lang.String HASH_ALGORITHM -> HASH_ALGORITHM
    int RADIX -> RADIX
    java.lang.String generate(java.lang.String) -> generate
    byte[] getMD5(byte[]) -> getMD5
com.nostra13.universalimageloader.cache.memory.BaseMemoryCache -> com.nostra13.universalimageloader.cache.memory.BaseMemoryCache:
    java.util.Map softMap -> softMap
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
    void remove(java.lang.Object) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache:
    int MAX_NORMAL_CACHE_SIZE_IN_MB -> MAX_NORMAL_CACHE_SIZE_IN_MB
    int MAX_NORMAL_CACHE_SIZE -> MAX_NORMAL_CACHE_SIZE
    int sizeLimit -> sizeLimit
    java.util.concurrent.atomic.AtomicInteger cacheSize -> cacheSize
    java.util.List hardCache -> hardCache
    boolean put(java.lang.Object,java.lang.Object) -> put
    void remove(java.lang.Object) -> remove
    void clear() -> clear
    int getSizeLimit() -> getSizeLimit
    int getSize(java.lang.Object) -> getSize
    java.lang.Object removeNext() -> removeNext
com.nostra13.universalimageloader.cache.memory.MemoryCacheAware -> com.nostra13.universalimageloader.cache.memory.MemoryCacheAware:
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void remove(java.lang.Object) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
com.nostra13.universalimageloader.cache.memory.impl.FIFOLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.FIFOLimitedMemoryCache:
    java.util.List queue -> queue
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object removeNext() -> removeNext
    int getSize(java.lang.Object) -> getSize
    void remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache:
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware cache -> cache
    java.util.Comparator keyComparator -> keyComparator
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void remove(java.lang.Object) -> remove
    void clear() -> clear
    java.util.Collection keys() -> keys
com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache:
    int INITIAL_CAPACITY -> INITIAL_CAPACITY
    float LOAD_FACTOR -> LOAD_FACTOR
    java.util.Map lruCache -> lruCache
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object removeNext() -> removeNext
    int getSize(java.lang.Object) -> getSize
    void remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
    java.lang.Object get(java.lang.Object) -> get
com.nostra13.universalimageloader.cache.memory.impl.LargestLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LargestLimitedMemoryCache:
    java.util.Map valueSizes -> valueSizes
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object removeNext() -> removeNext
    int getSize(java.lang.Object) -> getSize
    void remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
com.nostra13.universalimageloader.cache.memory.impl.LimitedAgeMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LimitedAgeMemoryCache:
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware cache -> cache
    long maxAge -> maxAge
    java.util.Map loadingDates -> loadingDates
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void remove(java.lang.Object) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache:
    java.util.LinkedHashMap map -> map
    int maxSize -> maxSize
    int size -> size
    android.graphics.Bitmap get(java.lang.String) -> get
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void trimToSize(int) -> trimToSize
    void remove(java.lang.String) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> sizeOf
    java.lang.String toString() -> toString
    void remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache:
    java.util.Map usingCounts -> usingCounts
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object removeNext() -> removeNext
    int getSize(java.lang.Object) -> getSize
    void remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
    java.lang.Object get(java.lang.Object) -> get
com.nostra13.universalimageloader.cache.memory.impl.WeakMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.WeakMemoryCache:
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
com.nostra13.universalimageloader.core.DefaultConfigurationFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory:
    java.util.concurrent.Executor createExecutor(int,int,com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> createExecutor
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator createFileNameGenerator() -> createFileNameGenerator
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware createDiscCache(android.content.Context,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator,int,int) -> createDiscCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware createReserveDiscCache(java.io.File) -> createReserveDiscCache
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware createMemoryCache(int) -> createMemoryCache
    com.nostra13.universalimageloader.core.download.ImageDownloader createImageDownloader(android.content.Context) -> createImageDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder createImageDecoder(boolean) -> createImageDecoder
    com.nostra13.universalimageloader.core.display.BitmapDisplayer createBitmapDisplayer() -> createBitmapDisplayer
    java.util.concurrent.ThreadFactory createThreadFactory(int) -> createThreadFactory
com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory:
    java.util.concurrent.atomic.AtomicInteger poolNumber -> poolNumber
    java.lang.ThreadGroup group -> group
    java.util.concurrent.atomic.AtomicInteger threadNumber -> threadNumber
    java.lang.String namePrefix -> namePrefix
    int threadPriority -> threadPriority
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.nostra13.universalimageloader.core.DisplayBitmapTask -> com.nostra13.universalimageloader.core.DisplayBitmapTask:
    java.lang.String LOG_DISPLAY_IMAGE_IN_IMAGEAWARE -> LOG_DISPLAY_IMAGE_IN_IMAGEAWARE
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_REUSED -> LOG_TASK_CANCELLED_IMAGEAWARE_REUSED
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED -> LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED
    android.graphics.Bitmap bitmap -> bitmap
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> loadedFrom
    boolean loggingEnabled -> loggingEnabled
    void run() -> run
    boolean isViewWasReused() -> isViewWasReused
    void setLoggingEnabled(boolean) -> setLoggingEnabled
com.nostra13.universalimageloader.core.DisplayImageOptions -> com.nostra13.universalimageloader.core.DisplayImageOptions:
    int imageResOnLoading -> imageResOnLoading
    int imageResForEmptyUri -> imageResForEmptyUri
    int imageResOnFail -> imageResOnFail
    android.graphics.drawable.Drawable imageOnLoading -> imageOnLoading
    android.graphics.drawable.Drawable imageForEmptyUri -> imageForEmptyUri
    android.graphics.drawable.Drawable imageOnFail -> imageOnFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisc -> cacheOnDisc
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    boolean considerExifParams -> considerExifParams
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    boolean isSyncLoading -> isSyncLoading
    boolean shouldShowImageOnLoading() -> shouldShowImageOnLoading
    boolean shouldShowImageForEmptyUri() -> shouldShowImageForEmptyUri
    boolean shouldShowImageOnFail() -> shouldShowImageOnFail
    boolean shouldPreProcess() -> shouldPreProcess
    boolean shouldPostProcess() -> shouldPostProcess
    boolean shouldDelayBeforeLoading() -> shouldDelayBeforeLoading
    android.graphics.drawable.Drawable getImageOnLoading(android.content.res.Resources) -> getImageOnLoading
    android.graphics.drawable.Drawable getImageForEmptyUri(android.content.res.Resources) -> getImageForEmptyUri
    android.graphics.drawable.Drawable getImageOnFail(android.content.res.Resources) -> getImageOnFail
    boolean isResetViewBeforeLoading() -> isResetViewBeforeLoading
    boolean isCacheInMemory() -> isCacheInMemory
    boolean isCacheOnDisc() -> isCacheOnDisc
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
    int getDelayBeforeLoading() -> getDelayBeforeLoading
    boolean isConsiderExifParams() -> isConsiderExifParams
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPreProcessor() -> getPreProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPostProcessor() -> getPostProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer getDisplayer() -> getDisplayer
    android.os.Handler getHandler() -> getHandler
    boolean isSyncLoading() -> isSyncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions createSimple() -> createSimple
    int access$1900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1900
    int access$2000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2000
    int access$2100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2100
    android.graphics.drawable.Drawable access$2200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2200
    android.graphics.drawable.Drawable access$2300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2300
    android.graphics.drawable.Drawable access$2400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2400
    boolean access$2500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2500
    boolean access$2600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2600
    boolean access$2700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2700
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$2800(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2800
    android.graphics.BitmapFactory$Options access$2900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2900
    int access$3000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3000
    boolean access$3100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3100
    java.lang.Object access$3200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3200
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$3300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3300
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$3400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3400
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$3500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3500
    android.os.Handler access$3600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3600
    boolean access$3700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3700
com.nostra13.universalimageloader.core.DisplayImageOptions$1 -> com.nostra13.universalimageloader.core.DisplayImageOptions$1:
com.nostra13.universalimageloader.core.DisplayImageOptions$Builder -> com.nostra13.universalimageloader.core.DisplayImageOptions$Builder:
    int imageResOnLoading -> imageResOnLoading
    int imageResForEmptyUri -> imageResForEmptyUri
    int imageResOnFail -> imageResOnFail
    android.graphics.drawable.Drawable imageOnLoading -> imageOnLoading
    android.graphics.drawable.Drawable imageForEmptyUri -> imageForEmptyUri
    android.graphics.drawable.Drawable imageOnFail -> imageOnFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisc -> cacheOnDisc
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    boolean considerExifParams -> considerExifParams
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    boolean isSyncLoading -> isSyncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showStubImage(int) -> showStubImage
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(int) -> showImageOnLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(android.graphics.drawable.Drawable) -> showImageOnLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(int) -> showImageForEmptyUri
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(android.graphics.drawable.Drawable) -> showImageForEmptyUri
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(int) -> showImageOnFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(android.graphics.drawable.Drawable) -> showImageOnFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading() -> resetViewBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading(boolean) -> resetViewBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory() -> cacheInMemory
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory(boolean) -> cacheInMemory
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc() -> cacheOnDisc
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc(boolean) -> cacheOnDisc
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder imageScaleType(com.nostra13.universalimageloader.core.assist.ImageScaleType) -> imageScaleType
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder bitmapConfig(android.graphics.Bitmap$Config) -> bitmapConfig
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder decodingOptions(android.graphics.BitmapFactory$Options) -> decodingOptions
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder delayBeforeLoading(int) -> delayBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder extraForDownloader(java.lang.Object) -> extraForDownloader
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder considerExifParams(boolean) -> considerExifParams
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder preProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> preProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder postProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> postProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder displayer(com.nostra13.universalimageloader.core.display.BitmapDisplayer) -> displayer
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder syncLoading(boolean) -> syncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder handler(android.os.Handler) -> handler
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cloneFrom(com.nostra13.universalimageloader.core.DisplayImageOptions) -> cloneFrom
    com.nostra13.universalimageloader.core.DisplayImageOptions build() -> build
    int access$000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$000
    int access$100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$100
    int access$200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$200
    android.graphics.drawable.Drawable access$300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$300
    android.graphics.drawable.Drawable access$400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$400
    android.graphics.drawable.Drawable access$500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$500
    boolean access$600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$600
    boolean access$700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$700
    boolean access$800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$800
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$900(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$900
    android.graphics.BitmapFactory$Options access$1000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1000
    int access$1100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1100
    boolean access$1200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1200
    java.lang.Object access$1300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1300
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1400
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1500
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$1600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1600
    android.os.Handler access$1700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1700
    boolean access$1800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1800
com.nostra13.universalimageloader.core.ImageLoader -> com.nostra13.universalimageloader.core.ImageLoader:
    java.lang.String TAG -> TAG
    java.lang.String LOG_INIT_CONFIG -> LOG_INIT_CONFIG
    java.lang.String LOG_DESTROY -> LOG_DESTROY
    java.lang.String LOG_LOAD_IMAGE_FROM_MEMORY_CACHE -> LOG_LOAD_IMAGE_FROM_MEMORY_CACHE
    java.lang.String WARNING_RE_INIT_CONFIG -> WARNING_RE_INIT_CONFIG
    java.lang.String ERROR_WRONG_ARGUMENTS -> ERROR_WRONG_ARGUMENTS
    java.lang.String ERROR_NOT_INIT -> ERROR_NOT_INIT
    java.lang.String ERROR_INIT_CONFIG_WITH_NULL -> ERROR_INIT_CONFIG_WITH_NULL
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener emptyListener -> emptyListener
    com.nostra13.universalimageloader.core.ImageLoader instance -> instance
    com.nostra13.universalimageloader.core.ImageLoader getInstance() -> getInstance
    void init(com.nostra13.universalimageloader.core.ImageLoaderConfiguration) -> init
    boolean isInited() -> isInited
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> displayImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> loadImage
    android.graphics.Bitmap loadImageSync(java.lang.String) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions) -> loadImageSync
    void checkConfiguration() -> checkConfiguration
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware getMemoryCache() -> getMemoryCache
    void clearMemoryCache() -> clearMemoryCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware getDiscCache() -> getDiscCache
    void clearDiscCache() -> clearDiscCache
    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> getLoadingUriForView
    java.lang.String getLoadingUriForView(android.widget.ImageView) -> getLoadingUriForView
    void cancelDisplayTask(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> cancelDisplayTask
    void cancelDisplayTask(android.widget.ImageView) -> cancelDisplayTask
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    void destroy() -> destroy
com.nostra13.universalimageloader.core.ImageLoaderConfiguration -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration:
    android.content.res.Resources resources -> resources
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiscCache -> maxImageWidthForDiscCache
    int maxImageHeightForDiscCache -> maxImageHeightForDiscCache
    android.graphics.Bitmap$CompressFormat imageCompressFormatForDiscCache -> imageCompressFormatForDiscCache
    int imageQualityForDiscCache -> imageQualityForDiscCache
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiscCache -> processorForDiscCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache -> discCache
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    boolean writeLogs -> writeLogs
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware reserveDiscCache -> reserveDiscCache
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration createDefault(android.content.Context) -> createDefault
    com.nostra13.universalimageloader.core.assist.ImageSize getMaxImageSize() -> getMaxImageSize
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1 -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1:
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder:
    java.lang.String WARNING_OVERLAP_DISC_CACHE_PARAMS -> WARNING_OVERLAP_DISC_CACHE_PARAMS
    java.lang.String WARNING_OVERLAP_DISC_CACHE_NAME_GENERATOR -> WARNING_OVERLAP_DISC_CACHE_NAME_GENERATOR
    java.lang.String WARNING_OVERLAP_MEMORY_CACHE -> WARNING_OVERLAP_MEMORY_CACHE
    java.lang.String WARNING_OVERLAP_EXECUTOR -> WARNING_OVERLAP_EXECUTOR
    int DEFAULT_THREAD_POOL_SIZE -> DEFAULT_THREAD_POOL_SIZE
    int DEFAULT_THREAD_PRIORITY -> DEFAULT_THREAD_PRIORITY
    com.nostra13.universalimageloader.core.assist.QueueProcessingType DEFAULT_TASK_PROCESSING_TYPE -> DEFAULT_TASK_PROCESSING_TYPE
    android.content.Context context -> context
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiscCache -> maxImageWidthForDiscCache
    int maxImageHeightForDiscCache -> maxImageHeightForDiscCache
    android.graphics.Bitmap$CompressFormat imageCompressFormatForDiscCache -> imageCompressFormatForDiscCache
    int imageQualityForDiscCache -> imageQualityForDiscCache
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiscCache -> processorForDiscCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    boolean denyCacheImageMultipleSizesInMemory -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    int memoryCacheSize -> memoryCacheSize
    int discCacheSize -> discCacheSize
    int discCacheFileCount -> discCacheFileCount
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache -> discCache
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator discCacheFileNameGenerator -> discCacheFileNameGenerator
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    boolean writeLogs -> writeLogs
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheExtraOptions(int,int) -> memoryCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheExtraOptions(int,int,android.graphics.Bitmap$CompressFormat,int,com.nostra13.universalimageloader.core.process.BitmapProcessor) -> discCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutor(java.util.concurrent.Executor) -> taskExecutor
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutorForCachedImages(java.util.concurrent.Executor) -> taskExecutorForCachedImages
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPoolSize(int) -> threadPoolSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPriority(int) -> threadPriority
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder denyCacheImageMultipleSizesInMemory() -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder tasksProcessingOrder(com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> tasksProcessingOrder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSize(int) -> memoryCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSizePercentage(int) -> memoryCacheSizePercentage
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCache(com.nostra13.universalimageloader.cache.memory.MemoryCacheAware) -> memoryCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheSize(int) -> discCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileCount(int) -> discCacheFileCount
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileNameGenerator(com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> discCacheFileNameGenerator
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDownloader(com.nostra13.universalimageloader.core.download.ImageDownloader) -> imageDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDecoder(com.nostra13.universalimageloader.core.decode.ImageDecoder) -> imageDecoder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCache(com.nostra13.universalimageloader.cache.disc.DiscCacheAware) -> discCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder defaultDisplayImageOptions(com.nostra13.universalimageloader.core.DisplayImageOptions) -> defaultDisplayImageOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder writeDebugLogs() -> writeDebugLogs
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration build() -> build
    void initEmptyFieldsWithDefaultValues() -> initEmptyFieldsWithDefaultValues
    android.content.Context access$000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$000
    int access$100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$100
    int access$200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$200
    int access$300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$300
    int access$400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$400
    android.graphics.Bitmap$CompressFormat access$500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$500
    int access$600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$600
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$700
    java.util.concurrent.Executor access$800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$800
    java.util.concurrent.Executor access$900(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$900
    int access$1000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1000
    int access$1100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1100
    com.nostra13.universalimageloader.core.assist.QueueProcessingType access$1200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1200
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware access$1300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1300
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware access$1400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1400
    com.nostra13.universalimageloader.core.DisplayImageOptions access$1500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1500
    boolean access$1600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1600
    com.nostra13.universalimageloader.core.download.ImageDownloader access$1700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1700
    com.nostra13.universalimageloader.core.decode.ImageDecoder access$1800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1800
    boolean access$1900(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1900
    boolean access$2000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$2000
com.nostra13.universalimageloader.core.ImageLoaderEngine -> com.nostra13.universalimageloader.core.ImageLoaderEngine:
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    java.util.concurrent.ExecutorService taskDistributor -> taskDistributor
    java.util.Map cacheKeysForImageAwares -> cacheKeysForImageAwares
    java.util.Map uriLocks -> uriLocks
    java.util.concurrent.atomic.AtomicBoolean paused -> paused
    java.util.concurrent.atomic.AtomicBoolean networkDenied -> networkDenied
    java.util.concurrent.atomic.AtomicBoolean slowNetwork -> slowNetwork
    void submit(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> submit
    void submit(com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask) -> submit
    void initExecutorsIfNeed() -> initExecutorsIfNeed
    java.util.concurrent.Executor createTaskExecutor() -> createTaskExecutor
    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> getLoadingUriForView
    void prepareDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware,java.lang.String) -> prepareDisplayTaskFor
    void cancelDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> cancelDisplayTaskFor
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String) -> getLockForUri
    java.util.concurrent.atomic.AtomicBoolean getPause() -> getPause
    boolean isNetworkDenied() -> isNetworkDenied
    boolean isSlowNetwork() -> isSlowNetwork
    void access$000(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$000
    java.util.concurrent.Executor access$100(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$100
    java.util.concurrent.Executor access$200(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$200
com.nostra13.universalimageloader.core.ImageLoaderEngine$1 -> com.nostra13.universalimageloader.core.ImageLoaderEngine$1:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask val$task -> val$task
    com.nostra13.universalimageloader.core.ImageLoaderEngine this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.ImageLoadingInfo -> com.nostra13.universalimageloader.core.ImageLoadingInfo:
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> listener
    java.util.concurrent.locks.ReentrantLock loadFromUriLock -> loadFromUriLock
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask:
    java.lang.String LOG_WAITING_FOR_RESUME -> LOG_WAITING_FOR_RESUME
    java.lang.String LOG_RESUME_AFTER_PAUSE -> LOG_RESUME_AFTER_PAUSE
    java.lang.String LOG_DELAY_BEFORE_LOADING -> LOG_DELAY_BEFORE_LOADING
    java.lang.String LOG_START_DISPLAY_IMAGE_TASK -> LOG_START_DISPLAY_IMAGE_TASK
    java.lang.String LOG_WAITING_FOR_IMAGE_LOADED -> LOG_WAITING_FOR_IMAGE_LOADED
    java.lang.String LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING -> LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING
    java.lang.String LOG_LOAD_IMAGE_FROM_NETWORK -> LOG_LOAD_IMAGE_FROM_NETWORK
    java.lang.String LOG_LOAD_IMAGE_FROM_DISC_CACHE -> LOG_LOAD_IMAGE_FROM_DISC_CACHE
    java.lang.String LOG_PREPROCESS_IMAGE -> LOG_PREPROCESS_IMAGE
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    java.lang.String LOG_CACHE_IMAGE_IN_MEMORY -> LOG_CACHE_IMAGE_IN_MEMORY
    java.lang.String LOG_CACHE_IMAGE_ON_DISC -> LOG_CACHE_IMAGE_ON_DISC
    java.lang.String LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISC -> LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISC
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_REUSED -> LOG_TASK_CANCELLED_IMAGEAWARE_REUSED
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED -> LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED
    java.lang.String LOG_TASK_INTERRUPTED -> LOG_TASK_INTERRUPTED
    java.lang.String ERROR_PRE_PROCESSOR_NULL -> ERROR_PRE_PROCESSOR_NULL
    java.lang.String ERROR_POST_PROCESSOR_NULL -> ERROR_POST_PROCESSOR_NULL
    java.lang.String ERROR_PROCESSOR_FOR_DISC_CACHE_NULL -> ERROR_PROCESSOR_FOR_DISC_CACHE_NULL
    int BUFFER_SIZE -> BUFFER_SIZE
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    boolean writeLogs -> writeLogs
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> loadedFrom
    boolean imageAwareCollected -> imageAwareCollected
    void run() -> run
    boolean waitIfPaused() -> waitIfPaused
    boolean delayIfNeed() -> delayIfNeed
    boolean checkTaskIsNotActual() -> checkTaskIsNotActual
    boolean checkViewCollected() -> checkViewCollected
    boolean checkViewReused() -> checkViewReused
    boolean checkTaskIsInterrupted() -> checkTaskIsInterrupted
    android.graphics.Bitmap tryLoadBitmap() -> tryLoadBitmap
    java.io.File getImageFileInDiscCache() -> getImageFileInDiscCache
    android.graphics.Bitmap decodeImage(java.lang.String) -> decodeImage
    java.lang.String tryCacheImageOnDisc(java.io.File) -> tryCacheImageOnDisc
    boolean downloadSizedImage(java.io.File,int,int) -> downloadSizedImage
    void downloadImage(java.io.File) -> downloadImage
    void fireFailEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> fireFailEvent
    void fireCancelEvent() -> fireCancelEvent
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    java.lang.String getLoadingUri() -> getLoadingUri
    void log(java.lang.String) -> log
    void log(java.lang.String,java.lang.Object[]) -> log
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration access$000(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> access$000
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType val$failType -> val$failType
    java.lang.Throwable val$failCause -> val$failCause
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask -> com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask:
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    android.graphics.Bitmap bitmap -> bitmap
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    void run() -> run
com.nostra13.universalimageloader.core.assist.DiscCacheUtil -> com.nostra13.universalimageloader.core.assist.DiscCacheUtil:
    java.io.File findInCache(java.lang.String,com.nostra13.universalimageloader.cache.disc.DiscCacheAware) -> findInCache
    boolean removeFromCache(java.lang.String,com.nostra13.universalimageloader.cache.disc.DiscCacheAware) -> removeFromCache
com.nostra13.universalimageloader.core.assist.FailReason -> com.nostra13.universalimageloader.core.assist.FailReason:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType type -> type
    java.lang.Throwable cause -> cause
    com.nostra13.universalimageloader.core.assist.FailReason$FailType getType() -> getType
    java.lang.Throwable getCause() -> getCause
com.nostra13.universalimageloader.core.assist.FailReason$FailType -> com.nostra13.universalimageloader.core.assist.FailReason$FailType:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType IO_ERROR -> IO_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType DECODING_ERROR -> DECODING_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType NETWORK_DENIED -> NETWORK_DENIED
    com.nostra13.universalimageloader.core.assist.FailReason$FailType OUT_OF_MEMORY -> OUT_OF_MEMORY
    com.nostra13.universalimageloader.core.assist.FailReason$FailType UNKNOWN -> UNKNOWN
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] values() -> values
    com.nostra13.universalimageloader.core.assist.FailReason$FailType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.FlushedInputStream -> com.nostra13.universalimageloader.core.assist.FlushedInputStream:
    long skip(long) -> skip
com.nostra13.universalimageloader.core.assist.ImageLoadingListener -> com.nostra13.universalimageloader.core.assist.ImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.assist.ImageScaleType -> com.nostra13.universalimageloader.core.assist.ImageScaleType:
    com.nostra13.universalimageloader.core.assist.ImageScaleType NONE -> NONE
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_POWER_OF_2 -> IN_SAMPLE_POWER_OF_2
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_INT -> IN_SAMPLE_INT
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY -> EXACTLY
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY_STRETCHED -> EXACTLY_STRETCHED
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ImageScaleType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ImageSize -> com.nostra13.universalimageloader.core.assist.ImageSize:
    int TO_STRING_MAX_LENGHT -> TO_STRING_MAX_LENGHT
    java.lang.String SEPARATOR -> SEPARATOR
    int width -> width
    int height -> height
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ImageSize scaleDown(int) -> scaleDown
    com.nostra13.universalimageloader.core.assist.ImageSize scale(float) -> scale
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.core.assist.LoadedFrom -> com.nostra13.universalimageloader.core.assist.LoadedFrom:
    com.nostra13.universalimageloader.core.assist.LoadedFrom NETWORK -> NETWORK
    com.nostra13.universalimageloader.core.assist.LoadedFrom DISC_CACHE -> DISC_CACHE
    com.nostra13.universalimageloader.core.assist.LoadedFrom MEMORY_CACHE -> MEMORY_CACHE
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] values() -> values
    com.nostra13.universalimageloader.core.assist.LoadedFrom valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.MemoryCacheUtil -> com.nostra13.universalimageloader.core.assist.MemoryCacheUtil:
    java.lang.String URI_AND_SIZE_SEPARATOR -> URI_AND_SIZE_SEPARATOR
    java.lang.String WIDTH_AND_HEIGHT_SEPARATOR -> WIDTH_AND_HEIGHT_SEPARATOR
    java.lang.String generateKey(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> generateKey
    java.util.Comparator createFuzzyKeyComparator() -> createFuzzyKeyComparator
    java.util.List findCachedBitmapsForImageUri(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCacheAware) -> findCachedBitmapsForImageUri
    java.util.List findCacheKeysForImageUri(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCacheAware) -> findCacheKeysForImageUri
    void removeFromCache(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCacheAware) -> removeFromCache
com.nostra13.universalimageloader.core.assist.MemoryCacheUtil$1 -> com.nostra13.universalimageloader.core.assist.MemoryCacheUtil$1:
    int compare(java.lang.String,java.lang.String) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nostra13.universalimageloader.core.assist.PauseOnScrollListener -> com.nostra13.universalimageloader.core.assist.PauseOnScrollListener:
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    boolean pauseOnScroll -> pauseOnScroll
    boolean pauseOnFling -> pauseOnFling
    android.widget.AbsListView$OnScrollListener externalListener -> externalListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.nostra13.universalimageloader.core.assist.QueueProcessingType -> com.nostra13.universalimageloader.core.assist.QueueProcessingType:
    com.nostra13.universalimageloader.core.assist.QueueProcessingType FIFO -> FIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType LIFO -> LIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] values() -> values
    com.nostra13.universalimageloader.core.assist.QueueProcessingType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.SimpleImageLoadingListener -> com.nostra13.universalimageloader.core.assist.SimpleImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.assist.SyncImageLoadingListener -> com.nostra13.universalimageloader.core.assist.SyncImageLoadingListener:
    android.graphics.Bitmap loadedImage -> loadedImage
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    android.graphics.Bitmap getLoadedBitmap() -> getLoadedBitmap
com.nostra13.universalimageloader.core.assist.ViewScaleType -> com.nostra13.universalimageloader.core.assist.ViewScaleType:
    com.nostra13.universalimageloader.core.assist.ViewScaleType FIT_INSIDE -> FIT_INSIDE
    com.nostra13.universalimageloader.core.assist.ViewScaleType CROP -> CROP
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ViewScaleType valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.assist.ViewScaleType fromImageView(android.widget.ImageView) -> fromImageView
com.nostra13.universalimageloader.core.assist.ViewScaleType$1 -> com.nostra13.universalimageloader.core.assist.ViewScaleType$1:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> $SwitchMap$android$widget$ImageView$ScaleType
com.nostra13.universalimageloader.core.assist.deque.BlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.BlockingDeque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    void push(java.lang.Object) -> push
com.nostra13.universalimageloader.core.assist.deque.Deque -> com.nostra13.universalimageloader.core.assist.deque.Deque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node first -> first
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node last -> last
    int count -> count
    int capacity -> capacity
    java.util.concurrent.locks.ReentrantLock lock -> lock
    java.util.concurrent.locks.Condition notEmpty -> notEmpty
    java.util.concurrent.locks.Condition notFull -> notFull
    boolean linkFirst(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkFirst
    boolean linkLast(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkLast
    java.lang.Object unlinkFirst() -> unlinkFirst
    java.lang.Object unlinkLast() -> unlinkLast
    void unlink(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> unlink
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    int remainingCapacity() -> remainingCapacity
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1 -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1:
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
    java.lang.Object nextItem -> nextItem
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node lastRet -> lastRet
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node succ(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> succ
    void advance() -> advance
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node:
    java.lang.Object item -> item
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node prev -> prev
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
com.nostra13.universalimageloader.core.decode.BaseImageDecoder -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder:
    java.lang.String LOG_SABSAMPLE_IMAGE -> LOG_SABSAMPLE_IMAGE
    java.lang.String LOG_SCALE_IMAGE -> LOG_SCALE_IMAGE
    java.lang.String LOG_ROTATE_IMAGE -> LOG_ROTATE_IMAGE
    java.lang.String LOG_FLIP_IMAGE -> LOG_FLIP_IMAGE
    java.lang.String ERROR_CANT_DECODE_IMAGE -> ERROR_CANT_DECODE_IMAGE
    boolean loggingEnabled -> loggingEnabled
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
    java.io.InputStream getImageStream(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> getImageStream
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo defineImageSizeAndRotation(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> defineImageSizeAndRotation
    boolean canDefineExifParams(java.lang.String,java.lang.String) -> canDefineExifParams
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo defineExifOrientation(java.lang.String) -> defineExifOrientation
    android.graphics.BitmapFactory$Options prepareDecodingOptions(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> prepareDecodingOptions
    java.io.InputStream resetStream(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> resetStream
    android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.BitmapFactory$Options) -> decodeStream
    android.graphics.Bitmap considerExactScaleAndOrientaiton(android.graphics.Bitmap,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo,int,boolean) -> considerExactScaleAndOrientaiton
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo:
    int rotation -> rotation
    boolean flipHorizontal -> flipHorizontal
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo:
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> imageSize
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo exif -> exif
com.nostra13.universalimageloader.core.decode.ImageDecoder -> com.nostra13.universalimageloader.core.decode.ImageDecoder:
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
com.nostra13.universalimageloader.core.decode.ImageDecodingInfo -> com.nostra13.universalimageloader.core.decode.ImageDecodingInfo:
    java.lang.String imageKey -> imageKey
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType viewScaleType -> viewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    java.lang.Object extraForDownloader -> extraForDownloader
    boolean considerExifParams -> considerExifParams
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    void copyOptions(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions
    void copyOptions10(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions10
    void copyOptions11(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions11
    java.lang.String getImageKey() -> getImageKey
    java.lang.String getImageUri() -> getImageUri
    com.nostra13.universalimageloader.core.assist.ImageSize getTargetSize() -> getTargetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType getViewScaleType() -> getViewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    boolean shouldConsiderExifParams() -> shouldConsiderExifParams
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
com.nostra13.universalimageloader.core.display.BitmapDisplayer -> com.nostra13.universalimageloader.core.display.BitmapDisplayer:
    android.graphics.Bitmap display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer -> com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer:
    int durationMillis -> durationMillis
    boolean animateFromNetwork -> animateFromNetwork
    boolean animateFromDisc -> animateFromDisc
    boolean animateFromMemory -> animateFromMemory
    android.graphics.Bitmap display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
    void animate(android.view.View,int) -> animate
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer:
    int roundPixels -> roundPixels
    android.graphics.Bitmap display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
    android.graphics.Bitmap roundCorners(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageViewAware,int) -> roundCorners
    android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap,int,android.graphics.Rect,android.graphics.Rect,int,int) -> getRoundedCornerBitmap
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$1 -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$1:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> $SwitchMap$android$widget$ImageView$ScaleType
com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer -> com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer:
    android.graphics.Bitmap display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.download.BaseImageDownloader -> com.nostra13.universalimageloader.core.download.BaseImageDownloader:
    int DEFAULT_HTTP_CONNECT_TIMEOUT -> DEFAULT_HTTP_CONNECT_TIMEOUT
    int DEFAULT_HTTP_READ_TIMEOUT -> DEFAULT_HTTP_READ_TIMEOUT
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String ALLOWED_URI_CHARS -> ALLOWED_URI_CHARS
    int MAX_REDIRECT_COUNT -> MAX_REDIRECT_COUNT
    java.lang.String ERROR_UNSUPPORTED_SCHEME -> ERROR_UNSUPPORTED_SCHEME
    android.content.Context context -> context
    int connectTimeout -> connectTimeout
    int readTimeout -> readTimeout
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
    java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> getStreamFromNetwork
    java.net.HttpURLConnection createConnection(java.lang.String,java.lang.Object) -> createConnection
    java.io.InputStream getStreamFromFile(java.lang.String,java.lang.Object) -> getStreamFromFile
    java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object) -> getStreamFromContent
    java.io.InputStream getStreamFromAssets(java.lang.String,java.lang.Object) -> getStreamFromAssets
    java.io.InputStream getStreamFromDrawable(java.lang.String,java.lang.Object) -> getStreamFromDrawable
    java.io.InputStream getStreamFromOtherSource(java.lang.String,java.lang.Object) -> getStreamFromOtherSource
com.nostra13.universalimageloader.core.download.BaseImageDownloader$1 -> com.nostra13.universalimageloader.core.download.BaseImageDownloader$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.download.HttpClientImageDownloader -> com.nostra13.universalimageloader.core.download.HttpClientImageDownloader:
    org.apache.http.client.HttpClient httpClient -> httpClient
    java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> getStreamFromNetwork
com.nostra13.universalimageloader.core.download.ImageDownloader -> com.nostra13.universalimageloader.core.download.ImageDownloader:
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme -> com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme:
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTP -> HTTP
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTPS -> HTTPS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme FILE -> FILE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme CONTENT -> CONTENT
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ASSETS -> ASSETS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme DRAWABLE -> DRAWABLE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme UNKNOWN -> UNKNOWN
    java.lang.String scheme -> scheme
    java.lang.String uriPrefix -> uriPrefix
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] values() -> values
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ofUri(java.lang.String) -> ofUri
    boolean belongsTo(java.lang.String) -> belongsTo
    java.lang.String wrap(java.lang.String) -> wrap
    java.lang.String crop(java.lang.String) -> crop
com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader -> com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader$1 -> com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader -> com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader$1 -> com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.imageaware.ImageAware -> com.nostra13.universalimageloader.core.imageaware.ImageAware:
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
com.nostra13.universalimageloader.core.imageaware.ImageNonViewAware -> com.nostra13.universalimageloader.core.imageaware.ImageNonViewAware:
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> imageSize
    com.nostra13.universalimageloader.core.assist.ViewScaleType scaleType -> scaleType
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
com.nostra13.universalimageloader.core.imageaware.ImageViewAware -> com.nostra13.universalimageloader.core.imageaware.ImageViewAware:
    java.lang.ref.Reference imageViewRef -> imageViewRef
    boolean checkActualViewSize -> checkActualViewSize
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.widget.ImageView getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    int getImageViewFieldValue(java.lang.Object,java.lang.String) -> getImageViewFieldValue
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    android.view.View getWrappedView() -> getWrappedView
com.nostra13.universalimageloader.core.process.BitmapProcessor -> com.nostra13.universalimageloader.core.process.BitmapProcessor:
    android.graphics.Bitmap process(android.graphics.Bitmap) -> process
com.nostra13.universalimageloader.utils.ImageSizeUtils -> com.nostra13.universalimageloader.utils.ImageSizeUtils:
    com.nostra13.universalimageloader.core.assist.ImageSize defineTargetSizeForView(com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.ImageSize) -> defineTargetSizeForView
    int computeImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> computeImageSampleSize
    float computeImageScale(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> computeImageScale
com.nostra13.universalimageloader.utils.ImageSizeUtils$1 -> com.nostra13.universalimageloader.utils.ImageSizeUtils$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$assist$ViewScaleType -> $SwitchMap$com$nostra13$universalimageloader$core$assist$ViewScaleType
com.nostra13.universalimageloader.utils.IoUtils -> com.nostra13.universalimageloader.utils.IoUtils:
    int BUFFER_SIZE -> BUFFER_SIZE
    void copyStream(java.io.InputStream,java.io.OutputStream) -> copyStream
    void closeSilently(java.io.Closeable) -> closeSilently
com.nostra13.universalimageloader.utils.L -> com.nostra13.universalimageloader.utils.L:
    java.lang.String LOG_FORMAT -> LOG_FORMAT
    boolean DISABLED -> DISABLED
    void enableLogging() -> enableLogging
    void disableLogging() -> disableLogging
    void d(java.lang.String,java.lang.Object[]) -> d
    void i(java.lang.String,java.lang.Object[]) -> i
    void w(java.lang.String,java.lang.Object[]) -> w
    void e(java.lang.Throwable) -> e
    void e(java.lang.String,java.lang.Object[]) -> e
    void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> e
    void log(int,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> log
com.nostra13.universalimageloader.utils.StorageUtils -> com.nostra13.universalimageloader.utils.StorageUtils:
    java.lang.String EXTERNAL_STORAGE_PERMISSION -> EXTERNAL_STORAGE_PERMISSION
    java.lang.String INDIVIDUAL_DIR_NAME -> INDIVIDUAL_DIR_NAME
    java.io.File getCacheDirectory(android.content.Context) -> getCacheDirectory
    java.io.File getCacheDirectory(android.content.Context,boolean) -> getCacheDirectory
    java.io.File getIndividualCacheDirectory(android.content.Context) -> getIndividualCacheDirectory
    java.io.File getOwnCacheDirectory(android.content.Context,java.lang.String) -> getOwnCacheDirectory
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    boolean hasExternalStoragePermission(android.content.Context) -> hasExternalStoragePermission
com.ta.utdid2.android.utils.AESUtils -> com.a.a.a.a.a:
    java.lang.String encrypt(java.lang.String,java.lang.String) -> a
    java.lang.String decrypt(java.lang.String,java.lang.String) -> b
    byte[] getRawKey(byte[]) -> b
    byte[] encrypt(byte[],byte[]) -> a
    byte[] decrypt(byte[],byte[]) -> b
    byte[] toByte(java.lang.String) -> a
    java.lang.String toHex(byte[]) -> a
    void appendHex(java.lang.StringBuffer,byte) -> a
com.ta.utdid2.android.utils.Base64 -> com.a.a.a.a.b:
    boolean $assertionsDisabled -> a
    byte[] decode(java.lang.String,int) -> a
    byte[] decode(byte[],int) -> a
    byte[] decode(byte[],int,int,int) -> a
    java.lang.String encodeToString(byte[],int) -> b
    byte[] encode(byte[],int) -> c
    byte[] encode(byte[],int,int,int) -> b
com.ta.utdid2.android.utils.Base64$Coder -> com.a.a.a.a.c:
    byte[] output -> a
    int op -> b
com.ta.utdid2.android.utils.Base64$Decoder -> com.a.a.a.a.d:
    int[] DECODE -> c
    int[] DECODE_WEBSAFE -> d
    int state -> e
    int value -> f
    int[] alphabet -> g
    boolean process(byte[],int,int,boolean) -> a
com.ta.utdid2.android.utils.Base64$Encoder -> com.a.a.a.a.e:
    byte[] ENCODE -> h
    byte[] ENCODE_WEBSAFE -> i
    byte[] tail -> j
    int tailLen -> c
    int count -> k
    boolean do_padding -> d
    boolean do_newline -> e
    boolean do_cr -> f
    byte[] alphabet -> l
    boolean $assertionsDisabled -> g
    boolean process(byte[],int,int,boolean) -> a
com.ta.utdid2.android.utils.IntUtils -> com.a.a.a.a.f:
    byte[] getBytes(int) -> a
com.ta.utdid2.android.utils.PhoneInfoUtils -> com.a.a.a.a.g:
    java.lang.String getUniqueID() -> a
    java.lang.String getImei(android.content.Context) -> a
    java.lang.String getImsi(android.content.Context) -> b
com.ta.utdid2.android.utils.StringUtils -> com.a.a.a.a.h:
    boolean isEmpty(java.lang.String) -> a
    int hashCode(java.lang.String) -> b
com.ta.utdid2.core.persistent.FastXmlSerializer -> com.a.a.b.a.a:
    java.lang.String[] ESCAPE_TABLE -> a
    char[] mText -> b
    int mPos -> c
    java.io.Writer mWriter -> d
    java.io.OutputStream mOutputStream -> e
    java.nio.charset.CharsetEncoder mCharset -> f
    java.nio.ByteBuffer mBytes -> g
    boolean mInTag -> h
    void append(char) -> a
    void append(java.lang.String,int,int) -> a
    void append(char[],int,int) -> a
    void append(java.lang.String) -> a
    void escapeAndAppendString(java.lang.String) -> b
    void escapeAndAppendString(char[],int,int) -> b
    org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> attribute
    void cdsect(java.lang.String) -> cdsect
    void comment(java.lang.String) -> comment
    void docdecl(java.lang.String) -> docdecl
    void endDocument() -> endDocument
    org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> endTag
    void entityRef(java.lang.String) -> entityRef
    void flushBytes() -> a
    void flush() -> flush
    int getDepth() -> getDepth
    boolean getFeature(java.lang.String) -> getFeature
    java.lang.String getName() -> getName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getPrefix(java.lang.String,boolean) -> getPrefix
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void ignorableWhitespace(java.lang.String) -> ignorableWhitespace
    void processingInstruction(java.lang.String) -> processingInstruction
    void setFeature(java.lang.String,boolean) -> setFeature
    void setOutput(java.io.OutputStream,java.lang.String) -> setOutput
    void setOutput(java.io.Writer) -> setOutput
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void startDocument(java.lang.String,java.lang.Boolean) -> startDocument
    org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> startTag
    org.xmlpull.v1.XmlSerializer text(char[],int,int) -> text
    org.xmlpull.v1.XmlSerializer text(java.lang.String) -> text
com.ta.utdid2.core.persistent.MySharedPreferences -> com.a.a.b.a.b:
    boolean checkFile() -> a
    java.util.Map getAll() -> b
    java.lang.String getString(java.lang.String,java.lang.String) -> a
    long getLong(java.lang.String,long) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor edit() -> c
com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor -> com.a.a.b.a.c:
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putString(java.lang.String,java.lang.String) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putInt(java.lang.String,int) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putLong(java.lang.String,long) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putFloat(java.lang.String,float) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putBoolean(java.lang.String,boolean) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor clear() -> a
    boolean commit() -> b
com.ta.utdid2.core.persistent.MySharedPreferences$OnSharedPreferenceChangeListener -> com.a.a.b.a.d:
    void onSharedPreferenceChanged(com.ta.utdid2.core.persistent.MySharedPreferences,java.lang.String) -> a
com.ta.utdid2.core.persistent.PersistentConfiguration -> com.a.a.b.a.e:
    java.lang.String mConfigName -> a
    java.lang.String mFolderName -> b
    boolean mIsSafety -> c
    boolean mCanRead -> d
    boolean mCanWrite -> e
    android.content.SharedPreferences mSp -> f
    com.ta.utdid2.core.persistent.MySharedPreferences mMySP -> g
    android.content.SharedPreferences$Editor mEditor -> h
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor mMyEditor -> i
    android.content.Context mContext -> j
    com.ta.utdid2.core.persistent.TransactionXMLFile mTxf -> k
    boolean mIsLessMode -> l
    com.ta.utdid2.core.persistent.TransactionXMLFile getTransactionXMLFile(java.lang.String) -> b
    java.io.File getRootFolder(java.lang.String) -> c
    void copySPToMySP(android.content.SharedPreferences,com.ta.utdid2.core.persistent.MySharedPreferences) -> a
    void copyMySPToSP(com.ta.utdid2.core.persistent.MySharedPreferences,android.content.SharedPreferences) -> a
    boolean checkSDCardXMLFile() -> b
    void initEditor() -> c
    void putLong(java.lang.String,long) -> a
    void putString(java.lang.String,java.lang.String) -> a
    boolean commit() -> a
    java.lang.String getString(java.lang.String) -> a
com.ta.utdid2.core.persistent.TransactionXMLFile -> com.a.a.b.a.f:
    java.lang.Object mSync -> a
    java.io.File mPreferencesDir -> b
    java.lang.Object GLOBAL_COMMIT_LOCK -> c
    java.util.HashMap sSharedPrefs -> d
    java.io.File makeFilename(java.io.File,java.lang.String) -> a
    java.io.File getPreferencesDir() -> b
    java.io.File getSharedPrefsFile(java.lang.String) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences getMySharedPreferences(java.lang.String,int) -> a
    java.io.File makeBackupFile(java.io.File) -> b
    java.io.File access$000(java.io.File) -> a
    java.lang.Object access$100() -> a
com.ta.utdid2.core.persistent.TransactionXMLFile$MySharedPreferencesImpl -> com.a.a.b.a.g:
    java.io.File mFile -> a
    java.io.File mBackupFile -> b
    int mMode -> c
    java.util.Map mMap -> d
    boolean hasChange -> e
    java.lang.Object mContent -> f
    java.util.WeakHashMap mListeners -> g
    boolean checkFile() -> a
    void setHasChange(boolean) -> a
    boolean hasFileChanged() -> d
    void replace(java.util.Map) -> a
    java.util.Map getAll() -> b
    java.lang.String getString(java.lang.String,java.lang.String) -> a
    long getLong(java.lang.String,long) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor edit() -> c
    java.io.FileOutputStream createFileOutputStream(java.io.File) -> a
    boolean writeFileLocked() -> e
    java.util.WeakHashMap access$200(com.ta.utdid2.core.persistent.TransactionXMLFile$MySharedPreferencesImpl) -> a
    java.util.Map access$300(com.ta.utdid2.core.persistent.TransactionXMLFile$MySharedPreferencesImpl) -> b
    boolean access$400(com.ta.utdid2.core.persistent.TransactionXMLFile$MySharedPreferencesImpl) -> c
com.ta.utdid2.core.persistent.TransactionXMLFile$MySharedPreferencesImpl$EditorImpl -> com.a.a.b.a.h:
    java.util.Map mModified -> b
    boolean mClear -> c
    com.ta.utdid2.core.persistent.TransactionXMLFile$MySharedPreferencesImpl this$0 -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putString(java.lang.String,java.lang.String) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putInt(java.lang.String,int) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putLong(java.lang.String,long) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putFloat(java.lang.String,float) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putBoolean(java.lang.String,boolean) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor clear() -> a
    boolean commit() -> b
com.ta.utdid2.core.persistent.XmlUtils -> com.a.a.b.a.i:
    void writeMapXml(java.util.Map,java.io.OutputStream) -> a
    void writeMapXml(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void writeListXml(java.util.List,java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void writeByteArrayXml(byte[],java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void writeIntArrayXml(int[],java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    java.util.HashMap readMapXml(java.io.InputStream) -> a
    java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) -> a
    java.util.ArrayList readThisListXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) -> b
    int[] readThisIntArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) -> c
    java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[]) -> a
    java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[]) -> b
com.ta.utdid2.device.Device -> com.a.a.c.a:
    java.lang.String imei -> a
    java.lang.String imsi -> b
    java.lang.String deviceId -> c
    java.lang.String utdid -> d
    long mCreateTimestamp -> e
    long mCheckSum -> f
    void setCheckSum(long) -> a
    long getCreateTimestamp() -> a
    void setCreateTimestamp(long) -> b
    java.lang.String getImei() -> b
    void setImei(java.lang.String) -> a
    java.lang.String getImsi() -> c
    void setImsi(java.lang.String) -> b
    java.lang.String getDeviceId() -> d
    void setDeviceId(java.lang.String) -> c
    java.lang.String getUtdid() -> e
    void setUtdid(java.lang.String) -> d
com.ta.utdid2.device.DeviceInfo -> com.a.a.c.b:
    com.ta.utdid2.device.Device mDevice -> c
    java.lang.String HMAC_KEY -> a
    java.lang.Object CREATE_DEVICE_METADATA_LOCK -> b
    long getMetadataCheckSum(com.ta.utdid2.device.Device) -> a
    com.ta.utdid2.device.Device _initDeviceMetadata(android.content.Context) -> b
    com.ta.utdid2.device.Device getDevice(android.content.Context) -> a
com.ta.utdid2.device.UTDevice -> com.a.a.c.c:
    java.lang.String getUtdid(android.content.Context) -> a
com.ta.utdid2.device.UTUtdid -> com.a.a.c.d:
    android.content.Context mContext -> a
    java.lang.Object CREATE_LOCK -> b
    com.ta.utdid2.device.UTUtdid s_umutdid -> c
    java.lang.String mUtdid -> d
    com.ta.utdid2.device.UTUtdidHelper mUtdidHelper -> e
    java.lang.String mCBKey -> f
    java.lang.String mCBDomain -> g
    com.ta.utdid2.core.persistent.PersistentConfiguration mPC -> h
    com.ta.utdid2.core.persistent.PersistentConfiguration mTaoPC -> i
    java.lang.String S_GLOBAL_PERSISTENT_CONFIG_DIR -> j
    java.util.regex.Pattern mPattern -> k
    com.ta.utdid2.device.UTUtdid instance(android.content.Context) -> a
    long getMetadataCheckSum(com.ta.utdid2.device.Device) -> a
    void saveUtdidToTaoPPC(java.lang.String) -> a
    void saveUtdidToLocalStorage(java.lang.String) -> b
    void saveUtdidToNewSettings(java.lang.String) -> c
    void syncUTDIDToSettings(java.lang.String) -> d
    void saveUtdidToSettings(java.lang.String) -> e
    java.lang.String getUtdidFromTaoPPC() -> b
    boolean isValidUTDID(java.lang.String) -> f
    java.lang.String getValue() -> a
    byte[] _generateUtdid() -> c
    java.lang.String _calcHmac(byte[]) -> a
com.ta.utdid2.device.UTUtdidHelper -> com.a.a.c.e:
    java.lang.String mAESKey -> a
    java.util.Random random -> b
    java.lang.String pack(byte[]) -> a
    java.lang.String packUtdidStr(java.lang.String) -> a
    java.lang.String dePack(java.lang.String) -> b
com.ta.utdid2.device.UTUtdidHelper2 -> com.a.a.c.f:
    java.lang.String mAESKey -> a
    java.lang.String dePack(java.lang.String) -> a
    java.lang.String dePackWithBase64(java.lang.String) -> b
com.umeng.analytics.AnalyticsConfig -> com.b.a.a:
    java.lang.String a -> m
    java.lang.String b -> n
    java.lang.String mWrapperType -> a
    java.lang.String mWrapperVersion -> b
    int mVerticalType -> c
    java.lang.String GPU_VENDER -> d
    java.lang.String GPU_RENDERER -> e
    boolean sEncrypt -> f
    int sLatentWindow -> g
    double[] c -> o
    boolean ACTIVITY_DURATION_OPEN -> h
    boolean COMPRESS_DATA -> i
    boolean ENABLE_MEMORY_BUFFER -> j
    boolean CATCH_EXCEPTION -> k
    long kContinueSessionMillis -> l
    java.lang.String getAppkey(android.content.Context) -> a
    java.lang.String getChannel(android.content.Context) -> b
    java.lang.String getSDKVersion() -> a
    double[] getLocation() -> b
com.umeng.analytics.MobclickAgent -> com.b.a.b:
    com.umeng.analytics.d b -> a
    void openActivityDurationTrack(boolean) -> a
    void onPageStart(java.lang.String) -> a
    void onPageEnd(java.lang.String) -> b
    void setDebugMode(boolean) -> b
    void onPause(android.content.Context) -> a
    void onResume(android.content.Context) -> b
    void updateOnlineConfig(android.content.Context) -> c
com.umeng.analytics.ReportPolicy -> com.b.a.c:
com.umeng.analytics.ReportPolicy$a -> com.b.a.d:
    u.aly.ak a -> a
    u.aly.aa b -> b
    boolean a(boolean) -> a
    boolean a() -> a
com.umeng.analytics.ReportPolicy$b -> com.b.a.e:
    long a -> a
    long b -> b
    boolean a(boolean) -> a
    boolean a() -> a
com.umeng.analytics.ReportPolicy$c -> com.b.a.f:
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$d -> com.b.a.g:
    long a -> a
    long b -> b
    u.aly.aa c -> c
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$f -> com.b.a.h:
    long a -> a
    u.aly.aa b -> b
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$g -> com.b.a.i:
    boolean a(boolean) -> a
    boolean a() -> a
com.umeng.analytics.ReportPolicy$h -> com.b.a.j:
    android.content.Context a -> a
    boolean a(boolean) -> a
com.umeng.analytics.a -> com.b.a.k:
    java.lang.String[] f -> a
    java.lang.String[] g -> b
com.umeng.analytics.b -> com.b.a.l:
    byte[] a -> a
    byte[] a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    byte[] b(byte[]) -> b
    byte[] a(byte[],byte[]) -> a
    int a(int,java.lang.String) -> a
com.umeng.analytics.c -> com.b.a.m:
    void a() -> a
    void b() -> b
com.umeng.analytics.d -> com.b.a.n:
    com.umeng.analytics.onlineconfig.a a -> a
    android.content.Context b -> b
    com.umeng.analytics.c c -> c
    u.aly.n d -> d
    u.aly.ad e -> e
    u.aly.z f -> f
    u.aly.o g -> g
    u.aly.l h -> h
    boolean i -> i
    void f(android.content.Context) -> d
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void g(android.content.Context) -> e
    void h(android.content.Context) -> f
    void a(java.lang.Throwable) -> a
    void a(com.umeng.analytics.d,android.content.Context) -> a
    void b(com.umeng.analytics.d,android.content.Context) -> b
com.umeng.analytics.d$1 -> com.b.a.o:
    android.content.Context a -> a
    com.umeng.analytics.d b -> b
    void a() -> a
com.umeng.analytics.d$2 -> com.b.a.p:
    android.content.Context a -> a
    com.umeng.analytics.d b -> b
    void a() -> a
com.umeng.analytics.e -> com.b.a.q:
    java.lang.String[] a -> a
    java.lang.String[] a(android.content.Context) -> a
com.umeng.analytics.f -> com.b.a.r:
    java.util.List a -> a
    java.util.concurrent.ExecutorService b -> b
    long c -> c
    java.util.concurrent.ScheduledExecutorService d -> d
    void a(java.lang.Runnable) -> a
    void a() -> a
    void b(java.lang.Runnable) -> b
    void a(java.lang.Runnable,long) -> a
com.umeng.analytics.g -> com.b.a.s:
    void run() -> run
    void a() -> a
com.umeng.analytics.h -> com.b.a.t:
    com.umeng.analytics.h a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    com.umeng.analytics.h$a d -> d
    long e -> e
    long f -> f
    com.umeng.analytics.h a(android.content.Context) -> a
    boolean a(java.io.File) -> a
    java.lang.String[] a() -> a
    int[] c() -> b
    void a(int) -> a
    int d() -> c
    void b(int) -> b
    int e() -> d
    void c(int) -> c
    int d(int) -> d
    void a(int,int) -> a
    byte[] f() -> e
    void a(byte[]) -> a
    void g() -> f
    void b(byte[]) -> b
    boolean h() -> g
    com.umeng.analytics.h$a i() -> h
    android.content.SharedPreferences n() -> j
    android.content.SharedPreferences j() -> i
    java.lang.String o() -> k
    java.lang.String p() -> l
com.umeng.analytics.h$a -> com.b.a.u:
    int a -> a
    java.io.File b -> b
    java.io.FilenameFilter c -> c
    boolean a() -> a
    void a(com.umeng.analytics.h$b) -> a
    void a(byte[]) -> a
com.umeng.analytics.h$a$1 -> com.b.a.v:
    com.umeng.analytics.h$a a -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.umeng.analytics.h$b -> com.b.a.w:
    void a(java.io.File) -> a
    boolean b(java.io.File) -> b
    void c(java.io.File) -> c
com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener -> com.b.a.a.a:
    void onDataReceived(org.json.JSONObject) -> a
com.umeng.analytics.onlineconfig.a -> com.b.a.a.b:
    java.lang.String h -> a
    java.lang.String i -> b
    java.lang.String j -> c
    com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener l -> d
    com.umeng.analytics.onlineconfig.c m -> e
    void a(android.content.Context) -> a
    void a(com.umeng.analytics.onlineconfig.c) -> a
    void a(org.json.JSONObject) -> a
    long b(android.content.Context) -> b
    void a(android.content.Context,com.umeng.analytics.onlineconfig.b) -> a
    void b(android.content.Context,com.umeng.analytics.onlineconfig.b) -> b
    void a(com.umeng.analytics.onlineconfig.a,org.json.JSONObject) -> a
    com.umeng.analytics.onlineconfig.c a(com.umeng.analytics.onlineconfig.a) -> a
    void a(com.umeng.analytics.onlineconfig.a,android.content.Context,com.umeng.analytics.onlineconfig.b) -> a
    void b(com.umeng.analytics.onlineconfig.a,android.content.Context,com.umeng.analytics.onlineconfig.b) -> b
    long a(com.umeng.analytics.onlineconfig.a,android.content.Context) -> a
com.umeng.analytics.onlineconfig.a$a -> com.b.a.a.c:
    java.lang.String e -> e
    org.json.JSONObject f -> f
    com.umeng.analytics.onlineconfig.a a -> a
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
    org.json.JSONObject a(android.content.Context) -> a
com.umeng.analytics.onlineconfig.a$b -> com.b.a.a.d:
    android.content.Context a -> a
    com.umeng.analytics.onlineconfig.a b -> b
    void run() -> run
    boolean a() -> a
    void b() -> b
    boolean c() -> c
com.umeng.analytics.onlineconfig.a$c -> com.b.a.a.e:
    java.lang.String e -> e
    org.json.JSONObject f -> f
    com.umeng.analytics.onlineconfig.a a -> a
    org.json.JSONObject a() -> a
    org.json.JSONObject a(android.content.Context) -> a
    java.lang.String b() -> b
com.umeng.analytics.onlineconfig.a$d -> com.b.a.a.f:
    long a -> a
    long b -> b
com.umeng.analytics.onlineconfig.b -> com.b.a.a.g:
    org.json.JSONObject a -> a
    boolean b -> b
    int c -> c
    int d -> d
com.umeng.analytics.onlineconfig.c -> com.b.a.a.h:
    void a(int,long) -> a
com.umeng.analytics.social.e -> com.b.a.b.a:
    java.lang.String e -> a
    boolean v -> b
com.unionpay.UPPayAssistEx -> com.unionpay.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    int l -> l
    void a(java.lang.String,android.os.Bundle,java.lang.String) -> a
    int startPay(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    int a(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    boolean a(android.app.Activity) -> a
    boolean installUPPayPlugin(android.content.Context) -> a
com.unionpay.uppayplugin.demo.APKActivity -> com.unionpay.uppayplugin.demo.APKActivity:
    java.lang.String apkTn -> f
    java.lang.String apkMode -> g
    boolean IS_PLUGIN_NOT_INSTALLED -> h
    void doStartUnionPayPlugin(android.app.Activity,java.lang.String,java.lang.String) -> a
    void onResume() -> onResume
com.unionpay.uppayplugin.demo.APKActivity$1 -> com.unionpay.uppayplugin.demo.a:
    com.unionpay.uppayplugin.demo.APKActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.unionpay.uppayplugin.demo.APKActivity$2 -> com.unionpay.uppayplugin.demo.b:
    com.unionpay.uppayplugin.demo.APKActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.unionpay.uppayplugin.demo.BaseActivity -> com.unionpay.uppayplugin.demo.c:
    android.content.Context mContext -> f
    int mGoodsIdx -> g
    android.os.Handler mHandler -> h
    android.app.ProgressDialog mLoadingDialog -> i
    java.lang.String outTradeNo -> a
    java.lang.String price -> b
    int orderId -> c
    java.lang.String str -> d
    java.lang.String pay_result -> e
    void doStartUnionPayPlugin(android.app.Activity,java.lang.String,java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean handleMessage(android.os.Message) -> handleMessage
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void run() -> run
    java.lang.String postRequest(java.lang.String,java.util.Map) -> a
    java.lang.String access$0(com.unionpay.uppayplugin.demo.BaseActivity,java.lang.String,java.util.Map) -> a
    android.os.Handler access$1(com.unionpay.uppayplugin.demo.BaseActivity) -> a
com.unionpay.uppayplugin.demo.BaseActivity$1 -> com.unionpay.uppayplugin.demo.d:
    com.unionpay.uppayplugin.demo.BaseActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.unionpay.uppayplugin.demo.BaseActivity$2 -> com.unionpay.uppayplugin.demo.e:
    com.unionpay.uppayplugin.demo.BaseActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.unionpay.uppayplugin.demo.BaseActivity$3 -> com.unionpay.uppayplugin.demo.f:
    com.unionpay.uppayplugin.demo.BaseActivity this$0 -> a
    void run() -> run
u.aly.a -> b.a.a:
    int a -> a
    int b -> b
    java.lang.String c -> c
    java.util.List d -> d
    u.aly.ay e -> e
    boolean a() -> a
    java.lang.String b() -> b
    boolean c() -> c
    boolean g() -> g
    u.aly.ay d() -> d
    java.util.List e() -> e
    void a(java.util.List) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String f() -> f
    void a(u.aly.az) -> a
u.aly.aa -> b.a.b:
    int d -> d
    int a -> a
    int b -> b
    int e -> e
    long c -> c
    long f -> f
    long g -> g
    android.content.Context n -> h
    void b(android.content.Context) -> b
    boolean f() -> a
    void g() -> b
    void h() -> c
    void i() -> d
    void j() -> e
    void k() -> f
    void l() -> g
    boolean m() -> h
    long n() -> i
    long o() -> j
    u.aly.ap a(android.content.Context) -> a
    void a() -> k
    void b() -> l
    void c() -> m
    void d() -> n
u.aly.ab -> b.a.c:
    java.lang.String a -> a
    long b -> b
u.aly.ac -> b.a.d:
    u.aly.bm a(android.content.Context) -> a
    long[] b(android.content.Context) -> b
u.aly.ad -> b.a.e:
    java.util.Map b -> a
    java.util.ArrayList c -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    void a(android.content.Context) -> a
    java.util.List a(android.content.SharedPreferences) -> a
u.aly.ag -> b.a.f:
    java.lang.String a(java.lang.Throwable) -> a
    void a(u.aly.bn,java.lang.String) -> a
u.aly.ai -> b.a.g:
    void a(org.json.JSONArray) -> a
u.aly.aj -> b.a.h:
    void a(u.aly.bn,java.lang.String) -> a
u.aly.ak -> b.a.i:
    int h -> a
    long i -> b
    u.aly.bn a(android.content.Context,u.aly.bn) -> a
    u.aly.bl a(android.content.Context) -> a
    long a() -> a
    void a(int) -> a
    boolean c() -> b
u.aly.al -> b.a.j:
    u.aly.al a -> a
    u.aly.al b -> b
    u.aly.al c -> c
    u.aly.al d -> d
    int e -> e
    u.aly.al[] f -> f
    u.aly.al[] values() -> values
    u.aly.al valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.al a(int) -> a
u.aly.am -> b.a.k:
    u.aly.dl c -> c
    u.aly.db d -> d
    java.util.Map e -> e
    long a -> a
    byte g -> f
    java.util.Map b -> b
    boolean e() -> a
    void a(boolean) -> a
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void f() -> b
    u.aly.dl h() -> c
    u.aly.db i() -> d
u.aly.am$1 -> b.a.l:
u.aly.am$a -> b.a.m:
    void a(u.aly.dg,u.aly.am) -> a
    void b(u.aly.dg,u.aly.am) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.am$b -> b.a.n:
    u.aly.am$a a() -> a
    u.aly.do b() -> b
u.aly.am$c -> b.a.o:
    void a(u.aly.dg,u.aly.am) -> a
    void b(u.aly.dg,u.aly.am) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.am$d -> b.a.p:
    u.aly.am$c a() -> a
    u.aly.do b() -> b
u.aly.am$e -> b.a.q:
    u.aly.am$e a -> a
    java.util.Map b -> b
    short c -> c
    java.lang.String d -> d
    u.aly.am$e[] e -> e
    u.aly.am$e[] values() -> values
    u.aly.am$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.an -> b.a.r:
    u.aly.dl d -> d
    u.aly.db e -> e
    u.aly.db f -> f
    java.util.Map g -> g
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.Map c -> c
    void a(boolean) -> a
    void b(boolean) -> b
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void j() -> a
    u.aly.dl k() -> b
    u.aly.db l() -> c
    u.aly.db m() -> d
u.aly.an$1 -> b.a.s:
u.aly.an$a -> b.a.t:
    void a(u.aly.dg,u.aly.an) -> a
    void b(u.aly.dg,u.aly.an) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.an$b -> b.a.u:
    u.aly.an$a a() -> a
    u.aly.do b() -> b
u.aly.an$c -> b.a.v:
    void a(u.aly.dg,u.aly.an) -> a
    void b(u.aly.dg,u.aly.an) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.an$d -> b.a.w:
    u.aly.an$c a() -> a
    u.aly.do b() -> b
u.aly.an$e -> b.a.x:
    u.aly.an$e a -> a
    u.aly.an$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.an$e[] f -> f
    u.aly.an$e[] values() -> values
    u.aly.an$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ao -> b.a.y:
    u.aly.dl l -> l
    u.aly.db m -> m
    u.aly.db n -> n
    u.aly.db o -> o
    u.aly.db p -> p
    u.aly.db q -> q
    u.aly.db r -> r
    u.aly.db s -> s
    u.aly.db t -> t
    u.aly.db u -> u
    u.aly.db v -> v
    java.util.Map w -> w
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    u.aly.bk e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    byte z -> x
    u.aly.ao$e[] A -> y
    java.util.Map k -> k
    u.aly.ao a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.ao b(java.lang.String) -> b
    boolean i() -> a
    void b(boolean) -> b
    u.aly.ao a(int) -> a
    boolean l() -> b
    void c(boolean) -> c
    u.aly.ao c(java.lang.String) -> c
    boolean o() -> c
    void d(boolean) -> d
    u.aly.ao a(u.aly.bk) -> a
    void e(boolean) -> e
    u.aly.ao d(java.lang.String) -> d
    void f(boolean) -> f
    u.aly.ao e(java.lang.String) -> e
    void g(boolean) -> g
    u.aly.ao f(java.lang.String) -> f
    boolean A() -> d
    void h(boolean) -> h
    u.aly.ao g(java.lang.String) -> g
    boolean D() -> e
    void i(boolean) -> i
    u.aly.ao c(int) -> b
    boolean G() -> f
    void j(boolean) -> j
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void H() -> g
    u.aly.dl I() -> h
    u.aly.db J() -> i
    u.aly.db K() -> j
    u.aly.db L() -> k
    u.aly.db M() -> l
    u.aly.db N() -> m
    u.aly.db O() -> n
    u.aly.db P() -> o
    u.aly.db Q() -> p
    u.aly.db R() -> q
    u.aly.db S() -> r
u.aly.ao$1 -> b.a.z:
u.aly.ao$a -> b.a.aa:
    void a(u.aly.dg,u.aly.ao) -> a
    void b(u.aly.dg,u.aly.ao) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ao$b -> b.a.ab:
    u.aly.ao$a a() -> a
    u.aly.do b() -> b
u.aly.ao$c -> b.a.ac:
    void a(u.aly.dg,u.aly.ao) -> a
    void b(u.aly.dg,u.aly.ao) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ao$d -> b.a.ad:
    u.aly.ao$c a() -> a
    u.aly.do b() -> b
u.aly.ao$e -> b.a.ae:
    u.aly.ao$e a -> a
    u.aly.ao$e b -> b
    u.aly.ao$e c -> c
    u.aly.ao$e d -> d
    u.aly.ao$e e -> e
    u.aly.ao$e f -> f
    u.aly.ao$e g -> g
    u.aly.ao$e h -> h
    u.aly.ao$e i -> i
    u.aly.ao$e j -> j
    java.util.Map k -> k
    short l -> l
    java.lang.String m -> m
    u.aly.ao$e[] n -> n
    u.aly.ao$e[] values() -> values
    u.aly.ao$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ap -> b.a.af:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    int a -> a
    int b -> b
    int c -> c
    byte m -> j
    u.aly.ap$e[] n -> k
    java.util.Map d -> d
    u.aly.ap a(int) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.ap c(int) -> b
    boolean i() -> b
    void b(boolean) -> b
    u.aly.ap d(int) -> c
    boolean l() -> c
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void m() -> d
    u.aly.dl n() -> e
    u.aly.db o() -> f
    u.aly.db p() -> g
    u.aly.db q() -> h
u.aly.ap$1 -> b.a.ag:
u.aly.ap$a -> b.a.ah:
    void a(u.aly.dg,u.aly.ap) -> a
    void b(u.aly.dg,u.aly.ap) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ap$b -> b.a.ai:
    u.aly.ap$a a() -> a
    u.aly.do b() -> b
u.aly.ap$c -> b.a.aj:
    void a(u.aly.dg,u.aly.ap) -> a
    void b(u.aly.dg,u.aly.ap) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ap$d -> b.a.ak:
    u.aly.ap$c a() -> a
    u.aly.do b() -> b
u.aly.ap$e -> b.a.al:
    u.aly.ap$e a -> a
    u.aly.ap$e b -> b
    u.aly.ap$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.ap$e[] g -> g
    u.aly.ap$e[] values() -> values
    u.aly.ap$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.aq -> b.a.am:
    u.aly.dl c -> c
    u.aly.db d -> d
    java.util.Map e -> e
    u.aly.bd a -> a
    u.aly.aq$e[] f -> f
    java.util.Map b -> b
    u.aly.aq a(u.aly.bd) -> a
    boolean e() -> a
    void a(boolean) -> a
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void f() -> b
    u.aly.dl h() -> c
    u.aly.db i() -> d
u.aly.aq$1 -> b.a.an:
u.aly.aq$a -> b.a.ao:
    void a(u.aly.dg,u.aly.aq) -> a
    void b(u.aly.dg,u.aly.aq) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.aq$b -> b.a.ap:
    u.aly.aq$a a() -> a
    u.aly.do b() -> b
u.aly.aq$c -> b.a.aq:
    void a(u.aly.dg,u.aly.aq) -> a
    void b(u.aly.dg,u.aly.aq) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.aq$d -> b.a.ar:
    u.aly.aq$c a() -> a
    u.aly.do b() -> b
u.aly.aq$e -> b.a.as:
    u.aly.aq$e a -> a
    java.util.Map b -> b
    short c -> c
    java.lang.String d -> d
    u.aly.aq$e[] e -> e
    u.aly.aq$e[] values() -> values
    u.aly.aq$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ar -> b.a.at:
    u.aly.dl s -> s
    u.aly.db t -> t
    u.aly.db u -> u
    u.aly.db v -> v
    u.aly.db w -> w
    u.aly.db x -> x
    u.aly.db y -> y
    u.aly.db z -> z
    u.aly.db A -> A
    u.aly.db B -> B
    u.aly.db C -> C
    u.aly.db D -> D
    u.aly.db E -> E
    u.aly.db F -> F
    u.aly.db G -> G
    u.aly.db H -> H
    u.aly.db I -> I
    u.aly.db J -> J
    java.util.Map K -> K
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    u.aly.bi i -> i
    boolean j -> j
    boolean k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    long n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    byte O -> L
    u.aly.ar$e[] P -> M
    java.util.Map r -> r
    u.aly.ar a(java.lang.String) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.ar b(java.lang.String) -> b
    boolean i() -> b
    void b(boolean) -> b
    u.aly.ar c(java.lang.String) -> c
    boolean l() -> c
    void c(boolean) -> c
    boolean o() -> d
    void d(boolean) -> d
    u.aly.ar e(java.lang.String) -> d
    boolean r() -> e
    void e(boolean) -> e
    u.aly.ar f(java.lang.String) -> e
    boolean u() -> f
    void f(boolean) -> f
    u.aly.ar g(java.lang.String) -> f
    boolean x() -> g
    void g(boolean) -> g
    u.aly.ar h(java.lang.String) -> g
    boolean A() -> h
    void h(boolean) -> h
    u.aly.ar a(u.aly.bi) -> a
    boolean D() -> i
    void i(boolean) -> i
    boolean G() -> j
    void k(boolean) -> j
    boolean J() -> k
    void m(boolean) -> k
    u.aly.ar i(java.lang.String) -> h
    boolean M() -> l
    void n(boolean) -> l
    u.aly.ar j(java.lang.String) -> i
    boolean P() -> m
    void o(boolean) -> m
    u.aly.ar a(long) -> a
    boolean S() -> n
    void p(boolean) -> n
    u.aly.ar k(java.lang.String) -> j
    boolean V() -> o
    void q(boolean) -> o
    u.aly.ar l(java.lang.String) -> k
    boolean Y() -> p
    void r(boolean) -> p
    u.aly.ar m(java.lang.String) -> l
    boolean ab() -> q
    void s(boolean) -> q
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void ac() -> r
    u.aly.dl ad() -> s
    u.aly.db ae() -> t
    u.aly.db af() -> u
    u.aly.db ag() -> v
    u.aly.db ah() -> w
    u.aly.db ai() -> x
    u.aly.db aj() -> y
    u.aly.db ak() -> z
    u.aly.db al() -> A
    u.aly.db am() -> B
    u.aly.db an() -> C
    u.aly.db ao() -> D
    u.aly.db ap() -> E
    u.aly.db aq() -> F
    u.aly.db ar() -> G
    u.aly.db as() -> H
    u.aly.db at() -> I
    u.aly.db au() -> J
u.aly.ar$1 -> b.a.au:
u.aly.ar$a -> b.a.av:
    void a(u.aly.dg,u.aly.ar) -> a
    void b(u.aly.dg,u.aly.ar) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ar$b -> b.a.aw:
    u.aly.ar$a a() -> a
    u.aly.do b() -> b
u.aly.ar$c -> b.a.ax:
    void a(u.aly.dg,u.aly.ar) -> a
    void b(u.aly.dg,u.aly.ar) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ar$d -> b.a.ay:
    u.aly.ar$c a() -> a
    u.aly.do b() -> b
u.aly.ar$e -> b.a.az:
    u.aly.ar$e a -> a
    u.aly.ar$e b -> b
    u.aly.ar$e c -> c
    u.aly.ar$e d -> d
    u.aly.ar$e e -> e
    u.aly.ar$e f -> f
    u.aly.ar$e g -> g
    u.aly.ar$e h -> h
    u.aly.ar$e i -> i
    u.aly.ar$e j -> j
    u.aly.ar$e k -> k
    u.aly.ar$e l -> l
    u.aly.ar$e m -> m
    u.aly.ar$e n -> n
    u.aly.ar$e o -> o
    u.aly.ar$e p -> p
    u.aly.ar$e q -> q
    java.util.Map r -> r
    short s -> s
    java.lang.String t -> t
    u.aly.ar$e[] u -> u
    u.aly.ar$e[] values() -> values
    u.aly.ar$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.at -> b.a.ba:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    long a -> a
    java.lang.String b -> b
    u.aly.au c -> c
    byte k -> j
    u.aly.at$e[] l -> k
    java.util.Map d -> d
    u.aly.at a(long) -> a
    boolean e() -> a
    void b(boolean) -> a
    u.aly.at a(java.lang.String) -> a
    void c(boolean) -> b
    u.aly.at a(u.aly.au) -> a
    boolean l() -> b
    void d(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void m() -> c
    u.aly.dl n() -> d
    u.aly.db o() -> e
    u.aly.db p() -> f
    u.aly.db q() -> g
u.aly.at$1 -> b.a.bb:
u.aly.at$a -> b.a.bc:
    void a(u.aly.dg,u.aly.at) -> a
    void b(u.aly.dg,u.aly.at) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.at$b -> b.a.bd:
    u.aly.at$a a() -> a
    u.aly.do b() -> b
u.aly.at$c -> b.a.be:
    void a(u.aly.dg,u.aly.at) -> a
    void b(u.aly.dg,u.aly.at) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.at$d -> b.a.bf:
    u.aly.at$c a() -> a
    u.aly.do b() -> b
u.aly.at$e -> b.a.bg:
    u.aly.at$e a -> a
    u.aly.at$e b -> b
    u.aly.at$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.at$e[] g -> g
    u.aly.at$e[] values() -> values
    u.aly.at$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.au -> b.a.bh:
    u.aly.au a -> a
    u.aly.au b -> b
    int c -> c
    u.aly.au[] d -> d
    u.aly.au[] values() -> values
    u.aly.au valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.au a(int) -> a
u.aly.av -> b.a.bi:
    u.aly.dl g -> g
    u.aly.db h -> h
    u.aly.db i -> i
    u.aly.db j -> j
    u.aly.db k -> k
    u.aly.db l -> l
    java.util.Map m -> m
    java.lang.String a -> a
    java.util.Map b -> b
    long c -> c
    int d -> d
    long e -> e
    byte q -> n
    u.aly.av$e[] r -> o
    java.util.Map f -> f
    void a(boolean) -> a
    void b(boolean) -> b
    boolean m() -> a
    void c(boolean) -> c
    boolean p() -> b
    void d(boolean) -> d
    boolean s() -> c
    void e(boolean) -> e
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void t() -> d
    u.aly.dl u() -> e
    u.aly.db v() -> f
    u.aly.db w() -> g
    u.aly.db x() -> h
    u.aly.db y() -> i
    u.aly.db z() -> j
u.aly.av$1 -> b.a.bj:
u.aly.av$a -> b.a.bk:
    void a(u.aly.dg,u.aly.av) -> a
    void b(u.aly.dg,u.aly.av) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.av$b -> b.a.bl:
    u.aly.av$a a() -> a
    u.aly.do b() -> b
u.aly.av$c -> b.a.bm:
    void a(u.aly.dg,u.aly.av) -> a
    void b(u.aly.dg,u.aly.av) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.av$d -> b.a.bn:
    u.aly.av$c a() -> a
    u.aly.do b() -> b
u.aly.av$e -> b.a.bo:
    u.aly.av$e a -> a
    u.aly.av$e b -> b
    u.aly.av$e c -> c
    u.aly.av$e d -> d
    u.aly.av$e e -> e
    java.util.Map f -> f
    short g -> g
    java.lang.String h -> h
    u.aly.av$e[] i -> i
    u.aly.av$e[] values() -> values
    u.aly.av$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ax -> b.a.bp:
    u.aly.dl f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    u.aly.db i -> i
    u.aly.db j -> j
    java.util.Map k -> k
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    long d -> d
    byte m -> l
    u.aly.ax$e[] n -> m
    java.util.Map e -> e
    u.aly.ax a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.ax b(java.lang.String) -> b
    boolean i() -> a
    void b(boolean) -> b
    u.aly.ax c(java.lang.String) -> c
    void c(boolean) -> c
    u.aly.ax a(long) -> a
    boolean o() -> b
    void d(boolean) -> d
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void p() -> c
    u.aly.dl q() -> d
    u.aly.db r() -> e
    u.aly.db s() -> f
    u.aly.db t() -> g
    u.aly.db u() -> h
u.aly.ax$1 -> b.a.bq:
u.aly.ax$a -> b.a.br:
    void a(u.aly.dg,u.aly.ax) -> a
    void b(u.aly.dg,u.aly.ax) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ax$b -> b.a.bs:
    u.aly.ax$a a() -> a
    u.aly.do b() -> b
u.aly.ax$c -> b.a.bt:
    void a(u.aly.dg,u.aly.ax) -> a
    void b(u.aly.dg,u.aly.ax) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ax$d -> b.a.bu:
    u.aly.ax$c a() -> a
    u.aly.do b() -> b
u.aly.ax$e -> b.a.bv:
    u.aly.ax$e a -> a
    u.aly.ax$e b -> b
    u.aly.ax$e c -> c
    u.aly.ax$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.ax$e[] h -> h
    u.aly.ax$e[] values() -> values
    u.aly.ax$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ay -> b.a.bw:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    java.lang.String a -> a
    long b -> b
    int c -> c
    byte l -> j
    java.util.Map d -> d
    java.lang.String c() -> a
    u.aly.ay a(java.lang.String) -> a
    void a(boolean) -> a
    long f() -> b
    u.aly.ay a(long) -> a
    boolean i() -> c
    void b(boolean) -> b
    int j() -> d
    u.aly.ay a(int) -> a
    boolean l() -> e
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void m() -> f
    u.aly.dl n() -> g
    u.aly.db o() -> h
    u.aly.db p() -> i
    u.aly.db q() -> j
u.aly.ay$1 -> b.a.bx:
u.aly.ay$a -> b.a.by:
    void a(u.aly.dg,u.aly.ay) -> a
    void b(u.aly.dg,u.aly.ay) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ay$b -> b.a.bz:
    u.aly.ay$a a() -> a
    u.aly.do b() -> b
u.aly.ay$c -> b.a.ca:
    void a(u.aly.dg,u.aly.ay) -> a
    void b(u.aly.dg,u.aly.ay) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ay$d -> b.a.cb:
    u.aly.ay$c a() -> a
    u.aly.do b() -> b
u.aly.ay$e -> b.a.cc:
    u.aly.ay$e a -> a
    u.aly.ay$e b -> b
    u.aly.ay$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.ay$e[] g -> g
    u.aly.ay$e[] values() -> values
    u.aly.ay$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.az -> b.a.cd:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    java.util.Map a -> a
    java.util.List b -> b
    java.lang.String c -> c
    u.aly.az$e[] j -> j
    java.util.Map d -> d
    java.util.Map d() -> a
    u.aly.az a(java.util.Map) -> a
    void a(boolean) -> a
    java.util.List j() -> b
    u.aly.az a(java.util.List) -> a
    boolean l() -> c
    void b(boolean) -> b
    boolean o() -> d
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void p() -> e
    u.aly.dl q() -> f
    u.aly.db r() -> g
    u.aly.db s() -> h
    u.aly.db t() -> i
u.aly.az$1 -> b.a.ce:
u.aly.az$a -> b.a.cf:
    void a(u.aly.dg,u.aly.az) -> a
    void b(u.aly.dg,u.aly.az) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.az$b -> b.a.cg:
    u.aly.az$a a() -> a
    u.aly.do b() -> b
u.aly.az$c -> b.a.ch:
    void a(u.aly.dg,u.aly.az) -> a
    void b(u.aly.dg,u.aly.az) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.az$d -> b.a.ci:
    u.aly.az$c a() -> a
    u.aly.do b() -> b
u.aly.az$e -> b.a.cj:
    u.aly.az$e a -> a
    u.aly.az$e b -> b
    u.aly.az$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.az$e[] g -> g
    u.aly.az$e[] values() -> values
    u.aly.az$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.b -> b.a.ck:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.ba -> b.a.cl:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    java.util.Map a -> a
    int b -> b
    java.lang.String c -> c
    byte k -> j
    java.util.Map d -> d
    java.util.Map d() -> a
    boolean f() -> b
    void a(boolean) -> a
    int h() -> c
    u.aly.ba a(int) -> a
    boolean j() -> d
    void b(boolean) -> b
    java.lang.String k() -> e
    u.aly.ba a(java.lang.String) -> a
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void n() -> f
    u.aly.dl o() -> g
    u.aly.db p() -> h
    u.aly.db q() -> i
    u.aly.db r() -> j
u.aly.ba$1 -> b.a.cm:
u.aly.ba$a -> b.a.cn:
    void a(u.aly.dg,u.aly.ba) -> a
    void b(u.aly.dg,u.aly.ba) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ba$b -> b.a.co:
    u.aly.ba$a a() -> a
    u.aly.do b() -> b
u.aly.ba$c -> b.a.cp:
    void a(u.aly.dg,u.aly.ba) -> a
    void b(u.aly.dg,u.aly.ba) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ba$d -> b.a.cq:
    u.aly.ba$c a() -> a
    u.aly.do b() -> b
u.aly.ba$e -> b.a.cr:
    u.aly.ba$e a -> a
    u.aly.ba$e b -> b
    u.aly.ba$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.ba$e[] g -> g
    u.aly.ba$e[] values() -> values
    u.aly.ba$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bb -> b.a.cs:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    java.lang.String a -> a
    long b -> b
    java.lang.String c -> c
    byte k -> j
    u.aly.bb$e[] l -> k
    java.util.Map d -> d
    java.lang.String c() -> a
    boolean e() -> b
    void a(boolean) -> a
    long f() -> c
    boolean i() -> d
    void b(boolean) -> b
    java.lang.String j() -> e
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void m() -> f
    u.aly.dl n() -> g
    u.aly.db o() -> h
    u.aly.db p() -> i
    u.aly.db q() -> j
u.aly.bb$1 -> b.a.ct:
u.aly.bb$a -> b.a.cu:
    void a(u.aly.dg,u.aly.bb) -> a
    void b(u.aly.dg,u.aly.bb) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bb$b -> b.a.cv:
    u.aly.bb$a a() -> a
    u.aly.do b() -> b
u.aly.bb$c -> b.a.cw:
    void a(u.aly.dg,u.aly.bb) -> a
    void b(u.aly.dg,u.aly.bb) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bb$d -> b.a.cx:
    u.aly.bb$c a() -> a
    u.aly.do b() -> b
u.aly.bb$e -> b.a.cy:
    u.aly.bb$e a -> a
    u.aly.bb$e b -> b
    u.aly.bb$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bb$e[] g -> g
    u.aly.bb$e[] values() -> values
    u.aly.bb$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bc -> b.a.cz:
    u.aly.dl f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    u.aly.db i -> i
    u.aly.db j -> j
    java.util.Map k -> k
    java.lang.String a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.util.List d -> d
    u.aly.bc$e[] l -> l
    java.util.Map e -> e
    java.lang.String c() -> a
    u.aly.bc a(java.lang.String) -> a
    void a(boolean) -> a
    void a(u.aly.at) -> a
    boolean k() -> b
    void b(boolean) -> b
    boolean p() -> c
    void c(boolean) -> c
    boolean u() -> d
    void d(boolean) -> d
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void v() -> e
    u.aly.dl w() -> f
    u.aly.db x() -> g
    u.aly.db y() -> h
    u.aly.db z() -> i
    u.aly.db A() -> j
u.aly.bc$1 -> b.a.da:
u.aly.bc$a -> b.a.db:
    void a(u.aly.dg,u.aly.bc) -> a
    void b(u.aly.dg,u.aly.bc) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bc$b -> b.a.dc:
    u.aly.bc$a a() -> a
    u.aly.do b() -> b
u.aly.bc$c -> b.a.dd:
    void a(u.aly.dg,u.aly.bc) -> a
    void b(u.aly.dg,u.aly.bc) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bc$d -> b.a.de:
    u.aly.bc$c a() -> a
    u.aly.do b() -> b
u.aly.bc$e -> b.a.df:
    u.aly.bc$e a -> a
    u.aly.bc$e b -> b
    u.aly.bc$e c -> c
    u.aly.bc$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.bc$e[] h -> h
    u.aly.bc$e[] values() -> values
    u.aly.bc$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bd -> b.a.dg:
    u.aly.dl d -> d
    u.aly.db e -> e
    u.aly.db f -> f
    java.util.Map g -> g
    int a -> a
    long b -> b
    byte j -> h
    java.util.Map c -> c
    boolean e() -> a
    void a(boolean) -> a
    boolean i() -> b
    void b(boolean) -> b
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void j() -> c
    u.aly.dl k() -> d
    u.aly.db l() -> e
    u.aly.db m() -> f
u.aly.bd$1 -> b.a.dh:
u.aly.bd$a -> b.a.di:
    void a(u.aly.dg,u.aly.bd) -> a
    void b(u.aly.dg,u.aly.bd) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bd$b -> b.a.dj:
    u.aly.bd$a a() -> a
    u.aly.do b() -> b
u.aly.bd$c -> b.a.dk:
    void a(u.aly.dg,u.aly.bd) -> a
    void b(u.aly.dg,u.aly.bd) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bd$d -> b.a.dl:
    u.aly.bd$c a() -> a
    u.aly.do b() -> b
u.aly.bd$e -> b.a.dm:
    u.aly.bd$e a -> a
    u.aly.bd$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bd$e[] f -> f
    u.aly.bd$e[] values() -> values
    u.aly.bd$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.be -> b.a.dn:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    double a -> a
    double b -> b
    long c -> c
    byte m -> j
    java.util.Map d -> d
    boolean e() -> a
    void a(boolean) -> a
    boolean i() -> b
    void b(boolean) -> b
    boolean l() -> c
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void m() -> d
    u.aly.dl n() -> e
    u.aly.db o() -> f
    u.aly.db p() -> g
    u.aly.db q() -> h
u.aly.be$1 -> b.a.do:
u.aly.be$a -> b.a.dp:
    void a(u.aly.dg,u.aly.be) -> a
    void b(u.aly.dg,u.aly.be) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.be$b -> b.a.dq:
    u.aly.be$a a() -> a
    u.aly.do b() -> b
u.aly.be$c -> b.a.dr:
    void a(u.aly.dg,u.aly.be) -> a
    void b(u.aly.dg,u.aly.be) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.be$d -> b.a.ds:
    u.aly.be$c a() -> a
    u.aly.do b() -> b
u.aly.be$e -> b.a.dt:
    u.aly.be$e a -> a
    u.aly.be$e b -> b
    u.aly.be$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.be$e[] g -> g
    u.aly.be$e[] values() -> values
    u.aly.be$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bf -> b.a.du:
    u.aly.dl l -> l
    u.aly.db m -> m
    u.aly.db n -> n
    u.aly.db o -> o
    u.aly.db p -> p
    u.aly.db q -> q
    u.aly.db r -> r
    u.aly.db s -> s
    u.aly.db t -> t
    u.aly.db u -> u
    u.aly.db v -> v
    java.util.Map w -> w
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    double d -> d
    double e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    u.aly.al i -> i
    java.lang.String j -> j
    byte B -> x
    u.aly.bf$e[] C -> y
    java.util.Map k -> k
    u.aly.bf a(int) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.bf a(java.lang.String) -> a
    boolean i() -> b
    void b(boolean) -> b
    u.aly.bf b(java.lang.String) -> b
    boolean l() -> c
    void c(boolean) -> c
    boolean o() -> d
    void d(boolean) -> d
    boolean r() -> e
    void e(boolean) -> e
    u.aly.bf c(java.lang.String) -> c
    boolean u() -> f
    void f(boolean) -> f
    boolean x() -> g
    void g(boolean) -> g
    boolean A() -> h
    void h(boolean) -> h
    u.aly.bf a(u.aly.al) -> a
    boolean D() -> i
    void i(boolean) -> i
    u.aly.bf e(java.lang.String) -> d
    boolean G() -> j
    void j(boolean) -> j
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void H() -> k
    u.aly.dl I() -> l
    u.aly.db J() -> m
    u.aly.db K() -> n
    u.aly.db L() -> o
    u.aly.db M() -> p
    u.aly.db N() -> q
    u.aly.db O() -> r
    u.aly.db P() -> s
    u.aly.db Q() -> t
    u.aly.db R() -> u
    u.aly.db S() -> v
u.aly.bf$1 -> b.a.dv:
u.aly.bf$a -> b.a.dw:
    void a(u.aly.dg,u.aly.bf) -> a
    void b(u.aly.dg,u.aly.bf) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bf$b -> b.a.dx:
    u.aly.bf$a a() -> a
    u.aly.do b() -> b
u.aly.bf$c -> b.a.dy:
    void a(u.aly.dg,u.aly.bf) -> a
    void b(u.aly.dg,u.aly.bf) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bf$d -> b.a.dz:
    u.aly.bf$c a() -> a
    u.aly.do b() -> b
u.aly.bf$e -> b.a.ea:
    u.aly.bf$e a -> a
    u.aly.bf$e b -> b
    u.aly.bf$e c -> c
    u.aly.bf$e d -> d
    u.aly.bf$e e -> e
    u.aly.bf$e f -> f
    u.aly.bf$e g -> g
    u.aly.bf$e h -> h
    u.aly.bf$e i -> i
    u.aly.bf$e j -> j
    java.util.Map k -> k
    short l -> l
    java.lang.String m -> m
    u.aly.bf$e[] n -> n
    u.aly.bf$e[] values() -> values
    u.aly.bf$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bg -> b.a.eb:
    u.aly.dl d -> d
    u.aly.db e -> e
    u.aly.db f -> f
    java.util.Map g -> g
    java.lang.String a -> a
    long b -> b
    byte i -> h
    java.util.Map c -> c
    u.aly.bg a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.bg a(long) -> a
    boolean i() -> a
    void b(boolean) -> b
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void j() -> b
    u.aly.dl k() -> c
    u.aly.db l() -> d
    u.aly.db m() -> e
u.aly.bg$1 -> b.a.ec:
u.aly.bg$a -> b.a.ed:
    void a(u.aly.dg,u.aly.bg) -> a
    void b(u.aly.dg,u.aly.bg) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bg$b -> b.a.ee:
    u.aly.bg$a a() -> a
    u.aly.do b() -> b
u.aly.bg$c -> b.a.ef:
    void a(u.aly.dg,u.aly.bg) -> a
    void b(u.aly.dg,u.aly.bg) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bg$d -> b.a.eg:
    u.aly.bg$c a() -> a
    u.aly.do b() -> b
u.aly.bg$e -> b.a.eh:
    u.aly.bg$e a -> a
    u.aly.bg$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bg$e[] f -> f
    u.aly.bg$e[] values() -> values
    u.aly.bg$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bh -> b.a.ei:
    u.aly.dl d -> d
    u.aly.db e -> e
    u.aly.db f -> f
    java.util.Map a -> a
    java.lang.Object a(u.aly.dg,u.aly.db) -> a
    void c(u.aly.dg) -> c
    java.lang.Object a(u.aly.dg,short) -> a
    void d(u.aly.dg) -> d
    u.aly.db a(u.aly.bh$a) -> a
    u.aly.dl c() -> a
    u.aly.bh$a a(short) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(u.aly.bh) -> a
    int hashCode() -> hashCode
    u.aly.co b(short) -> b
    u.aly.db a(u.aly.co) -> a
u.aly.bh$1 -> b.a.ej:
    int[] a -> a
u.aly.bh$a -> b.a.ek:
    u.aly.bh$a a -> a
    u.aly.bh$a b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bh$a[] f -> f
    u.aly.bh$a[] values() -> values
    u.aly.bh$a valueOf(java.lang.String) -> valueOf
    u.aly.bh$a a(int) -> a
    u.aly.bh$a b(int) -> b
    short a() -> a
    java.lang.String b() -> b
u.aly.bi -> b.a.el:
    u.aly.dl d -> d
    u.aly.db e -> e
    u.aly.db f -> f
    java.util.Map g -> g
    int a -> a
    int b -> b
    byte j -> h
    java.util.Map c -> c
    boolean e() -> a
    void a(boolean) -> a
    boolean i() -> b
    void b(boolean) -> b
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void j() -> c
    u.aly.dl k() -> d
    u.aly.db l() -> e
    u.aly.db m() -> f
u.aly.bi$1 -> b.a.em:
u.aly.bi$a -> b.a.en:
    void a(u.aly.dg,u.aly.bi) -> a
    void b(u.aly.dg,u.aly.bi) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bi$b -> b.a.eo:
    u.aly.bi$a a() -> a
    u.aly.do b() -> b
u.aly.bi$c -> b.a.ep:
    void a(u.aly.dg,u.aly.bi) -> a
    void b(u.aly.dg,u.aly.bi) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bi$d -> b.a.eq:
    u.aly.bi$c a() -> a
    u.aly.do b() -> b
u.aly.bi$e -> b.a.er:
    u.aly.bi$e a -> a
    u.aly.bi$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bi$e[] f -> f
    u.aly.bi$e[] values() -> values
    u.aly.bi$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bj -> b.a.es:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    int a -> a
    java.lang.String b -> b
    u.aly.ba c -> c
    byte k -> j
    u.aly.bj$e[] l -> k
    java.util.Map d -> d
    boolean e() -> a
    void a(boolean) -> a
    java.lang.String f() -> b
    boolean i() -> c
    void b(boolean) -> b
    u.aly.ba j() -> d
    boolean l() -> e
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void m() -> f
    u.aly.dl n() -> g
    u.aly.db o() -> h
    u.aly.db p() -> i
    u.aly.db q() -> j
u.aly.bj$1 -> b.a.et:
u.aly.bj$a -> b.a.eu:
    void a(u.aly.dg,u.aly.bj) -> a
    void b(u.aly.dg,u.aly.bj) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bj$b -> b.a.ev:
    u.aly.bj$a a() -> a
    u.aly.do b() -> b
u.aly.bj$c -> b.a.ew:
    void a(u.aly.dg,u.aly.bj) -> a
    void b(u.aly.dg,u.aly.bj) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bj$d -> b.a.ex:
    u.aly.bj$c a() -> a
    u.aly.do b() -> b
u.aly.bj$e -> b.a.ey:
    u.aly.bj$e a -> a
    u.aly.bj$e b -> b
    u.aly.bj$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bj$e[] g -> g
    u.aly.bj$e[] values() -> values
    u.aly.bj$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bk -> b.a.ez:
    u.aly.bk a -> a
    u.aly.bk b -> b
    u.aly.bk c -> c
    u.aly.bk d -> d
    int e -> e
    u.aly.bk[] f -> f
    u.aly.bk[] values() -> values
    u.aly.bk valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.bk a(int) -> a
u.aly.bl -> b.a.fa:
    u.aly.dl i -> i
    u.aly.db j -> j
    u.aly.db k -> k
    u.aly.db l -> l
    u.aly.db m -> m
    u.aly.db n -> n
    u.aly.db o -> o
    u.aly.db p -> p
    java.util.Map q -> q
    java.lang.String a -> a
    long b -> b
    long c -> c
    long d -> d
    java.util.List e -> e
    java.util.List f -> f
    u.aly.bm g -> g
    byte u -> r
    u.aly.bl$e[] v -> s
    java.util.Map h -> h
    u.aly.bl a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.bl a(long) -> a
    boolean i() -> a
    void b(boolean) -> b
    u.aly.bl b(long) -> b
    boolean l() -> b
    void c(boolean) -> c
    u.aly.bl c(long) -> c
    boolean o() -> c
    void d(boolean) -> d
    int p() -> d
    u.aly.bl a(java.util.List) -> a
    boolean t() -> e
    void e(boolean) -> e
    void a(u.aly.be) -> a
    u.aly.bl b(java.util.List) -> b
    boolean y() -> f
    void f(boolean) -> f
    u.aly.bl a(u.aly.bm) -> a
    boolean B() -> g
    void g(boolean) -> g
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void C() -> h
    u.aly.dl D() -> i
    u.aly.db E() -> j
    u.aly.db F() -> k
    u.aly.db G() -> l
    u.aly.db H() -> m
    u.aly.db I() -> n
    u.aly.db J() -> o
    u.aly.db K() -> p
u.aly.bl$1 -> b.a.fb:
u.aly.bl$a -> b.a.fc:
    void a(u.aly.dg,u.aly.bl) -> a
    void b(u.aly.dg,u.aly.bl) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bl$b -> b.a.fd:
    u.aly.bl$a a() -> a
    u.aly.do b() -> b
u.aly.bl$c -> b.a.fe:
    void a(u.aly.dg,u.aly.bl) -> a
    void b(u.aly.dg,u.aly.bl) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bl$d -> b.a.ff:
    u.aly.bl$c a() -> a
    u.aly.do b() -> b
u.aly.bl$e -> b.a.fg:
    u.aly.bl$e a -> a
    u.aly.bl$e b -> b
    u.aly.bl$e c -> c
    u.aly.bl$e d -> d
    u.aly.bl$e e -> e
    u.aly.bl$e f -> f
    u.aly.bl$e g -> g
    java.util.Map h -> h
    short i -> i
    java.lang.String j -> j
    u.aly.bl$e[] k -> k
    u.aly.bl$e[] values() -> values
    u.aly.bl$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bm -> b.a.fh:
    u.aly.dl d -> d
    u.aly.db e -> e
    u.aly.db f -> f
    java.util.Map g -> g
    int a -> a
    int b -> b
    byte j -> h
    java.util.Map c -> c
    u.aly.bm a(int) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.bm c(int) -> b
    boolean i() -> b
    void b(boolean) -> b
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void j() -> c
    u.aly.dl k() -> d
    u.aly.db l() -> e
    u.aly.db m() -> f
u.aly.bm$1 -> b.a.fi:
u.aly.bm$a -> b.a.fj:
    void a(u.aly.dg,u.aly.bm) -> a
    void b(u.aly.dg,u.aly.bm) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bm$b -> b.a.fk:
    u.aly.bm$a a() -> a
    u.aly.do b() -> b
u.aly.bm$c -> b.a.fl:
    void a(u.aly.dg,u.aly.bm) -> a
    void b(u.aly.dg,u.aly.bm) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bm$d -> b.a.fm:
    u.aly.bm$c a() -> a
    u.aly.do b() -> b
u.aly.bm$e -> b.a.fn:
    u.aly.bm$e a -> a
    u.aly.bm$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bm$e[] f -> f
    u.aly.bm$e[] values() -> values
    u.aly.bm$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bn -> b.a.fo:
    u.aly.dl m -> m
    u.aly.db n -> n
    u.aly.db o -> o
    u.aly.db p -> p
    u.aly.db q -> q
    u.aly.db r -> r
    u.aly.db s -> s
    u.aly.db t -> t
    u.aly.db u -> u
    u.aly.db v -> v
    u.aly.db w -> w
    u.aly.db x -> x
    java.util.Map y -> y
    u.aly.ap a -> a
    u.aly.ao b -> b
    u.aly.ar c -> c
    u.aly.bf d -> d
    u.aly.am e -> e
    java.util.List f -> f
    java.util.List g -> g
    u.aly.ba h -> h
    u.aly.az i -> i
    u.aly.an j -> j
    u.aly.aq k -> k
    u.aly.bn$e[] z -> z
    java.util.Map l -> l
    u.aly.bn a(u.aly.ap) -> a
    void a(boolean) -> a
    u.aly.bn a(u.aly.ao) -> a
    void b(boolean) -> b
    u.aly.bn a(u.aly.ar) -> a
    void c(boolean) -> c
    u.aly.bn a(u.aly.bf) -> a
    void d(boolean) -> d
    u.aly.bn a(u.aly.am) -> a
    boolean r() -> a
    void e(boolean) -> e
    int s() -> b
    void a(u.aly.bc) -> a
    java.util.List u() -> c
    u.aly.bn a(java.util.List) -> a
    boolean w() -> d
    void f(boolean) -> f
    void a(u.aly.bl) -> a
    java.util.List z() -> e
    u.aly.bn b(java.util.List) -> b
    boolean B() -> f
    void g(boolean) -> g
    u.aly.bn a(u.aly.ba) -> a
    boolean E() -> g
    void h(boolean) -> h
    u.aly.bn a(u.aly.az) -> a
    boolean H() -> h
    void i(boolean) -> i
    u.aly.bn a(u.aly.an) -> a
    boolean K() -> i
    void j(boolean) -> j
    u.aly.bn a(u.aly.aq) -> a
    boolean N() -> j
    void k(boolean) -> k
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void O() -> k
    u.aly.dl P() -> l
    u.aly.db Q() -> m
    u.aly.db R() -> n
    u.aly.db S() -> o
    u.aly.db T() -> p
    u.aly.db U() -> q
    u.aly.db V() -> r
    u.aly.db W() -> s
    u.aly.db X() -> t
    u.aly.db Y() -> u
    u.aly.db Z() -> v
    u.aly.db aa() -> w
u.aly.bn$1 -> b.a.fp:
u.aly.bn$a -> b.a.fq:
    void a(u.aly.dg,u.aly.bn) -> a
    void b(u.aly.dg,u.aly.bn) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bn$b -> b.a.fr:
    u.aly.bn$a a() -> a
    u.aly.do b() -> b
u.aly.bn$c -> b.a.fs:
    void a(u.aly.dg,u.aly.bn) -> a
    void b(u.aly.dg,u.aly.bn) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bn$d -> b.a.ft:
    u.aly.bn$c a() -> a
    u.aly.do b() -> b
u.aly.bn$e -> b.a.fu:
    u.aly.bn$e a -> a
    u.aly.bn$e b -> b
    u.aly.bn$e c -> c
    u.aly.bn$e d -> d
    u.aly.bn$e e -> e
    u.aly.bn$e f -> f
    u.aly.bn$e g -> g
    u.aly.bn$e h -> h
    u.aly.bn$e i -> i
    u.aly.bn$e j -> j
    u.aly.bn$e k -> k
    java.util.Map l -> l
    short m -> m
    java.lang.String n -> n
    u.aly.bn$e[] o -> o
    u.aly.bn$e[] values() -> values
    u.aly.bn$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bp -> b.a.fv:
    u.aly.dl l -> l
    u.aly.db m -> m
    u.aly.db n -> n
    u.aly.db o -> o
    u.aly.db p -> p
    u.aly.db q -> q
    u.aly.db r -> r
    u.aly.db s -> s
    u.aly.db t -> t
    u.aly.db u -> u
    u.aly.db v -> v
    java.util.Map w -> w
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    java.nio.ByteBuffer g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    byte B -> x
    u.aly.bp$e[] C -> y
    java.util.Map k -> k
    u.aly.bp a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.bp b(java.lang.String) -> b
    void b(boolean) -> b
    u.aly.bp c(java.lang.String) -> c
    void c(boolean) -> c
    u.aly.bp a(int) -> a
    boolean o() -> a
    void d(boolean) -> d
    u.aly.bp c(int) -> b
    boolean r() -> b
    void e(boolean) -> e
    u.aly.bp d(int) -> c
    boolean u() -> c
    void f(boolean) -> f
    u.aly.bp a(byte[]) -> a
    u.aly.bp a(java.nio.ByteBuffer) -> a
    void g(boolean) -> g
    u.aly.bp d(java.lang.String) -> d
    void h(boolean) -> h
    u.aly.bp e(java.lang.String) -> e
    void i(boolean) -> i
    u.aly.bp e(int) -> d
    boolean H() -> d
    void j(boolean) -> j
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void I() -> e
    u.aly.dl J() -> f
    u.aly.db K() -> g
    u.aly.db L() -> h
    u.aly.db M() -> i
    u.aly.db N() -> j
    u.aly.db O() -> k
    u.aly.db P() -> l
    u.aly.db Q() -> m
    u.aly.db R() -> n
    u.aly.db S() -> o
    u.aly.db T() -> p
u.aly.bp$1 -> b.a.fw:
u.aly.bp$a -> b.a.fx:
    void a(u.aly.dg,u.aly.bp) -> a
    void b(u.aly.dg,u.aly.bp) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bp$b -> b.a.fy:
    u.aly.bp$a a() -> a
    u.aly.do b() -> b
u.aly.bp$c -> b.a.fz:
    void a(u.aly.dg,u.aly.bp) -> a
    void b(u.aly.dg,u.aly.bp) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bp$d -> b.a.ga:
    u.aly.bp$c a() -> a
    u.aly.do b() -> b
u.aly.bp$e -> b.a.gb:
    u.aly.bp$e a -> a
    u.aly.bp$e b -> b
    u.aly.bp$e c -> c
    u.aly.bp$e d -> d
    u.aly.bp$e e -> e
    u.aly.bp$e f -> f
    u.aly.bp$e g -> g
    u.aly.bp$e h -> h
    u.aly.bp$e i -> i
    u.aly.bp$e j -> j
    java.util.Map k -> k
    short l -> l
    java.lang.String m -> m
    u.aly.bp$e[] n -> n
    u.aly.bp$e[] values() -> values
    u.aly.bp$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bq -> b.a.gc:
    java.lang.String a -> a
    java.lang.String c(android.content.Context) -> a
    java.lang.String d(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String f(android.content.Context) -> c
    java.lang.String g(android.content.Context) -> d
    java.lang.String[] j(android.content.Context) -> e
    boolean k(android.content.Context) -> f
    boolean l(android.content.Context) -> g
    int m(android.content.Context) -> h
    java.lang.String[] n(android.content.Context) -> i
    java.util.Locale x(android.content.Context) -> r
    java.lang.String o(android.content.Context) -> j
    java.lang.String p(android.content.Context) -> k
    int[] r(android.content.Context) -> l
    int a(java.lang.Object,java.lang.String) -> a
    java.lang.String s(android.content.Context) -> m
    java.lang.String t(android.content.Context) -> n
    java.lang.String u(android.content.Context) -> o
    java.lang.String v(android.content.Context) -> p
    boolean w(android.content.Context) -> q
u.aly.br -> b.a.gd:
    boolean a -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String,java.lang.String,java.lang.Exception) -> c
    void e(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> d
u.aly.bw -> b.a.ge:
    java.lang.String a -> a
    java.util.Map b -> b
    u.aly.by a(u.aly.bx,java.lang.Class) -> a
    org.json.JSONObject a(java.lang.String,org.json.JSONObject) -> a
    boolean a() -> a
    java.lang.String a(java.io.InputStream) -> a
    org.json.JSONObject a(java.lang.String) -> a
    org.apache.http.params.HttpParams b() -> b
    void b(java.lang.String) -> b
u.aly.bx -> b.a.gf:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
u.aly.by -> b.a.gg:
u.aly.c -> b.a.gh:
    byte[] a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    byte[] f -> f
    byte[] g -> g
    byte[] h -> h
    int i -> i
    int j -> j
    int k -> k
    byte[] l -> l
    byte[] m -> m
    boolean n -> n
    java.lang.String a(android.content.Context) -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    void a(int) -> a
    void a(boolean) -> a
    u.aly.c a(android.content.Context,java.lang.String,byte[]) -> a
    u.aly.c b(android.content.Context,java.lang.String,byte[]) -> b
    void b() -> b
    byte[] a(byte[],int) -> a
    byte[] d() -> d
    byte[] e() -> e
    byte[] c() -> c
    java.lang.String toString() -> toString
u.aly.cc -> b.a.gi:
    int a -> a
    byte[] a(java.lang.String,java.lang.String) -> a
    byte[] a(byte[]) -> a
u.aly.cd -> b.a.gj:
    java.lang.String a -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    boolean d(java.lang.String) -> c
    java.lang.String a(java.io.InputStream) -> a
    byte[] b(java.io.InputStream) -> b
    void a(java.io.File,byte[]) -> a
    void c(java.io.InputStream) -> c
    void a(java.io.OutputStream) -> a
    boolean a(org.apache.http.Header,java.lang.String) -> a
u.aly.ce -> b.a.gk:
    boolean a(byte,int) -> a
    boolean a(int,int) -> a
    int b(int,int) -> b
    byte a(byte,int,boolean) -> a
    int a(int,int,boolean) -> a
u.aly.cf -> b.a.gl:
    short[] a -> a
    int b -> b
    short a() -> a
    void a(short) -> a
    void d() -> c
    void c() -> b
    java.lang.String toString() -> toString
u.aly.ch -> b.a.gm:
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
u.aly.ci -> b.a.gn:
    java.util.Comparator a -> a
    int a(byte,byte) -> a
    int a(int,int) -> a
    int a(byte[],byte[]) -> a
    int a(java.lang.Comparable,java.lang.Comparable) -> a
    int a(java.util.List,java.util.List) -> a
    int a(java.util.Set,java.util.Set) -> a
    int a(java.util.Map,java.util.Map) -> a
    void a(java.nio.ByteBuffer,java.lang.StringBuilder) -> a
    java.lang.String a(byte) -> a
u.aly.ci$1 -> b.a.go:
u.aly.ci$a -> b.a.gp:
    int compare(java.lang.Object,java.lang.Object) -> compare
u.aly.ck -> b.a.gq:
    u.aly.dg a -> a
    u.aly.dt b -> b
    void a(u.aly.ch,byte[]) -> a
u.aly.cn -> b.a.gr:
u.aly.co -> b.a.gs:
    short a() -> a
u.aly.cq -> b.a.gt:
    java.io.ByteArrayOutputStream a -> a
    u.aly.ds b -> b
    u.aly.dg c -> c
    byte[] a(u.aly.ch) -> a
u.aly.cr -> b.a.gu:
    java.lang.Object b -> b
    u.aly.co c -> c
    java.util.Map a -> a
    u.aly.co i() -> b
    java.lang.Object j() -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.Object a(u.aly.dg,u.aly.db) -> a
    void c(u.aly.dg) -> c
    java.lang.Object a(u.aly.dg,short) -> a
    void d(u.aly.dg) -> d
    u.aly.dl c() -> a
    u.aly.db a(u.aly.co) -> a
    u.aly.co b(short) -> b
    java.lang.String toString() -> toString
u.aly.cr$1 -> b.a.gv:
u.aly.cr$a -> b.a.gw:
    void a(u.aly.dg,u.aly.cr) -> a
    void b(u.aly.dg,u.aly.cr) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.cr$b -> b.a.gx:
    u.aly.cr$a a() -> a
    u.aly.do b() -> b
u.aly.cr$c -> b.a.gy:
    void a(u.aly.dg,u.aly.cr) -> a
    void b(u.aly.dg,u.aly.cr) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.cr$d -> b.a.gz:
    u.aly.cr$c a() -> a
    u.aly.do b() -> b
u.aly.cs -> b.a.ha:
    java.lang.Class a -> a
u.aly.ct -> b.a.hb:
    java.lang.String a -> a
    byte b -> b
    u.aly.cu c -> c
    java.util.Map d -> d
    void a(java.lang.Class,java.util.Map) -> a
u.aly.cu -> b.a.hc:
    byte b -> b
    boolean a -> a
    java.lang.String c -> c
    boolean d -> d
u.aly.cv -> b.a.hd:
    u.aly.cu a -> a
u.aly.cw -> b.a.he:
    u.aly.cu a -> a
    u.aly.cu c -> c
u.aly.cy -> b.a.hf:
    java.lang.Class a -> a
u.aly.cz -> b.a.hg:
    u.aly.dl h -> f
    boolean c -> a
    boolean d -> b
    int e -> c
    boolean f -> d
    byte[] i -> g
    byte[] j -> h
    byte[] k -> i
    byte[] l -> j
    byte[] m -> k
    byte[] n -> l
    byte[] o -> m
    byte[] p -> n
    void a(u.aly.dl) -> a
    void b() -> a
    void a(u.aly.db) -> a
    void c() -> b
    void d() -> c
    void a(u.aly.dd) -> a
    void e() -> d
    void a(u.aly.dc) -> a
    void f() -> e
    void a(boolean) -> a
    void a(byte) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    u.aly.dl j() -> f
    void k() -> g
    u.aly.db l() -> h
    void m() -> i
    u.aly.dd n() -> j
    void o() -> k
    u.aly.dc p() -> l
    void q() -> m
    u.aly.dk r() -> n
    void s() -> o
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.lang.String b(int) -> b
    java.nio.ByteBuffer A() -> w
    int a(byte[],int,int) -> a
    void c(int) -> c
    void d(int) -> d
u.aly.cz$a -> b.a.hh:
    boolean a -> a
    boolean b -> b
    int c -> c
    u.aly.dg a(u.aly.du) -> a
u.aly.d -> b.a.hi:
    java.lang.String b -> b
    java.io.File c -> c
    u.aly.az d -> d
    long e -> e
    long f -> f
    java.util.Set g -> g
    u.aly.d$a h -> h
    u.aly.d a -> a
    u.aly.d a(android.content.Context) -> a
    boolean a(u.aly.a) -> a
    void a() -> a
    u.aly.az b() -> b
    void g() -> f
    void d() -> c
    void e() -> d
    void f() -> e
    u.aly.az h() -> g
    void a(u.aly.az) -> a
u.aly.d$a -> b.a.hj:
    android.content.Context a -> a
    java.util.Set b -> b
    boolean a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    void b() -> b
u.aly.da -> b.a.hk:
    u.aly.dl d -> d
    u.aly.db e -> f
    byte[] f -> g
    u.aly.cf m -> h
    short n -> i
    u.aly.db o -> j
    java.lang.Boolean p -> k
    long q -> l
    byte[] a -> a
    byte[] b -> b
    byte[] r -> m
    byte[] c -> c
    void B() -> x
    void a(u.aly.dl) -> a
    void b() -> a
    void a(u.aly.db) -> a
    void a(u.aly.db,byte) -> a
    void d() -> c
    void a(u.aly.dd) -> a
    void a(u.aly.dc) -> a
    void a(boolean) -> a
    void a(byte) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    void a(byte[],int,int) -> a
    void e() -> d
    void f() -> e
    void c() -> b
    void a(byte,int) -> a
    void b(int) -> b
    void b(long) -> b
    long c(long) -> c
    int c(int) -> c
    void a(long,byte[],int) -> a
    void b(byte) -> b
    void d(int) -> d
    u.aly.dl j() -> f
    void k() -> g
    u.aly.db l() -> h
    u.aly.dd n() -> j
    u.aly.dc p() -> l
    u.aly.dk r() -> n
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.nio.ByteBuffer A() -> w
    byte[] e(int) -> e
    void f(int) -> f
    void m() -> i
    void o() -> k
    void q() -> m
    void s() -> o
    int E() -> z
    long F() -> A
    int g(int) -> g
    long d(long) -> d
    long a(byte[]) -> a
    boolean c(byte) -> c
    byte d(byte) -> d
    byte e(byte) -> e
u.aly.da$a -> b.a.hl:
    long a -> a
    u.aly.dg a(u.aly.du) -> a
u.aly.db -> b.a.hm:
    java.lang.String a -> a
    byte b -> b
    short c -> c
    java.lang.String toString() -> toString
u.aly.dc -> b.a.hn:
    byte a -> a
    int b -> b
u.aly.dd -> b.a.ho:
    byte a -> a
    byte b -> b
    int c -> c
u.aly.dg -> b.a.hp:
    u.aly.du g -> e
    void a(u.aly.dl) -> a
    void b() -> a
    void a(u.aly.db) -> a
    void c() -> b
    void d() -> c
    void a(u.aly.dd) -> a
    void e() -> d
    void a(u.aly.dc) -> a
    void f() -> e
    void a(boolean) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    u.aly.dl j() -> f
    void k() -> g
    u.aly.db l() -> h
    void m() -> i
    u.aly.dd n() -> j
    void o() -> k
    u.aly.dc p() -> l
    void q() -> m
    u.aly.dk r() -> n
    void s() -> o
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.nio.ByteBuffer A() -> w
    void B() -> x
    java.lang.Class D() -> y
u.aly.dh -> b.a.hq:
    int g -> a
u.aly.di -> b.a.hr:
    u.aly.dg a(u.aly.du) -> a
u.aly.dj -> b.a.hs:
    int a -> a
    void a(u.aly.dg,byte) -> a
    void a(u.aly.dg,byte,int) -> a
u.aly.dk -> b.a.ht:
    byte a -> a
    int b -> b
u.aly.dl -> b.a.hu:
    java.lang.String a -> a
u.aly.dm -> b.a.hv:
    java.lang.Class D() -> y
    void a(java.util.BitSet,int) -> a
    java.util.BitSet b(int) -> b
    java.util.BitSet a(byte[]) -> a
    byte[] b(java.util.BitSet,int) -> b
u.aly.do -> b.a.hw:
    void b(u.aly.dg,u.aly.ch) -> b
    void a(u.aly.dg,u.aly.ch) -> a
u.aly.dp -> b.a.hx:
    u.aly.do b() -> b
u.aly.dq -> b.a.hy:
u.aly.dr -> b.a.hz:
u.aly.ds -> b.a.ia:
    java.io.InputStream a -> a
    java.io.OutputStream b -> b
    int a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
u.aly.dt -> b.a.ib:
    byte[] a -> a
    int b -> b
    int c -> c
    void a(byte[]) -> a
    void c(byte[],int,int) -> c
    void e() -> a
    int a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
    byte[] f() -> b
    int g() -> c
    int h() -> d
    void a(int) -> a
u.aly.du -> b.a.ic:
    int a(byte[],int,int) -> a
    int d(byte[],int,int) -> d
    void b(byte[]) -> b
    void b(byte[],int,int) -> b
    byte[] f() -> b
    int g() -> c
    int h() -> d
    void a(int) -> a
u.aly.dv -> b.a.id:
    int f -> a
u.aly.e -> b.a.ie:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.f -> b.a.if:
    byte[] b -> a
    u.aly.w c -> b
    u.aly.ba d -> c
    u.aly.f e -> d
    android.content.Context f -> e
    u.aly.f a(android.content.Context) -> a
    void a(u.aly.w) -> a
    java.lang.String a(u.aly.ba) -> a
    boolean c(u.aly.ba) -> c
    byte[] a(u.aly.bb) -> a
    void b(u.aly.ba) -> b
    u.aly.ba a(u.aly.ba,u.aly.ba) -> a
    void e() -> d
    int a(java.lang.String) -> a
    u.aly.ba a() -> a
    void b() -> b
    void c() -> c
u.aly.g -> b.a.ig:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.h -> b.a.ih:
    java.lang.String f() -> f
u.aly.i -> b.a.ii:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.j -> b.a.ij:
    java.util.regex.Pattern c -> a
    android.content.Context d -> b
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String b(java.lang.String) -> b
    java.io.File h() -> h
u.aly.k -> b.a.ik:
    u.aly.s a -> a
    com.umeng.analytics.h b -> b
    u.aly.aa c -> c
    u.aly.ak d -> d
    u.aly.k$a e -> e
    int f -> f
    int g -> g
    android.content.Context h -> h
    void a() -> a
    void a(u.aly.q) -> a
    void b(u.aly.q) -> b
    void b() -> b
    void a(boolean) -> a
    void d(int) -> d
    void a(u.aly.bn) -> a
    u.aly.bn a(int[]) -> a
    u.aly.bn a(byte[]) -> a
    byte[] b(u.aly.bn) -> b
    boolean b(boolean) -> b
    boolean d() -> c
    void e() -> d
    boolean f() -> e
    void e(int) -> e
    void a(int,long) -> a
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    com.umeng.analytics.h a(u.aly.k) -> a
    u.aly.aa b(u.aly.k) -> b
    u.aly.ak c(u.aly.k) -> c
    android.content.Context d(u.aly.k) -> d
    void a(u.aly.k,int) -> a
u.aly.k$1 -> b.a.il:
    u.aly.k a -> a
    void a() -> a
u.aly.k$a -> b.a.im:
    long b -> b
    int c -> c
    int d -> d
    com.umeng.analytics.ReportPolicy$g e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    boolean j -> j
    u.aly.k a -> a
    void a() -> a
    boolean b() -> b
    com.umeng.analytics.ReportPolicy$g c() -> c
    com.umeng.analytics.ReportPolicy$g b(int,int) -> b
    int c(int) -> c
    void d() -> d
    void a(int) -> a
    void b(int) -> b
    void a(int,int) -> a
u.aly.l -> b.a.in:
    u.aly.p a -> a
    android.content.Context b -> b
    u.aly.l c -> c
    u.aly.l a(android.content.Context) -> a
    void a(com.umeng.analytics.onlineconfig.a) -> a
    void a(u.aly.q) -> a
    void b(u.aly.q) -> b
    void b() -> b
    u.aly.p a(u.aly.l) -> a
u.aly.l$1 -> b.a.io:
    u.aly.q a -> a
    u.aly.l b -> b
    void a() -> a
u.aly.l$3 -> b.a.ip:
    u.aly.l a -> a
    void a() -> a
u.aly.m -> b.a.iq:
    java.lang.String a -> a
    boolean b -> b
    android.content.SharedPreferences c -> c
    java.util.Map d -> d
    void a(boolean) -> a
u.aly.n -> b.a.ir:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    u.aly.v b -> b
    void a(u.aly.v) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void a(java.lang.Throwable) -> a
u.aly.o -> b.a.is:
    int a -> a
    int b -> b
    u.aly.m c -> c
    android.content.Context d -> d
    u.aly.l e -> e
u.aly.p -> b.a.it:
    void b(u.aly.q) -> b
    void a(u.aly.q) -> a
    void b() -> b
u.aly.q -> b.a.iu:
    void a(u.aly.bn,java.lang.String) -> a
u.aly.r -> b.a.iv:
    void a() -> k
    void b() -> l
    void c() -> m
    void d() -> n
u.aly.s -> b.a.iw:
    java.util.List a -> a
    u.aly.am b -> b
    u.aly.ao c -> c
    u.aly.ar d -> d
    u.aly.bf e -> e
    android.content.Context f -> f
    int b() -> a
    void a(u.aly.q) -> a
    void a(u.aly.bn) -> a
    void a(u.aly.am) -> a
    u.aly.ao c() -> b
    u.aly.ar d() -> c
    u.aly.bf e() -> d
    u.aly.ba f() -> e
    u.aly.az g() -> f
    u.aly.ap h() -> g
    u.aly.an i() -> h
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
u.aly.t -> b.a.ix:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    android.content.Context d -> d
    u.aly.r e -> e
    void a(u.aly.r) -> a
    byte[] a(byte[]) -> a
    boolean a() -> a
    byte[] a(byte[],java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
u.aly.v -> b.a.iy:
    void a(java.lang.Throwable) -> a
u.aly.w -> b.a.iz:
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
u.aly.x -> b.a.ja:
    android.content.SharedPreferences a(android.content.Context,java.lang.String) -> a
    android.content.SharedPreferences a(android.content.Context) -> a
u.aly.y -> b.a.jb:
    u.aly.d d -> a
    u.aly.f e -> b
    int f -> c
    android.content.Context g -> d
    u.aly.aa h -> e
    u.aly.t i -> f
    u.aly.bn j -> g
    boolean k -> h
    boolean l -> i
    void a(u.aly.bn) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void a(u.aly.w) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    int a(byte[]) -> a
    byte[] b(u.aly.bn) -> b
    u.aly.t a(u.aly.y) -> a
    int a(u.aly.y,byte[]) -> a
    u.aly.aa b(u.aly.y) -> b
    boolean c(u.aly.y) -> c
u.aly.y$1 -> b.a.jc:
    u.aly.y a -> a
    void a(java.io.File) -> a
    boolean b(java.io.File) -> b
    void c(java.io.File) -> c
u.aly.z -> b.a.jd:
    java.lang.String d -> a
    java.lang.String e -> b
    java.lang.String g -> c
    u.aly.aj a(android.content.Context) -> a
    void a(android.content.SharedPreferences) -> a
    java.lang.String b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    boolean b(android.content.SharedPreferences) -> b
    java.lang.String a(android.content.Context,android.content.SharedPreferences) -> a
    java.lang.String g(android.content.Context) -> e
